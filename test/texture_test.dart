import 'dart:ffi';
import 'dart:typed_data';
import 'package:ffi/ffi.dart';
import 'package:test/test.dart';
import '../lib/assimp.dart';
import '../lib/src/bindings.dart';
import 'test_utils.dart';

// DO NOT EDIT (generated by tool/testgen)

void main() {
  prepareTest();

  test('null', () {
    expect(Texture.fromNative(null), isNull);
  });

  test('size', () {
    expect(sizeOf<aiTexture>(), equals(1064));
  });

  test('equals', () {
    final a = Texture.fromNative(allocate<aiTexture>());
    final b = Texture.fromNative(allocate<aiTexture>());
    expect(a, equals(a));
    expect(b, equals(b));
    expect(a, isNot(equals(b)));
    expect(b, isNot(equals(a)));
  });

  test('toString', () {
    expect(Texture.fromNative(allocate<aiTexture>()).toString(), matches(r'Texture\(Pointer<aiTexture>: address=0x[0-f]+\)'));
  });

  test('3mf', () {
    testScene('3mf/box.3mf', (scene) {
      final textures = scene.textures;
      expect(textures, isEmpty);
      expect(textures.length, isZero);
    });
    testScene('3mf/spider.3mf', (scene) {
      final textures = scene.textures;
      expect(textures, isEmpty);
      expect(textures.length, isZero);
    });
  });

  test('fbx', () {
    testScene('fbx/huesitos.fbx', (scene) {
      final textures = scene.textures;
      expect(textures, isEmpty);
      expect(textures.length, isZero);
    });
  });

  test('obj', () {
    testScene('Obj/Spider/spider.obj', (scene) {
      final textures = scene.textures;
      expect(textures, isEmpty);
      expect(textures.length, isZero);
    });
  });

}

import 'dart:ffi';
import 'dart:typed_data';
import 'package:ffi/ffi.dart';
import 'package:test/test.dart';
import '../lib/assimp.dart';
import '../lib/src/bindings.dart';
import 'test_utils.dart';

// DO NOT EDIT (generated by tool/testgen)

void main() {
  prepareTest();

  test('null', () {
    expect(Animation.fromNative(null), isNull);
  });

  test('size', () {
    expect(sizeOf<aiAnimation>(), equals(1096));
  });

  test('equals', () {
    final a = Animation.fromNative(allocate<aiAnimation>());
    final b = Animation.fromNative(allocate<aiAnimation>());
    expect(a, equals(a));
    expect(b, equals(b));
    expect(a, isNot(equals(b)));
    expect(b, isNot(equals(a)));
  });

  test('toString', () {
    expect(Animation.fromNative(allocate<aiAnimation>()).toString(), matches(r'Animation\(Pointer<aiAnimation>: address=0x[0-f]+\)'));
  });

  test('3mf', () {
    testScene('3mf/box.3mf', (scene) {
      final animations = scene.animations;
      expect(animations, isEmpty);
      expect(animations.length, isZero);
    });
    testScene('3mf/spider.3mf', (scene) {
      final animations = scene.animations;
      expect(animations, isEmpty);
      expect(animations.length, isZero);
    });
  });

  test('fbx', () {
    testScene('fbx/huesitos.fbx', (scene) {
      final animations = scene.animations;
      expect(animations, isNotEmpty);
      expect(animations.length, equals(1));
      final animation_0 = animations.elementAt(0);
      expect(animation_0.name, equals('Armature|Action'));
      expect(animation_0.duration, moreOrLessEquals(39));
      expect(animation_0.ticksPerSecond, moreOrLessEquals(25));
      expect(animation_0.channels.length, equals(10));
      final  channel_0_0 = animation_0.channels.elementAt(0);
      expect(channel_0_0.positionKeys.length, equals(2));
      final positionKey_0_0_0 = channel_0_0.positionKeys.elementAt(0);
      expect(positionKey_0_0_0.time, isZero);
      expect(positionKey_0_0_0.value, vector3MoreOrLessEquals(Vector3(-4.024, 0, -307.135)));
      final positionKey_0_0_1 = channel_0_0.positionKeys.elementAt(1);
      expect(positionKey_0_0_1.time, moreOrLessEquals(39));
      expect(positionKey_0_0_1.value, vector3MoreOrLessEquals(Vector3(-4.024, 0, -307.135)));
      expect(channel_0_0.rotationKeys.length, equals(2));
      final rotationKey_0_0_0 = channel_0_0.rotationKeys.elementAt(0);
      expect(rotationKey_0_0_0.time, isZero);
      expect(rotationKey_0_0_0.value, quaternionMoreOrLessEquals(Quaternion(-0.707107, 0, 0, 0)));
      final rotationKey_0_0_1 = channel_0_0.rotationKeys.elementAt(1);
      expect(rotationKey_0_0_1.time, moreOrLessEquals(39));
      expect(rotationKey_0_0_1.value, quaternionMoreOrLessEquals(Quaternion(-0.707107, 0, 0, 0)));
      expect(channel_0_0.scalingKeys.length, equals(2));
      final scalingKey_0_0_0 = channel_0_0.scalingKeys.elementAt(0);
      expect(scalingKey_0_0_0.time, isZero);
      expect(scalingKey_0_0_0.value, vector3MoreOrLessEquals(Vector3(100, 100, 100)));
      final scalingKey_0_0_1 = channel_0_0.scalingKeys.elementAt(1);
      expect(scalingKey_0_0_1.time, moreOrLessEquals(39));
      expect(scalingKey_0_0_1.value, vector3MoreOrLessEquals(Vector3(100, 100, 100)));
      expect(channel_0_0.preState, equals(AnimBehavior.defaults));
      expect(channel_0_0.postState, equals(AnimBehavior.defaults));
      final  channel_0_1 = animation_0.channels.elementAt(1);
      expect(channel_0_1.positionKeys.length, equals(11));
      final positionKey_0_1_0 = channel_0_1.positionKeys.elementAt(0);
      expect(positionKey_0_1_0.time, isZero);
      expect(positionKey_0_1_0.value, vector3MoreOrLessEquals(Vector3(5.96046e-08, -1.19209e-07, 0)));
      final positionKey_0_1_1 = channel_0_1.positionKeys.elementAt(1);
      expect(positionKey_0_1_1.time, moreOrLessEquals(30));
      expect(positionKey_0_1_1.value, vector3MoreOrLessEquals(Vector3(5.96046e-08, -1.19209e-07, 0)));
      final positionKey_0_1_2 = channel_0_1.positionKeys.elementAt(2);
      expect(positionKey_0_1_2.time, moreOrLessEquals(31));
      expect(positionKey_0_1_2.value, vector3MoreOrLessEquals(Vector3(5.96046e-08, -1.19209e-07, 0)));
      final positionKey_0_1_3 = channel_0_1.positionKeys.elementAt(3);
      expect(positionKey_0_1_3.time, moreOrLessEquals(32));
      expect(positionKey_0_1_3.value, vector3MoreOrLessEquals(Vector3(5.96046e-08, -1.19209e-07, 0)));
      final positionKey_0_1_4 = channel_0_1.positionKeys.elementAt(4);
      expect(positionKey_0_1_4.time, moreOrLessEquals(33));
      expect(positionKey_0_1_4.value, vector3MoreOrLessEquals(Vector3(5.96046e-08, -1.19209e-07, 0)));
      final positionKey_0_1_5 = channel_0_1.positionKeys.elementAt(5);
      expect(positionKey_0_1_5.time, moreOrLessEquals(34));
      expect(positionKey_0_1_5.value, vector3MoreOrLessEquals(Vector3(5.96046e-08, -1.19209e-07, 0)));
      final positionKey_0_1_6 = channel_0_1.positionKeys.elementAt(6);
      expect(positionKey_0_1_6.time, moreOrLessEquals(35));
      expect(positionKey_0_1_6.value, vector3MoreOrLessEquals(Vector3(5.96046e-08, -1.19209e-07, 0)));
      final positionKey_0_1_7 = channel_0_1.positionKeys.elementAt(7);
      expect(positionKey_0_1_7.time, moreOrLessEquals(36));
      expect(positionKey_0_1_7.value, vector3MoreOrLessEquals(Vector3(5.96046e-08, -1.19209e-07, 0)));
      final positionKey_0_1_8 = channel_0_1.positionKeys.elementAt(8);
      expect(positionKey_0_1_8.time, moreOrLessEquals(37));
      expect(positionKey_0_1_8.value, vector3MoreOrLessEquals(Vector3(5.96046e-08, -1.19209e-07, 0)));
      final positionKey_0_1_9 = channel_0_1.positionKeys.elementAt(9);
      expect(positionKey_0_1_9.time, moreOrLessEquals(38));
      expect(positionKey_0_1_9.value, vector3MoreOrLessEquals(Vector3(5.96046e-08, -1.19209e-07, 0)));
      final positionKey_0_1_10 = channel_0_1.positionKeys.elementAt(10);
      expect(positionKey_0_1_10.time, moreOrLessEquals(39));
      expect(positionKey_0_1_10.value, vector3MoreOrLessEquals(Vector3(5.96046e-08, -1.19209e-07, 0)));
      expect(channel_0_1.rotationKeys.length, equals(11));
      final rotationKey_0_1_0 = channel_0_1.rotationKeys.elementAt(0);
      expect(rotationKey_0_1_0.time, isZero);
      expect(rotationKey_0_1_0.value, quaternionMoreOrLessEquals(Quaternion(0.707107, 0, 0, 0)));
      final rotationKey_0_1_1 = channel_0_1.rotationKeys.elementAt(1);
      expect(rotationKey_0_1_1.time, moreOrLessEquals(30));
      expect(rotationKey_0_1_1.value, quaternionMoreOrLessEquals(Quaternion(0.707107, 0, 0, 0)));
      final rotationKey_0_1_2 = channel_0_1.rotationKeys.elementAt(2);
      expect(rotationKey_0_1_2.time, moreOrLessEquals(31));
      expect(rotationKey_0_1_2.value, quaternionMoreOrLessEquals(Quaternion(0.709752, 0, 0, 0)));
      final rotationKey_0_1_3 = channel_0_1.rotationKeys.elementAt(3);
      expect(rotationKey_0_1_3.time, moreOrLessEquals(32));
      expect(rotationKey_0_1_3.value, quaternionMoreOrLessEquals(Quaternion(0.717637, 0, 0, 0)));
      final rotationKey_0_1_4 = channel_0_1.rotationKeys.elementAt(4);
      expect(rotationKey_0_1_4.time, moreOrLessEquals(33));
      expect(rotationKey_0_1_4.value, quaternionMoreOrLessEquals(Quaternion(0.730125, 0, 0, 0)));
      final rotationKey_0_1_5 = channel_0_1.rotationKeys.elementAt(5);
      expect(rotationKey_0_1_5.time, moreOrLessEquals(34));
      expect(rotationKey_0_1_5.value, quaternionMoreOrLessEquals(Quaternion(0.745686, 0, 0, 0)));
      final rotationKey_0_1_6 = channel_0_1.rotationKeys.elementAt(6);
      expect(rotationKey_0_1_6.time, moreOrLessEquals(35));
      expect(rotationKey_0_1_6.value, quaternionMoreOrLessEquals(Quaternion(0.762039, 0, 0, 0)));
      final rotationKey_0_1_7 = channel_0_1.rotationKeys.elementAt(7);
      expect(rotationKey_0_1_7.time, moreOrLessEquals(36));
      expect(rotationKey_0_1_7.value, quaternionMoreOrLessEquals(Quaternion(0.776768, 0, 0, 0)));
      final rotationKey_0_1_8 = channel_0_1.rotationKeys.elementAt(8);
      expect(rotationKey_0_1_8.time, moreOrLessEquals(37));
      expect(rotationKey_0_1_8.value, quaternionMoreOrLessEquals(Quaternion(0.788041, 0, 0, 0)));
      final rotationKey_0_1_9 = channel_0_1.rotationKeys.elementAt(9);
      expect(rotationKey_0_1_9.time, moreOrLessEquals(38));
      expect(rotationKey_0_1_9.value, quaternionMoreOrLessEquals(Quaternion(0.794922, 0, 0, 0)));
      final rotationKey_0_1_10 = channel_0_1.rotationKeys.elementAt(10);
      expect(rotationKey_0_1_10.time, moreOrLessEquals(39));
      expect(rotationKey_0_1_10.value, quaternionMoreOrLessEquals(Quaternion(0.797191, 0, 0, 0)));
      expect(channel_0_1.scalingKeys.length, equals(11));
      final scalingKey_0_1_0 = channel_0_1.scalingKeys.elementAt(0);
      expect(scalingKey_0_1_0.time, isZero);
      expect(scalingKey_0_1_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_1 = channel_0_1.scalingKeys.elementAt(1);
      expect(scalingKey_0_1_1.time, moreOrLessEquals(30));
      expect(scalingKey_0_1_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_2 = channel_0_1.scalingKeys.elementAt(2);
      expect(scalingKey_0_1_2.time, moreOrLessEquals(31));
      expect(scalingKey_0_1_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_3 = channel_0_1.scalingKeys.elementAt(3);
      expect(scalingKey_0_1_3.time, moreOrLessEquals(32));
      expect(scalingKey_0_1_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_4 = channel_0_1.scalingKeys.elementAt(4);
      expect(scalingKey_0_1_4.time, moreOrLessEquals(33));
      expect(scalingKey_0_1_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_5 = channel_0_1.scalingKeys.elementAt(5);
      expect(scalingKey_0_1_5.time, moreOrLessEquals(34));
      expect(scalingKey_0_1_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_6 = channel_0_1.scalingKeys.elementAt(6);
      expect(scalingKey_0_1_6.time, moreOrLessEquals(35));
      expect(scalingKey_0_1_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_7 = channel_0_1.scalingKeys.elementAt(7);
      expect(scalingKey_0_1_7.time, moreOrLessEquals(36));
      expect(scalingKey_0_1_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_8 = channel_0_1.scalingKeys.elementAt(8);
      expect(scalingKey_0_1_8.time, moreOrLessEquals(37));
      expect(scalingKey_0_1_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_9 = channel_0_1.scalingKeys.elementAt(9);
      expect(scalingKey_0_1_9.time, moreOrLessEquals(38));
      expect(scalingKey_0_1_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_10 = channel_0_1.scalingKeys.elementAt(10);
      expect(scalingKey_0_1_10.time, moreOrLessEquals(39));
      expect(scalingKey_0_1_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_1.preState, equals(AnimBehavior.defaults));
      expect(channel_0_1.postState, equals(AnimBehavior.defaults));
      final  channel_0_2 = animation_0.channels.elementAt(2);
      expect(channel_0_2.positionKeys.length, equals(40));
      final positionKey_0_2_0 = channel_0_2.positionKeys.elementAt(0);
      expect(positionKey_0_2_0.time, isZero);
      expect(positionKey_0_2_0.value, vector3MoreOrLessEquals(Vector3(0, 0.70501, 3.55271e-15)));
      final positionKey_0_2_1 = channel_0_2.positionKeys.elementAt(1);
      expect(positionKey_0_2_1.time, moreOrLessEquals(1));
      expect(positionKey_0_2_1.value, vector3MoreOrLessEquals(Vector3(-6.69833e-19, 0.70501, -2.67674e-10)));
      final positionKey_0_2_2 = channel_0_2.positionKeys.elementAt(2);
      expect(positionKey_0_2_2.time, moreOrLessEquals(2));
      expect(positionKey_0_2_2.value, vector3MoreOrLessEquals(Vector3(-1.33967e-18, 0.70501, -5.35351e-10)));
      final positionKey_0_2_3 = channel_0_2.positionKeys.elementAt(3);
      expect(positionKey_0_2_3.time, moreOrLessEquals(3));
      expect(positionKey_0_2_3.value, vector3MoreOrLessEquals(Vector3(-2.0095e-18, 0.70501, -8.03028e-10)));
      final positionKey_0_2_4 = channel_0_2.positionKeys.elementAt(4);
      expect(positionKey_0_2_4.time, moreOrLessEquals(4));
      expect(positionKey_0_2_4.value, vector3MoreOrLessEquals(Vector3(-2.67933e-18, 0.70501, -1.07071e-09)));
      final positionKey_0_2_5 = channel_0_2.positionKeys.elementAt(5);
      expect(positionKey_0_2_5.time, moreOrLessEquals(5));
      expect(positionKey_0_2_5.value, vector3MoreOrLessEquals(Vector3(-3.34917e-18, 0.70501, -1.33838e-09)));
      final positionKey_0_2_6 = channel_0_2.positionKeys.elementAt(6);
      expect(positionKey_0_2_6.time, moreOrLessEquals(6));
      expect(positionKey_0_2_6.value, vector3MoreOrLessEquals(Vector3(-4.019e-18, 0.70501, -1.60606e-09)));
      final positionKey_0_2_7 = channel_0_2.positionKeys.elementAt(7);
      expect(positionKey_0_2_7.time, moreOrLessEquals(7));
      expect(positionKey_0_2_7.value, vector3MoreOrLessEquals(Vector3(-4.68883e-18, 0.70501, -1.87374e-09)));
      final positionKey_0_2_8 = channel_0_2.positionKeys.elementAt(8);
      expect(positionKey_0_2_8.time, moreOrLessEquals(8));
      expect(positionKey_0_2_8.value, vector3MoreOrLessEquals(Vector3(-5.35867e-18, 0.70501, -2.14141e-09)));
      final positionKey_0_2_9 = channel_0_2.positionKeys.elementAt(9);
      expect(positionKey_0_2_9.time, moreOrLessEquals(9));
      expect(positionKey_0_2_9.value, vector3MoreOrLessEquals(Vector3(-6.0285e-18, 0.70501, -2.40909e-09)));
      final positionKey_0_2_10 = channel_0_2.positionKeys.elementAt(10);
      expect(positionKey_0_2_10.time, moreOrLessEquals(10));
      expect(positionKey_0_2_10.value, vector3MoreOrLessEquals(Vector3(-6.69833e-18, 0.70501, -2.67677e-09)));
      final positionKey_0_2_11 = channel_0_2.positionKeys.elementAt(11);
      expect(positionKey_0_2_11.time, moreOrLessEquals(11));
      expect(positionKey_0_2_11.value, vector3MoreOrLessEquals(Vector3(-7.36817e-18, 0.70501, -2.94445e-09)));
      final positionKey_0_2_12 = channel_0_2.positionKeys.elementAt(12);
      expect(positionKey_0_2_12.time, moreOrLessEquals(12));
      expect(positionKey_0_2_12.value, vector3MoreOrLessEquals(Vector3(-8.038e-18, 0.70501, -3.21212e-09)));
      final positionKey_0_2_13 = channel_0_2.positionKeys.elementAt(13);
      expect(positionKey_0_2_13.time, moreOrLessEquals(13));
      expect(positionKey_0_2_13.value, vector3MoreOrLessEquals(Vector3(-8.70783e-18, 0.70501, -3.4798e-09)));
      final positionKey_0_2_14 = channel_0_2.positionKeys.elementAt(14);
      expect(positionKey_0_2_14.time, moreOrLessEquals(14));
      expect(positionKey_0_2_14.value, vector3MoreOrLessEquals(Vector3(-9.37767e-18, 0.70501, -3.74748e-09)));
      final positionKey_0_2_15 = channel_0_2.positionKeys.elementAt(15);
      expect(positionKey_0_2_15.time, moreOrLessEquals(15));
      expect(positionKey_0_2_15.value, vector3MoreOrLessEquals(Vector3(-1.00475e-17, 0.70501, -4.01515e-09)));
      final positionKey_0_2_16 = channel_0_2.positionKeys.elementAt(16);
      expect(positionKey_0_2_16.time, moreOrLessEquals(16));
      expect(positionKey_0_2_16.value, vector3MoreOrLessEquals(Vector3(-1.07173e-17, 0.70501, -4.28283e-09)));
      final positionKey_0_2_17 = channel_0_2.positionKeys.elementAt(17);
      expect(positionKey_0_2_17.time, moreOrLessEquals(17));
      expect(positionKey_0_2_17.value, vector3MoreOrLessEquals(Vector3(-1.13872e-17, 0.70501, -4.55051e-09)));
      final positionKey_0_2_18 = channel_0_2.positionKeys.elementAt(18);
      expect(positionKey_0_2_18.time, moreOrLessEquals(18));
      expect(positionKey_0_2_18.value, vector3MoreOrLessEquals(Vector3(-1.2057e-17, 0.70501, -4.81819e-09)));
      final positionKey_0_2_19 = channel_0_2.positionKeys.elementAt(19);
      expect(positionKey_0_2_19.time, moreOrLessEquals(19));
      expect(positionKey_0_2_19.value, vector3MoreOrLessEquals(Vector3(-1.27268e-17, 0.70501, -5.08586e-09)));
      final positionKey_0_2_20 = channel_0_2.positionKeys.elementAt(20);
      expect(positionKey_0_2_20.time, moreOrLessEquals(20));
      expect(positionKey_0_2_20.value, vector3MoreOrLessEquals(Vector3(-1.33967e-17, 0.70501, -5.35354e-09)));
      final positionKey_0_2_21 = channel_0_2.positionKeys.elementAt(21);
      expect(positionKey_0_2_21.time, moreOrLessEquals(21));
      expect(positionKey_0_2_21.value, vector3MoreOrLessEquals(Vector3(-1.40665e-17, 0.70501, -5.62122e-09)));
      final positionKey_0_2_22 = channel_0_2.positionKeys.elementAt(22);
      expect(positionKey_0_2_22.time, moreOrLessEquals(22));
      expect(positionKey_0_2_22.value, vector3MoreOrLessEquals(Vector3(-1.47363e-17, 0.70501, -5.88889e-09)));
      final positionKey_0_2_23 = channel_0_2.positionKeys.elementAt(23);
      expect(positionKey_0_2_23.time, moreOrLessEquals(23));
      expect(positionKey_0_2_23.value, vector3MoreOrLessEquals(Vector3(-1.54062e-17, 0.70501, -6.15657e-09)));
      final positionKey_0_2_24 = channel_0_2.positionKeys.elementAt(24);
      expect(positionKey_0_2_24.time, moreOrLessEquals(24));
      expect(positionKey_0_2_24.value, vector3MoreOrLessEquals(Vector3(-1.6076e-17, 0.70501, -6.42425e-09)));
      final positionKey_0_2_25 = channel_0_2.positionKeys.elementAt(25);
      expect(positionKey_0_2_25.time, moreOrLessEquals(25));
      expect(positionKey_0_2_25.value, vector3MoreOrLessEquals(Vector3(-1.67458e-17, 0.70501, -6.69193e-09)));
      final positionKey_0_2_26 = channel_0_2.positionKeys.elementAt(26);
      expect(positionKey_0_2_26.time, moreOrLessEquals(26));
      expect(positionKey_0_2_26.value, vector3MoreOrLessEquals(Vector3(-1.74157e-17, 0.70501, -6.9596e-09)));
      final positionKey_0_2_27 = channel_0_2.positionKeys.elementAt(27);
      expect(positionKey_0_2_27.time, moreOrLessEquals(27));
      expect(positionKey_0_2_27.value, vector3MoreOrLessEquals(Vector3(-1.80855e-17, 0.70501, -7.22728e-09)));
      final positionKey_0_2_28 = channel_0_2.positionKeys.elementAt(28);
      expect(positionKey_0_2_28.time, moreOrLessEquals(28));
      expect(positionKey_0_2_28.value, vector3MoreOrLessEquals(Vector3(-1.87553e-17, 0.70501, -7.49496e-09)));
      final positionKey_0_2_29 = channel_0_2.positionKeys.elementAt(29);
      expect(positionKey_0_2_29.time, moreOrLessEquals(29));
      expect(positionKey_0_2_29.value, vector3MoreOrLessEquals(Vector3(-1.94252e-17, 0.70501, -7.76263e-09)));
      final positionKey_0_2_30 = channel_0_2.positionKeys.elementAt(30);
      expect(positionKey_0_2_30.time, moreOrLessEquals(30));
      expect(positionKey_0_2_30.value, vector3MoreOrLessEquals(Vector3(-2.0095e-17, 0.70501, -8.03031e-09)));
      final positionKey_0_2_31 = channel_0_2.positionKeys.elementAt(31);
      expect(positionKey_0_2_31.time, moreOrLessEquals(31));
      expect(positionKey_0_2_31.value, vector3MoreOrLessEquals(Vector3(-2.07648e-17, 0.70501, -8.29799e-09)));
      final positionKey_0_2_32 = channel_0_2.positionKeys.elementAt(32);
      expect(positionKey_0_2_32.time, moreOrLessEquals(32));
      expect(positionKey_0_2_32.value, vector3MoreOrLessEquals(Vector3(-2.14347e-17, 0.70501, -8.56567e-09)));
      final positionKey_0_2_33 = channel_0_2.positionKeys.elementAt(33);
      expect(positionKey_0_2_33.time, moreOrLessEquals(33));
      expect(positionKey_0_2_33.value, vector3MoreOrLessEquals(Vector3(-2.21045e-17, 0.70501, -8.83334e-09)));
      final positionKey_0_2_34 = channel_0_2.positionKeys.elementAt(34);
      expect(positionKey_0_2_34.time, moreOrLessEquals(34));
      expect(positionKey_0_2_34.value, vector3MoreOrLessEquals(Vector3(-2.27743e-17, 0.70501, -9.10102e-09)));
      final positionKey_0_2_35 = channel_0_2.positionKeys.elementAt(35);
      expect(positionKey_0_2_35.time, moreOrLessEquals(35));
      expect(positionKey_0_2_35.value, vector3MoreOrLessEquals(Vector3(-2.34442e-17, 0.70501, -9.3687e-09)));
      final positionKey_0_2_36 = channel_0_2.positionKeys.elementAt(36);
      expect(positionKey_0_2_36.time, moreOrLessEquals(36));
      expect(positionKey_0_2_36.value, vector3MoreOrLessEquals(Vector3(-2.4114e-17, 0.70501, -9.63638e-09)));
      final positionKey_0_2_37 = channel_0_2.positionKeys.elementAt(37);
      expect(positionKey_0_2_37.time, moreOrLessEquals(37));
      expect(positionKey_0_2_37.value, vector3MoreOrLessEquals(Vector3(-2.47838e-17, 0.70501, -9.90405e-09)));
      final positionKey_0_2_38 = channel_0_2.positionKeys.elementAt(38);
      expect(positionKey_0_2_38.time, moreOrLessEquals(38));
      expect(positionKey_0_2_38.value, vector3MoreOrLessEquals(Vector3(-2.54537e-17, 0.70501, -1.01717e-08)));
      final positionKey_0_2_39 = channel_0_2.positionKeys.elementAt(39);
      expect(positionKey_0_2_39.time, moreOrLessEquals(39));
      expect(positionKey_0_2_39.value, vector3MoreOrLessEquals(Vector3(-2.61235e-17, 0.70501, -1.04394e-08)));
      expect(channel_0_2.rotationKeys.length, equals(40));
      final rotationKey_0_2_0 = channel_0_2.rotationKeys.elementAt(0);
      expect(rotationKey_0_2_0.time, isZero);
      expect(rotationKey_0_2_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_2_1 = channel_0_2.rotationKeys.elementAt(1);
      expect(rotationKey_0_2_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_2_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.00364702, 0.00364702)));
      final rotationKey_0_2_2 = channel_0_2.rotationKeys.elementAt(2);
      expect(rotationKey_0_2_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_2_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0146271, 0.0146271)));
      final rotationKey_0_2_3 = channel_0_2.rotationKeys.elementAt(3);
      expect(rotationKey_0_2_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_2_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0324882, 0.0324882)));
      final rotationKey_0_2_4 = channel_0_2.rotationKeys.elementAt(4);
      expect(rotationKey_0_2_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_2_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0558461, 0.0558461)));
      final rotationKey_0_2_5 = channel_0_2.rotationKeys.elementAt(5);
      expect(rotationKey_0_2_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_2_5.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0822714, 0.0822714)));
      final rotationKey_0_2_6 = channel_0_2.rotationKeys.elementAt(6);
      expect(rotationKey_0_2_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_2_6.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.10863, 0.10863)));
      final rotationKey_0_2_7 = channel_0_2.rotationKeys.elementAt(7);
      expect(rotationKey_0_2_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_2_7.value, quaternionMoreOrLessEquals(Quaternion(-1.59117e-10, 1.19639e-09, 0.131837, 0.131837)));
      final rotationKey_0_2_8 = channel_0_2.rotationKeys.elementAt(8);
      expect(rotationKey_0_2_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_2_8.value, quaternionMoreOrLessEquals(Quaternion(-2.06321e-10, 1.36382e-09, 0.14958, 0.14958)));
      final rotationKey_0_2_9 = channel_0_2.rotationKeys.elementAt(9);
      expect(rotationKey_0_2_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_2_9.value, quaternionMoreOrLessEquals(Quaternion(-2.49186e-10, 1.53162e-09, 0.160584, 0.160584)));
      final rotationKey_0_2_10 = channel_0_2.rotationKeys.elementAt(10);
      expect(rotationKey_0_2_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_2_10.value, quaternionMoreOrLessEquals(Quaternion(-2.83543e-10, 1.7007e-09, 0.164452, 0.164452)));
      final rotationKey_0_2_11 = channel_0_2.rotationKeys.elementAt(11);
      expect(rotationKey_0_2_11.time, moreOrLessEquals(11));
      expect(rotationKey_0_2_11.value, quaternionMoreOrLessEquals(Quaternion(-2.94415e-10, 1.8736e-09, 0.155234, 0.155234)));
      final rotationKey_0_2_12 = channel_0_2.rotationKeys.elementAt(12);
      expect(rotationKey_0_2_12.time, moreOrLessEquals(12));
      expect(rotationKey_0_2_12.value, quaternionMoreOrLessEquals(Quaternion(-2.61702e-10, 2.05239e-09, 0.126487, 0.126487)));
      final rotationKey_0_2_13 = channel_0_2.rotationKeys.elementAt(13);
      expect(rotationKey_0_2_13.time, moreOrLessEquals(13));
      expect(rotationKey_0_2_13.value, quaternionMoreOrLessEquals(Quaternion(-1.76227e-10, 2.23448e-09, 0.0786229, 0.0786229)));
      final rotationKey_0_2_14 = channel_0_2.rotationKeys.elementAt(14);
      expect(rotationKey_0_2_14.time, moreOrLessEquals(14));
      expect(rotationKey_0_2_14.value, quaternionMoreOrLessEquals(Quaternion(-3.55591e-11, 2.41358e-09, 0.0147313, 0.0147313)));
      final rotationKey_0_2_15 = channel_0_2.rotationKeys.elementAt(15);
      expect(rotationKey_0_2_15.time, moreOrLessEquals(15));
      expect(rotationKey_0_2_15.value, quaternionMoreOrLessEquals(Quaternion(1.50969e-10, 2.58185e-09, -0.0583736, -0.0583736)));
      final rotationKey_0_2_16 = channel_0_2.rotationKeys.elementAt(16);
      expect(rotationKey_0_2_16.time, moreOrLessEquals(16));
      expect(rotationKey_0_2_16.value, quaternionMoreOrLessEquals(Quaternion(3.61549e-10, 2.73488e-09, -0.131059, -0.131059)));
      final rotationKey_0_2_17 = channel_0_2.rotationKeys.elementAt(17);
      expect(rotationKey_0_2_17.time, moreOrLessEquals(17));
      expect(rotationKey_0_2_17.value, quaternionMoreOrLessEquals(Quaternion(5.68424e-10, 2.87545e-09, -0.193929, -0.193929)));
      final rotationKey_0_2_18 = channel_0_2.rotationKeys.elementAt(18);
      expect(rotationKey_0_2_18.time, moreOrLessEquals(18));
      expect(rotationKey_0_2_18.value, quaternionMoreOrLessEquals(Quaternion(7.47007e-10, 3.01227e-09, -0.240698, -0.240698)));
      final rotationKey_0_2_19 = channel_0_2.rotationKeys.elementAt(19);
      expect(rotationKey_0_2_19.time, moreOrLessEquals(19));
      expect(rotationKey_0_2_19.value, quaternionMoreOrLessEquals(Quaternion(8.80443e-10, 3.15539e-09, -0.268761, -0.268761)));
      final rotationKey_0_2_20 = channel_0_2.rotationKeys.elementAt(20);
      expect(rotationKey_0_2_20.time, moreOrLessEquals(20));
      expect(rotationKey_0_2_20.value, quaternionMoreOrLessEquals(Quaternion(9.58483e-10, 3.31246e-09, -0.277955, -0.277955)));
      final rotationKey_0_2_21 = channel_0_2.rotationKeys.elementAt(21);
      expect(rotationKey_0_2_21.time, moreOrLessEquals(21));
      expect(rotationKey_0_2_21.value, quaternionMoreOrLessEquals(Quaternion(9.90514e-10, 3.48264e-09, -0.273565, -0.273565)));
      final rotationKey_0_2_22 = channel_0_2.rotationKeys.elementAt(22);
      expect(rotationKey_0_2_22.time, moreOrLessEquals(22));
      expect(rotationKey_0_2_22.value, quaternionMoreOrLessEquals(Quaternion(9.87285e-10, 3.66244e-09, -0.260279, -0.260279)));
      final rotationKey_0_2_23 = channel_0_2.rotationKeys.elementAt(23);
      expect(rotationKey_0_2_23.time, moreOrLessEquals(23));
      expect(rotationKey_0_2_23.value, quaternionMoreOrLessEquals(Quaternion(9.45656e-10, 3.85119e-09, -0.238465, -0.238465)));
      final rotationKey_0_2_24 = channel_0_2.rotationKeys.elementAt(24);
      expect(rotationKey_0_2_24.time, moreOrLessEquals(24));
      expect(rotationKey_0_2_24.value, quaternionMoreOrLessEquals(Quaternion(8.67256e-10, 4.04611e-09, -0.209583, -0.209583)));
      final rotationKey_0_2_25 = channel_0_2.rotationKeys.elementAt(25);
      expect(rotationKey_0_2_25.time, moreOrLessEquals(25));
      expect(rotationKey_0_2_25.value, quaternionMoreOrLessEquals(Quaternion(7.60547e-10, 4.2428e-09, -0.176444, -0.176444)));
      final rotationKey_0_2_26 = channel_0_2.rotationKeys.elementAt(26);
      expect(rotationKey_0_2_26.time, moreOrLessEquals(26));
      expect(rotationKey_0_2_26.value, quaternionMoreOrLessEquals(Quaternion(6.40598e-10, 4.43684e-09, -0.1429, -0.1429)));
      final rotationKey_0_2_27 = channel_0_2.rotationKeys.elementAt(27);
      expect(rotationKey_0_2_27.time, moreOrLessEquals(27));
      expect(rotationKey_0_2_27.value, quaternionMoreOrLessEquals(Quaternion(5.25658e-10, 4.62549e-09, -0.112917, -0.112917)));
      final rotationKey_0_2_28 = channel_0_2.rotationKeys.elementAt(28);
      expect(rotationKey_0_2_28.time, moreOrLessEquals(28));
      expect(rotationKey_0_2_28.value, quaternionMoreOrLessEquals(Quaternion(4.32457e-10, 4.80827e-09, -0.0895786, -0.0895786)));
      final rotationKey_0_2_29 = channel_0_2.rotationKeys.elementAt(29);
      expect(rotationKey_0_2_29.time, moreOrLessEquals(29));
      expect(rotationKey_0_2_29.value, quaternionMoreOrLessEquals(Quaternion(3.732e-10, 4.98615e-09, -0.0746386, -0.0746386)));
      final rotationKey_0_2_30 = channel_0_2.rotationKeys.elementAt(30);
      expect(rotationKey_0_2_30.time, moreOrLessEquals(30));
      expect(rotationKey_0_2_30.value, quaternionMoreOrLessEquals(Quaternion(3.55218e-10, 5.1603e-09, -0.0686742, -0.0686742)));
      final rotationKey_0_2_31 = channel_0_2.rotationKeys.elementAt(31);
      expect(rotationKey_0_2_31.time, moreOrLessEquals(31));
      expect(rotationKey_0_2_31.value, quaternionMoreOrLessEquals(Quaternion(0.0105316, 0.000724813, -0.0674022, -0.0674022)));
      final rotationKey_0_2_32 = channel_0_2.rotationKeys.elementAt(32);
      expect(rotationKey_0_2_32.time, moreOrLessEquals(32));
      expect(rotationKey_0_2_32.value, quaternionMoreOrLessEquals(Quaternion(0.042355, 0.00291562, -0.0665507, -0.0665507)));
      final rotationKey_0_2_33 = channel_0_2.rotationKeys.elementAt(33);
      expect(rotationKey_0_2_33.time, moreOrLessEquals(33));
      expect(rotationKey_0_2_33.value, quaternionMoreOrLessEquals(Quaternion(0.0939771, 0.00647035, -0.0660027, -0.0660027)));
      final rotationKey_0_2_34 = channel_0_2.rotationKeys.elementAt(34);
      expect(rotationKey_0_2_34.time, moreOrLessEquals(34));
      expect(rotationKey_0_2_34.value, quaternionMoreOrLessEquals(Quaternion(0.160017, 0.0110184, -0.0655663, -0.0655663)));
      final rotationKey_0_2_35 = channel_0_2.rotationKeys.elementAt(35);
      expect(rotationKey_0_2_35.time, moreOrLessEquals(35));
      expect(rotationKey_0_2_35.value, quaternionMoreOrLessEquals(Quaternion(0.230798, 0.0158924, -0.0650728, -0.0650728)));
      final rotationKey_0_2_36 = channel_0_2.rotationKeys.elementAt(36);
      expect(rotationKey_0_2_36.time, moreOrLessEquals(36));
      expect(rotationKey_0_2_36.value, quaternionMoreOrLessEquals(Quaternion(0.29504, 0.0203147, -0.0644894, -0.0644894)));
      final rotationKey_0_2_37 = channel_0_2.rotationKeys.elementAt(37);
      expect(rotationKey_0_2_37.time, moreOrLessEquals(37));
      expect(rotationKey_0_2_37.value, quaternionMoreOrLessEquals(Quaternion(0.344078, 0.0236886, -0.0639265, -0.0639265)));
      final rotationKey_0_2_38 = channel_0_2.rotationKeys.elementAt(38);
      expect(rotationKey_0_2_38.time, moreOrLessEquals(38));
      expect(rotationKey_0_2_38.value, quaternionMoreOrLessEquals(Quaternion(0.373799, 0.0257322, -0.0635323, -0.0635323)));
      final rotationKey_0_2_39 = channel_0_2.rotationKeys.elementAt(39);
      expect(rotationKey_0_2_39.time, moreOrLessEquals(39));
      expect(rotationKey_0_2_39.value, quaternionMoreOrLessEquals(Quaternion(0.38355, 0.0264023, -0.0633961, -0.0633961)));
      expect(channel_0_2.scalingKeys.length, equals(40));
      final scalingKey_0_2_0 = channel_0_2.scalingKeys.elementAt(0);
      expect(scalingKey_0_2_0.time, isZero);
      expect(scalingKey_0_2_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_1 = channel_0_2.scalingKeys.elementAt(1);
      expect(scalingKey_0_2_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_2_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_2 = channel_0_2.scalingKeys.elementAt(2);
      expect(scalingKey_0_2_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_2_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_3 = channel_0_2.scalingKeys.elementAt(3);
      expect(scalingKey_0_2_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_2_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_4 = channel_0_2.scalingKeys.elementAt(4);
      expect(scalingKey_0_2_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_2_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_5 = channel_0_2.scalingKeys.elementAt(5);
      expect(scalingKey_0_2_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_2_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_6 = channel_0_2.scalingKeys.elementAt(6);
      expect(scalingKey_0_2_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_2_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_7 = channel_0_2.scalingKeys.elementAt(7);
      expect(scalingKey_0_2_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_2_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_8 = channel_0_2.scalingKeys.elementAt(8);
      expect(scalingKey_0_2_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_2_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_9 = channel_0_2.scalingKeys.elementAt(9);
      expect(scalingKey_0_2_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_2_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_10 = channel_0_2.scalingKeys.elementAt(10);
      expect(scalingKey_0_2_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_2_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_11 = channel_0_2.scalingKeys.elementAt(11);
      expect(scalingKey_0_2_11.time, moreOrLessEquals(11));
      expect(scalingKey_0_2_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_12 = channel_0_2.scalingKeys.elementAt(12);
      expect(scalingKey_0_2_12.time, moreOrLessEquals(12));
      expect(scalingKey_0_2_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_13 = channel_0_2.scalingKeys.elementAt(13);
      expect(scalingKey_0_2_13.time, moreOrLessEquals(13));
      expect(scalingKey_0_2_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_14 = channel_0_2.scalingKeys.elementAt(14);
      expect(scalingKey_0_2_14.time, moreOrLessEquals(14));
      expect(scalingKey_0_2_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_15 = channel_0_2.scalingKeys.elementAt(15);
      expect(scalingKey_0_2_15.time, moreOrLessEquals(15));
      expect(scalingKey_0_2_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_16 = channel_0_2.scalingKeys.elementAt(16);
      expect(scalingKey_0_2_16.time, moreOrLessEquals(16));
      expect(scalingKey_0_2_16.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_17 = channel_0_2.scalingKeys.elementAt(17);
      expect(scalingKey_0_2_17.time, moreOrLessEquals(17));
      expect(scalingKey_0_2_17.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_18 = channel_0_2.scalingKeys.elementAt(18);
      expect(scalingKey_0_2_18.time, moreOrLessEquals(18));
      expect(scalingKey_0_2_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_19 = channel_0_2.scalingKeys.elementAt(19);
      expect(scalingKey_0_2_19.time, moreOrLessEquals(19));
      expect(scalingKey_0_2_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_20 = channel_0_2.scalingKeys.elementAt(20);
      expect(scalingKey_0_2_20.time, moreOrLessEquals(20));
      expect(scalingKey_0_2_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_21 = channel_0_2.scalingKeys.elementAt(21);
      expect(scalingKey_0_2_21.time, moreOrLessEquals(21));
      expect(scalingKey_0_2_21.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_22 = channel_0_2.scalingKeys.elementAt(22);
      expect(scalingKey_0_2_22.time, moreOrLessEquals(22));
      expect(scalingKey_0_2_22.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_23 = channel_0_2.scalingKeys.elementAt(23);
      expect(scalingKey_0_2_23.time, moreOrLessEquals(23));
      expect(scalingKey_0_2_23.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_24 = channel_0_2.scalingKeys.elementAt(24);
      expect(scalingKey_0_2_24.time, moreOrLessEquals(24));
      expect(scalingKey_0_2_24.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_25 = channel_0_2.scalingKeys.elementAt(25);
      expect(scalingKey_0_2_25.time, moreOrLessEquals(25));
      expect(scalingKey_0_2_25.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_26 = channel_0_2.scalingKeys.elementAt(26);
      expect(scalingKey_0_2_26.time, moreOrLessEquals(26));
      expect(scalingKey_0_2_26.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_27 = channel_0_2.scalingKeys.elementAt(27);
      expect(scalingKey_0_2_27.time, moreOrLessEquals(27));
      expect(scalingKey_0_2_27.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_28 = channel_0_2.scalingKeys.elementAt(28);
      expect(scalingKey_0_2_28.time, moreOrLessEquals(28));
      expect(scalingKey_0_2_28.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_29 = channel_0_2.scalingKeys.elementAt(29);
      expect(scalingKey_0_2_29.time, moreOrLessEquals(29));
      expect(scalingKey_0_2_29.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_30 = channel_0_2.scalingKeys.elementAt(30);
      expect(scalingKey_0_2_30.time, moreOrLessEquals(30));
      expect(scalingKey_0_2_30.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_31 = channel_0_2.scalingKeys.elementAt(31);
      expect(scalingKey_0_2_31.time, moreOrLessEquals(31));
      expect(scalingKey_0_2_31.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_32 = channel_0_2.scalingKeys.elementAt(32);
      expect(scalingKey_0_2_32.time, moreOrLessEquals(32));
      expect(scalingKey_0_2_32.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_33 = channel_0_2.scalingKeys.elementAt(33);
      expect(scalingKey_0_2_33.time, moreOrLessEquals(33));
      expect(scalingKey_0_2_33.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_34 = channel_0_2.scalingKeys.elementAt(34);
      expect(scalingKey_0_2_34.time, moreOrLessEquals(34));
      expect(scalingKey_0_2_34.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_35 = channel_0_2.scalingKeys.elementAt(35);
      expect(scalingKey_0_2_35.time, moreOrLessEquals(35));
      expect(scalingKey_0_2_35.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_36 = channel_0_2.scalingKeys.elementAt(36);
      expect(scalingKey_0_2_36.time, moreOrLessEquals(36));
      expect(scalingKey_0_2_36.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_37 = channel_0_2.scalingKeys.elementAt(37);
      expect(scalingKey_0_2_37.time, moreOrLessEquals(37));
      expect(scalingKey_0_2_37.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_38 = channel_0_2.scalingKeys.elementAt(38);
      expect(scalingKey_0_2_38.time, moreOrLessEquals(38));
      expect(scalingKey_0_2_38.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_39 = channel_0_2.scalingKeys.elementAt(39);
      expect(scalingKey_0_2_39.time, moreOrLessEquals(39));
      expect(scalingKey_0_2_39.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_2.preState, equals(AnimBehavior.defaults));
      expect(channel_0_2.postState, equals(AnimBehavior.defaults));
      final  channel_0_3 = animation_0.channels.elementAt(3);
      expect(channel_0_3.positionKeys.length, equals(2));
      final positionKey_0_3_0 = channel_0_3.positionKeys.elementAt(0);
      expect(positionKey_0_3_0.time, isZero);
      expect(positionKey_0_3_0.value, vector3MoreOrLessEquals(Vector3(0, 1.40687, 1.42109e-14)));
      final positionKey_0_3_1 = channel_0_3.positionKeys.elementAt(1);
      expect(positionKey_0_3_1.time, moreOrLessEquals(39));
      expect(positionKey_0_3_1.value, vector3MoreOrLessEquals(Vector3(1.49012e-08, 1.40687, -2.15444e-09)));
      expect(channel_0_3.rotationKeys.length, equals(2));
      final rotationKey_0_3_0 = channel_0_3.rotationKeys.elementAt(0);
      expect(rotationKey_0_3_0.time, isZero);
      expect(rotationKey_0_3_0.value, quaternionMoreOrLessEquals(Quaternion(-0.5801, -0.404332, -0.404332, -0.404332)));
      final rotationKey_0_3_1 = channel_0_3.rotationKeys.elementAt(1);
      expect(rotationKey_0_3_1.time, moreOrLessEquals(39));
      expect(rotationKey_0_3_1.value, quaternionMoreOrLessEquals(Quaternion(-0.580099, -0.404332, -0.404332, -0.404332)));
      expect(channel_0_3.scalingKeys.length, equals(2));
      final scalingKey_0_3_0 = channel_0_3.scalingKeys.elementAt(0);
      expect(scalingKey_0_3_0.time, isZero);
      expect(scalingKey_0_3_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_1 = channel_0_3.scalingKeys.elementAt(1);
      expect(scalingKey_0_3_1.time, moreOrLessEquals(39));
      expect(scalingKey_0_3_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_3.preState, equals(AnimBehavior.defaults));
      expect(channel_0_3.postState, equals(AnimBehavior.defaults));
      final  channel_0_4 = animation_0.channels.elementAt(4);
      expect(channel_0_4.positionKeys.length, equals(21));
      final positionKey_0_4_0 = channel_0_4.positionKeys.elementAt(0);
      expect(positionKey_0_4_0.time, isZero);
      expect(positionKey_0_4_0.value, vector3MoreOrLessEquals(Vector3(0, 1.40687, 1.42109e-14)));
      final positionKey_0_4_1 = channel_0_4.positionKeys.elementAt(1);
      expect(positionKey_0_4_1.time, moreOrLessEquals(1));
      expect(positionKey_0_4_1.value, vector3MoreOrLessEquals(Vector3(3.82081e-10, 1.40687, -5.52281e-11)));
      final positionKey_0_4_2 = channel_0_4.positionKeys.elementAt(2);
      expect(positionKey_0_4_2.time, moreOrLessEquals(2));
      expect(positionKey_0_4_2.value, vector3MoreOrLessEquals(Vector3(7.64162e-10, 1.40687, -1.1047e-10)));
      final positionKey_0_4_3 = channel_0_4.positionKeys.elementAt(3);
      expect(positionKey_0_4_3.time, moreOrLessEquals(3));
      expect(positionKey_0_4_3.value, vector3MoreOrLessEquals(Vector3(1.14624e-09, 1.40687, -1.65713e-10)));
      final positionKey_0_4_4 = channel_0_4.positionKeys.elementAt(4);
      expect(positionKey_0_4_4.time, moreOrLessEquals(4));
      expect(positionKey_0_4_4.value, vector3MoreOrLessEquals(Vector3(1.52832e-09, 1.40687, -2.20955e-10)));
      final positionKey_0_4_5 = channel_0_4.positionKeys.elementAt(5);
      expect(positionKey_0_4_5.time, moreOrLessEquals(5));
      expect(positionKey_0_4_5.value, vector3MoreOrLessEquals(Vector3(1.91041e-09, 1.40687, -2.76197e-10)));
      final positionKey_0_4_6 = channel_0_4.positionKeys.elementAt(6);
      expect(positionKey_0_4_6.time, moreOrLessEquals(6));
      expect(positionKey_0_4_6.value, vector3MoreOrLessEquals(Vector3(2.29249e-09, 1.40687, -3.3144e-10)));
      final positionKey_0_4_7 = channel_0_4.positionKeys.elementAt(7);
      expect(positionKey_0_4_7.time, moreOrLessEquals(7));
      expect(positionKey_0_4_7.value, vector3MoreOrLessEquals(Vector3(2.67457e-09, 1.40687, -3.86682e-10)));
      final positionKey_0_4_8 = channel_0_4.positionKeys.elementAt(8);
      expect(positionKey_0_4_8.time, moreOrLessEquals(8));
      expect(positionKey_0_4_8.value, vector3MoreOrLessEquals(Vector3(3.05665e-09, 1.40687, -4.41924e-10)));
      final positionKey_0_4_9 = channel_0_4.positionKeys.elementAt(9);
      expect(positionKey_0_4_9.time, moreOrLessEquals(9));
      expect(positionKey_0_4_9.value, vector3MoreOrLessEquals(Vector3(3.43873e-09, 1.40687, -4.97167e-10)));
      final positionKey_0_4_10 = channel_0_4.positionKeys.elementAt(10);
      expect(positionKey_0_4_10.time, moreOrLessEquals(10));
      expect(positionKey_0_4_10.value, vector3MoreOrLessEquals(Vector3(3.82081e-09, 1.40687, -5.52409e-10)));
      final positionKey_0_4_11 = channel_0_4.positionKeys.elementAt(11);
      expect(positionKey_0_4_11.time, moreOrLessEquals(30));
      expect(positionKey_0_4_11.value, vector3MoreOrLessEquals(Vector3(1.14624e-08, 1.40687, -1.65726e-09)));
      final positionKey_0_4_12 = channel_0_4.positionKeys.elementAt(12);
      expect(positionKey_0_4_12.time, moreOrLessEquals(31));
      expect(positionKey_0_4_12.value, vector3MoreOrLessEquals(Vector3(1.18445e-08, 1.40687, -1.7125e-09)));
      final positionKey_0_4_13 = channel_0_4.positionKeys.elementAt(13);
      expect(positionKey_0_4_13.time, moreOrLessEquals(32));
      expect(positionKey_0_4_13.value, vector3MoreOrLessEquals(Vector3(1.22266e-08, 1.40687, -1.76774e-09)));
      final positionKey_0_4_14 = channel_0_4.positionKeys.elementAt(14);
      expect(positionKey_0_4_14.time, moreOrLessEquals(33));
      expect(positionKey_0_4_14.value, vector3MoreOrLessEquals(Vector3(1.26087e-08, 1.40687, -1.82298e-09)));
      final positionKey_0_4_15 = channel_0_4.positionKeys.elementAt(15);
      expect(positionKey_0_4_15.time, moreOrLessEquals(34));
      expect(positionKey_0_4_15.value, vector3MoreOrLessEquals(Vector3(1.29908e-08, 1.40687, -1.87822e-09)));
      final positionKey_0_4_16 = channel_0_4.positionKeys.elementAt(16);
      expect(positionKey_0_4_16.time, moreOrLessEquals(35));
      expect(positionKey_0_4_16.value, vector3MoreOrLessEquals(Vector3(1.33728e-08, 1.40687, -1.93347e-09)));
      final positionKey_0_4_17 = channel_0_4.positionKeys.elementAt(17);
      expect(positionKey_0_4_17.time, moreOrLessEquals(36));
      expect(positionKey_0_4_17.value, vector3MoreOrLessEquals(Vector3(1.37549e-08, 1.40687, -1.98871e-09)));
      final positionKey_0_4_18 = channel_0_4.positionKeys.elementAt(18);
      expect(positionKey_0_4_18.time, moreOrLessEquals(37));
      expect(positionKey_0_4_18.value, vector3MoreOrLessEquals(Vector3(1.4137e-08, 1.40687, -2.04395e-09)));
      final positionKey_0_4_19 = channel_0_4.positionKeys.elementAt(19);
      expect(positionKey_0_4_19.time, moreOrLessEquals(38));
      expect(positionKey_0_4_19.value, vector3MoreOrLessEquals(Vector3(1.45191e-08, 1.40687, -2.09919e-09)));
      final positionKey_0_4_20 = channel_0_4.positionKeys.elementAt(20);
      expect(positionKey_0_4_20.time, moreOrLessEquals(39));
      expect(positionKey_0_4_20.value, vector3MoreOrLessEquals(Vector3(1.49012e-08, 1.40687, -2.15444e-09)));
      expect(channel_0_4.rotationKeys.length, equals(21));
      final rotationKey_0_4_0 = channel_0_4.rotationKeys.elementAt(0);
      expect(rotationKey_0_4_0.time, isZero);
      expect(rotationKey_0_4_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_4_1 = channel_0_4.rotationKeys.elementAt(1);
      expect(rotationKey_0_4_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_4_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.00379574, 0.00379574)));
      final rotationKey_0_4_2 = channel_0_4.rotationKeys.elementAt(2);
      expect(rotationKey_0_4_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_4_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0152319, 0.0152319)));
      final rotationKey_0_4_3 = channel_0_4.rotationKeys.elementAt(3);
      expect(rotationKey_0_4_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_4_3.value, quaternionMoreOrLessEquals(Quaternion(4.30974e-11, -1.27214e-09, 0.0338584, 0.0338584)));
      final rotationKey_0_4_4 = channel_0_4.rotationKeys.elementAt(4);
      expect(rotationKey_0_4_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_4_4.value, quaternionMoreOrLessEquals(Quaternion(9.88648e-11, -1.69428e-09, 0.0582531, 0.0582531)));
      final rotationKey_0_4_5 = channel_0_4.rotationKeys.elementAt(5);
      expect(rotationKey_0_4_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_4_5.value, quaternionMoreOrLessEquals(Quaternion(1.82195e-10, -2.11361e-09, 0.0858821, 0.0858821)));
      final rotationKey_0_4_6 = channel_0_4.rotationKeys.elementAt(6);
      expect(rotationKey_0_4_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_4_6.value, quaternionMoreOrLessEquals(Quaternion(2.888e-10, -2.52931e-09, 0.113444, 0.113444)));
      final rotationKey_0_4_7 = channel_0_4.rotationKeys.elementAt(7);
      expect(rotationKey_0_4_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_4_7.value, quaternionMoreOrLessEquals(Quaternion(4.08882e-10, -2.94175e-09, 0.137669, 0.137669)));
      final rotationKey_0_4_8 = channel_0_4.rotationKeys.elementAt(8);
      expect(rotationKey_0_4_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_4_8.value, quaternionMoreOrLessEquals(Quaternion(5.29841e-10, -3.35271e-09, 0.156096, 0.156096)));
      final rotationKey_0_4_9 = channel_0_4.rotationKeys.elementAt(9);
      expect(rotationKey_0_4_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_4_9.value, quaternionMoreOrLessEquals(Quaternion(6.39161e-10, -3.76474e-09, 0.167381, 0.167381)));
      final rotationKey_0_4_10 = channel_0_4.rotationKeys.elementAt(10);
      expect(rotationKey_0_4_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_4_10.value, quaternionMoreOrLessEquals(Quaternion(7.26048e-10, -4.18032e-09, 0.171121, 0.171121)));
      final rotationKey_0_4_11 = channel_0_4.rotationKeys.elementAt(11);
      expect(rotationKey_0_4_11.time, moreOrLessEquals(30));
      expect(rotationKey_0_4_11.value, quaternionMoreOrLessEquals(Quaternion(-4.37528e-12, -1.29193e-08, 0.170787, 0.170787)));
      final rotationKey_0_4_12 = channel_0_4.rotationKeys.elementAt(12);
      expect(rotationKey_0_4_12.time, moreOrLessEquals(31));
      expect(rotationKey_0_4_12.value, quaternionMoreOrLessEquals(Quaternion(0.00497904, -0.000173649, 0.170773, 0.170773)));
      final rotationKey_0_4_13 = channel_0_4.rotationKeys.elementAt(13);
      expect(rotationKey_0_4_13.time, moreOrLessEquals(32));
      expect(rotationKey_0_4_13.value, quaternionMoreOrLessEquals(Quaternion(0.0199403, -0.000694278, 0.170799, 0.170799)));
      final rotationKey_0_4_14 = channel_0_4.rotationKeys.elementAt(14);
      expect(rotationKey_0_4_14.time, moreOrLessEquals(33));
      expect(rotationKey_0_4_14.value, quaternionMoreOrLessEquals(Quaternion(0.0440158, -0.00151969, 0.170955, 0.170955)));
      final rotationKey_0_4_15 = channel_0_4.rotationKeys.elementAt(15);
      expect(rotationKey_0_4_15.time, moreOrLessEquals(34));
      expect(rotationKey_0_4_15.value, quaternionMoreOrLessEquals(Quaternion(0.074679, -0.00257842, 0.170642, 0.170642)));
      final rotationKey_0_4_16 = channel_0_4.rotationKeys.elementAt(16);
      expect(rotationKey_0_4_16.time, moreOrLessEquals(35));
      expect(rotationKey_0_4_16.value, quaternionMoreOrLessEquals(Quaternion(0.107715, -0.00371907, 0.170124, 0.170124)));
      final rotationKey_0_4_17 = channel_0_4.rotationKeys.elementAt(17);
      expect(rotationKey_0_4_17.time, moreOrLessEquals(36));
      expect(rotationKey_0_4_17.value, quaternionMoreOrLessEquals(Quaternion(0.138203, -0.00477161, 0.169477, 0.169477)));
      final rotationKey_0_4_18 = channel_0_4.rotationKeys.elementAt(18);
      expect(rotationKey_0_4_18.time, moreOrLessEquals(37));
      expect(rotationKey_0_4_18.value, quaternionMoreOrLessEquals(Quaternion(0.162021, -0.00559385, 0.168857, 0.168857)));
      final rotationKey_0_4_19 = channel_0_4.rotationKeys.elementAt(19);
      expect(rotationKey_0_4_19.time, moreOrLessEquals(38));
      expect(rotationKey_0_4_19.value, quaternionMoreOrLessEquals(Quaternion(0.176771, -0.00610293, 0.168423, 0.168423)));
      final rotationKey_0_4_20 = channel_0_4.rotationKeys.elementAt(20);
      expect(rotationKey_0_4_20.time, moreOrLessEquals(39));
      expect(rotationKey_0_4_20.value, quaternionMoreOrLessEquals(Quaternion(0.181671, -0.00627205, 0.16827, 0.16827)));
      expect(channel_0_4.scalingKeys.length, equals(21));
      final scalingKey_0_4_0 = channel_0_4.scalingKeys.elementAt(0);
      expect(scalingKey_0_4_0.time, isZero);
      expect(scalingKey_0_4_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_1 = channel_0_4.scalingKeys.elementAt(1);
      expect(scalingKey_0_4_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_4_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_2 = channel_0_4.scalingKeys.elementAt(2);
      expect(scalingKey_0_4_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_4_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_3 = channel_0_4.scalingKeys.elementAt(3);
      expect(scalingKey_0_4_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_4_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_4 = channel_0_4.scalingKeys.elementAt(4);
      expect(scalingKey_0_4_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_4_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_5 = channel_0_4.scalingKeys.elementAt(5);
      expect(scalingKey_0_4_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_4_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_6 = channel_0_4.scalingKeys.elementAt(6);
      expect(scalingKey_0_4_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_4_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_7 = channel_0_4.scalingKeys.elementAt(7);
      expect(scalingKey_0_4_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_4_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_8 = channel_0_4.scalingKeys.elementAt(8);
      expect(scalingKey_0_4_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_4_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_9 = channel_0_4.scalingKeys.elementAt(9);
      expect(scalingKey_0_4_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_4_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_10 = channel_0_4.scalingKeys.elementAt(10);
      expect(scalingKey_0_4_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_4_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_11 = channel_0_4.scalingKeys.elementAt(11);
      expect(scalingKey_0_4_11.time, moreOrLessEquals(30));
      expect(scalingKey_0_4_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_12 = channel_0_4.scalingKeys.elementAt(12);
      expect(scalingKey_0_4_12.time, moreOrLessEquals(31));
      expect(scalingKey_0_4_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_13 = channel_0_4.scalingKeys.elementAt(13);
      expect(scalingKey_0_4_13.time, moreOrLessEquals(32));
      expect(scalingKey_0_4_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_14 = channel_0_4.scalingKeys.elementAt(14);
      expect(scalingKey_0_4_14.time, moreOrLessEquals(33));
      expect(scalingKey_0_4_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_15 = channel_0_4.scalingKeys.elementAt(15);
      expect(scalingKey_0_4_15.time, moreOrLessEquals(34));
      expect(scalingKey_0_4_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_16 = channel_0_4.scalingKeys.elementAt(16);
      expect(scalingKey_0_4_16.time, moreOrLessEquals(35));
      expect(scalingKey_0_4_16.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_17 = channel_0_4.scalingKeys.elementAt(17);
      expect(scalingKey_0_4_17.time, moreOrLessEquals(36));
      expect(scalingKey_0_4_17.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_18 = channel_0_4.scalingKeys.elementAt(18);
      expect(scalingKey_0_4_18.time, moreOrLessEquals(37));
      expect(scalingKey_0_4_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_19 = channel_0_4.scalingKeys.elementAt(19);
      expect(scalingKey_0_4_19.time, moreOrLessEquals(38));
      expect(scalingKey_0_4_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_20 = channel_0_4.scalingKeys.elementAt(20);
      expect(scalingKey_0_4_20.time, moreOrLessEquals(39));
      expect(scalingKey_0_4_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_4.preState, equals(AnimBehavior.defaults));
      expect(channel_0_4.postState, equals(AnimBehavior.defaults));
      final  channel_0_5 = animation_0.channels.elementAt(5);
      expect(channel_0_5.positionKeys.length, equals(40));
      final positionKey_0_5_0 = channel_0_5.positionKeys.elementAt(0);
      expect(positionKey_0_5_0.time, isZero);
      expect(positionKey_0_5_0.value, vector3MoreOrLessEquals(Vector3(-4.2484e-08, 0.983561, -1.39826e-08)));
      final positionKey_0_5_1 = channel_0_5.positionKeys.elementAt(1);
      expect(positionKey_0_5_1.time, moreOrLessEquals(1));
      expect(positionKey_0_5_1.value, vector3MoreOrLessEquals(Vector3(-3.98663e-08, 0.983561, -1.8209e-08)));
      final positionKey_0_5_2 = channel_0_5.positionKeys.elementAt(2);
      expect(positionKey_0_5_2.time, moreOrLessEquals(2));
      expect(positionKey_0_5_2.value, vector3MoreOrLessEquals(Vector3(-3.72487e-08, 0.983561, -2.24355e-08)));
      final positionKey_0_5_3 = channel_0_5.positionKeys.elementAt(3);
      expect(positionKey_0_5_3.time, moreOrLessEquals(3));
      expect(positionKey_0_5_3.value, vector3MoreOrLessEquals(Vector3(-3.4631e-08, 0.983561, -2.66619e-08)));
      final positionKey_0_5_4 = channel_0_5.positionKeys.elementAt(4);
      expect(positionKey_0_5_4.time, moreOrLessEquals(4));
      expect(positionKey_0_5_4.value, vector3MoreOrLessEquals(Vector3(-3.20134e-08, 0.983561, -3.08884e-08)));
      final positionKey_0_5_5 = channel_0_5.positionKeys.elementAt(5);
      expect(positionKey_0_5_5.time, moreOrLessEquals(5));
      expect(positionKey_0_5_5.value, vector3MoreOrLessEquals(Vector3(-2.93957e-08, 0.983561, -3.51148e-08)));
      final positionKey_0_5_6 = channel_0_5.positionKeys.elementAt(6);
      expect(positionKey_0_5_6.time, moreOrLessEquals(6));
      expect(positionKey_0_5_6.value, vector3MoreOrLessEquals(Vector3(-2.6778e-08, 0.983561, -3.93412e-08)));
      final positionKey_0_5_7 = channel_0_5.positionKeys.elementAt(7);
      expect(positionKey_0_5_7.time, moreOrLessEquals(7));
      expect(positionKey_0_5_7.value, vector3MoreOrLessEquals(Vector3(-2.41604e-08, 0.983561, -4.35677e-08)));
      final positionKey_0_5_8 = channel_0_5.positionKeys.elementAt(8);
      expect(positionKey_0_5_8.time, moreOrLessEquals(8));
      expect(positionKey_0_5_8.value, vector3MoreOrLessEquals(Vector3(-2.15427e-08, 0.983561, -4.77941e-08)));
      final positionKey_0_5_9 = channel_0_5.positionKeys.elementAt(9);
      expect(positionKey_0_5_9.time, moreOrLessEquals(9));
      expect(positionKey_0_5_9.value, vector3MoreOrLessEquals(Vector3(-1.89251e-08, 0.983561, -5.20206e-08)));
      final positionKey_0_5_10 = channel_0_5.positionKeys.elementAt(10);
      expect(positionKey_0_5_10.time, moreOrLessEquals(10));
      expect(positionKey_0_5_10.value, vector3MoreOrLessEquals(Vector3(-1.63074e-08, 0.983561, -5.6247e-08)));
      final positionKey_0_5_11 = channel_0_5.positionKeys.elementAt(11);
      expect(positionKey_0_5_11.time, moreOrLessEquals(11));
      expect(positionKey_0_5_11.value, vector3MoreOrLessEquals(Vector3(-1.36898e-08, 0.983561, -6.04735e-08)));
      final positionKey_0_5_12 = channel_0_5.positionKeys.elementAt(12);
      expect(positionKey_0_5_12.time, moreOrLessEquals(12));
      expect(positionKey_0_5_12.value, vector3MoreOrLessEquals(Vector3(-1.10721e-08, 0.983561, -6.46999e-08)));
      final positionKey_0_5_13 = channel_0_5.positionKeys.elementAt(13);
      expect(positionKey_0_5_13.time, moreOrLessEquals(13));
      expect(positionKey_0_5_13.value, vector3MoreOrLessEquals(Vector3(-8.45445e-09, 0.983561, -6.89264e-08)));
      final positionKey_0_5_14 = channel_0_5.positionKeys.elementAt(14);
      expect(positionKey_0_5_14.time, moreOrLessEquals(14));
      expect(positionKey_0_5_14.value, vector3MoreOrLessEquals(Vector3(-5.83679e-09, 0.983561, -7.31528e-08)));
      final positionKey_0_5_15 = channel_0_5.positionKeys.elementAt(15);
      expect(positionKey_0_5_15.time, moreOrLessEquals(15));
      expect(positionKey_0_5_15.value, vector3MoreOrLessEquals(Vector3(-3.21913e-09, 0.983561, -7.73792e-08)));
      final positionKey_0_5_16 = channel_0_5.positionKeys.elementAt(16);
      expect(positionKey_0_5_16.time, moreOrLessEquals(16));
      expect(positionKey_0_5_16.value, vector3MoreOrLessEquals(Vector3(-6.01474e-10, 0.983561, -8.16057e-08)));
      final positionKey_0_5_17 = channel_0_5.positionKeys.elementAt(17);
      expect(positionKey_0_5_17.time, moreOrLessEquals(17));
      expect(positionKey_0_5_17.value, vector3MoreOrLessEquals(Vector3(2.01618e-09, 0.983561, -8.58321e-08)));
      final positionKey_0_5_18 = channel_0_5.positionKeys.elementAt(18);
      expect(positionKey_0_5_18.time, moreOrLessEquals(18));
      expect(positionKey_0_5_18.value, vector3MoreOrLessEquals(Vector3(4.63384e-09, 0.983561, -9.00586e-08)));
      final positionKey_0_5_19 = channel_0_5.positionKeys.elementAt(19);
      expect(positionKey_0_5_19.time, moreOrLessEquals(19));
      expect(positionKey_0_5_19.value, vector3MoreOrLessEquals(Vector3(7.2515e-09, 0.983561, -9.4285e-08)));
      final positionKey_0_5_20 = channel_0_5.positionKeys.elementAt(20);
      expect(positionKey_0_5_20.time, moreOrLessEquals(20));
      expect(positionKey_0_5_20.value, vector3MoreOrLessEquals(Vector3(9.86915e-09, 0.983561, -9.85115e-08)));
      final positionKey_0_5_21 = channel_0_5.positionKeys.elementAt(21);
      expect(positionKey_0_5_21.time, moreOrLessEquals(21));
      expect(positionKey_0_5_21.value, vector3MoreOrLessEquals(Vector3(1.24868e-08, 0.983561, -1.02738e-07)));
      final positionKey_0_5_22 = channel_0_5.positionKeys.elementAt(22);
      expect(positionKey_0_5_22.time, moreOrLessEquals(22));
      expect(positionKey_0_5_22.value, vector3MoreOrLessEquals(Vector3(1.51045e-08, 0.983561, -1.06964e-07)));
      final positionKey_0_5_23 = channel_0_5.positionKeys.elementAt(23);
      expect(positionKey_0_5_23.time, moreOrLessEquals(23));
      expect(positionKey_0_5_23.value, vector3MoreOrLessEquals(Vector3(1.77221e-08, 0.983561, -1.11191e-07)));
      final positionKey_0_5_24 = channel_0_5.positionKeys.elementAt(24);
      expect(positionKey_0_5_24.time, moreOrLessEquals(24));
      expect(positionKey_0_5_24.value, vector3MoreOrLessEquals(Vector3(2.03398e-08, 0.983561, -1.15417e-07)));
      final positionKey_0_5_25 = channel_0_5.positionKeys.elementAt(25);
      expect(positionKey_0_5_25.time, moreOrLessEquals(25));
      expect(positionKey_0_5_25.value, vector3MoreOrLessEquals(Vector3(2.29574e-08, 0.983561, -1.19644e-07)));
      final positionKey_0_5_26 = channel_0_5.positionKeys.elementAt(26);
      expect(positionKey_0_5_26.time, moreOrLessEquals(26));
      expect(positionKey_0_5_26.value, vector3MoreOrLessEquals(Vector3(2.55751e-08, 0.983561, -1.2387e-07)));
      final positionKey_0_5_27 = channel_0_5.positionKeys.elementAt(27);
      expect(positionKey_0_5_27.time, moreOrLessEquals(27));
      expect(positionKey_0_5_27.value, vector3MoreOrLessEquals(Vector3(2.81928e-08, 0.983561, -1.28097e-07)));
      final positionKey_0_5_28 = channel_0_5.positionKeys.elementAt(28);
      expect(positionKey_0_5_28.time, moreOrLessEquals(28));
      expect(positionKey_0_5_28.value, vector3MoreOrLessEquals(Vector3(3.08104e-08, 0.983561, -1.32323e-07)));
      final positionKey_0_5_29 = channel_0_5.positionKeys.elementAt(29);
      expect(positionKey_0_5_29.time, moreOrLessEquals(29));
      expect(positionKey_0_5_29.value, vector3MoreOrLessEquals(Vector3(3.34281e-08, 0.983561, -1.36549e-07)));
      final positionKey_0_5_30 = channel_0_5.positionKeys.elementAt(30);
      expect(positionKey_0_5_30.time, moreOrLessEquals(30));
      expect(positionKey_0_5_30.value, vector3MoreOrLessEquals(Vector3(3.60457e-08, 0.983561, -1.40776e-07)));
      final positionKey_0_5_31 = channel_0_5.positionKeys.elementAt(31);
      expect(positionKey_0_5_31.time, moreOrLessEquals(31));
      expect(positionKey_0_5_31.value, vector3MoreOrLessEquals(Vector3(3.86634e-08, 0.983561, -1.45002e-07)));
      final positionKey_0_5_32 = channel_0_5.positionKeys.elementAt(32);
      expect(positionKey_0_5_32.time, moreOrLessEquals(32));
      expect(positionKey_0_5_32.value, vector3MoreOrLessEquals(Vector3(4.1281e-08, 0.983561, -1.49229e-07)));
      final positionKey_0_5_33 = channel_0_5.positionKeys.elementAt(33);
      expect(positionKey_0_5_33.time, moreOrLessEquals(33));
      expect(positionKey_0_5_33.value, vector3MoreOrLessEquals(Vector3(4.38987e-08, 0.983561, -1.53455e-07)));
      final positionKey_0_5_34 = channel_0_5.positionKeys.elementAt(34);
      expect(positionKey_0_5_34.time, moreOrLessEquals(34));
      expect(positionKey_0_5_34.value, vector3MoreOrLessEquals(Vector3(4.65164e-08, 0.983561, -1.57682e-07)));
      final positionKey_0_5_35 = channel_0_5.positionKeys.elementAt(35);
      expect(positionKey_0_5_35.time, moreOrLessEquals(35));
      expect(positionKey_0_5_35.value, vector3MoreOrLessEquals(Vector3(4.9134e-08, 0.983561, -1.61908e-07)));
      final positionKey_0_5_36 = channel_0_5.positionKeys.elementAt(36);
      expect(positionKey_0_5_36.time, moreOrLessEquals(36));
      expect(positionKey_0_5_36.value, vector3MoreOrLessEquals(Vector3(5.17517e-08, 0.983561, -1.66135e-07)));
      final positionKey_0_5_37 = channel_0_5.positionKeys.elementAt(37);
      expect(positionKey_0_5_37.time, moreOrLessEquals(37));
      expect(positionKey_0_5_37.value, vector3MoreOrLessEquals(Vector3(5.43693e-08, 0.983561, -1.70361e-07)));
      final positionKey_0_5_38 = channel_0_5.positionKeys.elementAt(38);
      expect(positionKey_0_5_38.time, moreOrLessEquals(38));
      expect(positionKey_0_5_38.value, vector3MoreOrLessEquals(Vector3(5.6987e-08, 0.983561, -1.74587e-07)));
      final positionKey_0_5_39 = channel_0_5.positionKeys.elementAt(39);
      expect(positionKey_0_5_39.time, moreOrLessEquals(39));
      expect(positionKey_0_5_39.value, vector3MoreOrLessEquals(Vector3(5.96046e-08, 0.983561, -1.78814e-07)));
      expect(channel_0_5.rotationKeys.length, equals(40));
      final rotationKey_0_5_0 = channel_0_5.rotationKeys.elementAt(0);
      expect(rotationKey_0_5_0.time, isZero);
      expect(rotationKey_0_5_0.value, quaternionMoreOrLessEquals(Quaternion(4.97467e-10, 4.52969e-08, 0.0257581, 0.0257581)));
      final rotationKey_0_5_1 = channel_0_5.rotationKeys.elementAt(1);
      expect(rotationKey_0_5_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_5_1.value, quaternionMoreOrLessEquals(Quaternion(-0.00482424, 0.00192141, 0.0257577, 0.0257577)));
      final rotationKey_0_5_2 = channel_0_5.rotationKeys.elementAt(2);
      expect(rotationKey_0_5_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_5_2.value, quaternionMoreOrLessEquals(Quaternion(-0.0193642, 0.00771285, 0.0257524, 0.0257524)));
      final rotationKey_0_5_3 = channel_0_5.rotationKeys.elementAt(3);
      expect(rotationKey_0_5_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_5_3.value, quaternionMoreOrLessEquals(Quaternion(-0.0430552, 0.0171503, 0.0257304, 0.0257304)));
      final rotationKey_0_5_4 = channel_0_5.rotationKeys.elementAt(4);
      expect(rotationKey_0_5_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_5_4.value, quaternionMoreOrLessEquals(Quaternion(-0.0740769, 0.0295092, 0.025676, 0.025676)));
      final rotationKey_0_5_5 = channel_0_5.rotationKeys.elementAt(5);
      expect(rotationKey_0_5_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_5_5.value, quaternionMoreOrLessEquals(Quaternion(-0.109165, 0.0434892, 0.0255796, 0.0255796)));
      final rotationKey_0_5_6 = channel_0_5.rotationKeys.elementAt(6);
      expect(rotationKey_0_5_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_5_6.value, quaternionMoreOrLessEquals(Quaternion(-0.144082, 0.057402, 0.0254464, 0.0254464)));
      final rotationKey_0_5_7 = channel_0_5.rotationKeys.elementAt(7);
      expect(rotationKey_0_5_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_5_7.value, quaternionMoreOrLessEquals(Quaternion(-0.174698, 0.0696007, 0.0252985, 0.0252985)));
      final rotationKey_0_5_8 = channel_0_5.rotationKeys.elementAt(8);
      expect(rotationKey_0_5_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_5_8.value, quaternionMoreOrLessEquals(Quaternion(-0.197991, 0.0788813, 0.0251663, 0.0251663)));
      final rotationKey_0_5_9 = channel_0_5.rotationKeys.elementAt(9);
      expect(rotationKey_0_5_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_5_9.value, quaternionMoreOrLessEquals(Quaternion(-0.212381, 0.084614, 0.0250759, 0.0250759)));
      final rotationKey_0_5_10 = channel_0_5.rotationKeys.elementAt(10);
      expect(rotationKey_0_5_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_5_10.value, quaternionMoreOrLessEquals(Quaternion(-0.217433, 0.0866268, 0.0250426, 0.0250426)));
      final rotationKey_0_5_11 = channel_0_5.rotationKeys.elementAt(11);
      expect(rotationKey_0_5_11.time, moreOrLessEquals(11));
      expect(rotationKey_0_5_11.value, quaternionMoreOrLessEquals(Quaternion(-0.207771, 0.0827777, 0.0251056, 0.0251056)));
      final rotationKey_0_5_12 = channel_0_5.rotationKeys.elementAt(12);
      expect(rotationKey_0_5_12.time, moreOrLessEquals(12));
      expect(rotationKey_0_5_12.value, quaternionMoreOrLessEquals(Quaternion(-0.1773, 0.0706385, 0.0252846, 0.0252846)));
      final rotationKey_0_5_13 = channel_0_5.rotationKeys.elementAt(13);
      expect(rotationKey_0_5_13.time, moreOrLessEquals(13));
      expect(rotationKey_0_5_13.value, quaternionMoreOrLessEquals(Quaternion(-0.126059, 0.0502235, 0.0255198, 0.0255198)));
      final rotationKey_0_5_14 = channel_0_5.rotationKeys.elementAt(14);
      expect(rotationKey_0_5_14.time, moreOrLessEquals(14));
      expect(rotationKey_0_5_14.value, quaternionMoreOrLessEquals(Quaternion(-0.0569439, 0.0226861, 0.0257096, 0.0257096)));
      final rotationKey_0_5_15 = channel_0_5.rotationKeys.elementAt(15);
      expect(rotationKey_0_5_15.time, moreOrLessEquals(15));
      expect(rotationKey_0_5_15.value, quaternionMoreOrLessEquals(Quaternion(0.0227496, -0.00906646, 0.0257503, 0.0257503)));
      final rotationKey_0_5_16 = channel_0_5.rotationKeys.elementAt(16);
      expect(rotationKey_0_5_16.time, moreOrLessEquals(16));
      expect(rotationKey_0_5_16.value, quaternionMoreOrLessEquals(Quaternion(0.10217, -0.0407095, 0.0256018, 0.0256018)));
      final rotationKey_0_5_17 = channel_0_5.rotationKeys.elementAt(17);
      expect(rotationKey_0_5_17.time, moreOrLessEquals(17));
      expect(rotationKey_0_5_17.value, quaternionMoreOrLessEquals(Quaternion(0.170642, -0.067989, 0.0253198, 0.0253198)));
      final rotationKey_0_5_18 = channel_0_5.rotationKeys.elementAt(18);
      expect(rotationKey_0_5_18.time, moreOrLessEquals(18));
      expect(rotationKey_0_5_18.value, quaternionMoreOrLessEquals(Quaternion(0.221251, -0.0881506, 0.0250169, 0.0250169)));
      final rotationKey_0_5_19 = channel_0_5.rotationKeys.elementAt(19);
      expect(rotationKey_0_5_19.time, moreOrLessEquals(19));
      expect(rotationKey_0_5_19.value, quaternionMoreOrLessEquals(Quaternion(0.251429, -0.100171, 0.0247967, 0.0247967)));
      final rotationKey_0_5_20 = channel_0_5.rotationKeys.elementAt(20);
      expect(rotationKey_0_5_20.time, moreOrLessEquals(20));
      expect(rotationKey_0_5_20.value, quaternionMoreOrLessEquals(Quaternion(0.261278, -0.104094, 0.0247183, 0.0247183)));
      final rotationKey_0_5_21 = channel_0_5.rotationKeys.elementAt(21);
      expect(rotationKey_0_5_21.time, moreOrLessEquals(21));
      expect(rotationKey_0_5_21.value, quaternionMoreOrLessEquals(Quaternion(0.259481, -0.103368, 0.0247329, 0.0247329)));
      final rotationKey_0_5_22 = channel_0_5.rotationKeys.elementAt(22);
      expect(rotationKey_0_5_22.time, moreOrLessEquals(22));
      expect(rotationKey_0_5_22.value, quaternionMoreOrLessEquals(Quaternion(0.253934, -0.101126, 0.0247772, 0.0247772)));
      final rotationKey_0_5_23 = channel_0_5.rotationKeys.elementAt(23);
      expect(rotationKey_0_5_23.time, moreOrLessEquals(23));
      expect(rotationKey_0_5_23.value, quaternionMoreOrLessEquals(Quaternion(0.244583, -0.097353, 0.0248495, 0.0248495)));
      final rotationKey_0_5_24 = channel_0_5.rotationKeys.elementAt(24);
      expect(rotationKey_0_5_24.time, moreOrLessEquals(24));
      expect(rotationKey_0_5_24.value, quaternionMoreOrLessEquals(Quaternion(0.231741, -0.0921821, 0.0249441, 0.0249441)));
      final rotationKey_0_5_25 = channel_0_5.rotationKeys.elementAt(25);
      expect(rotationKey_0_5_25.time, moreOrLessEquals(25));
      expect(rotationKey_0_5_25.value, quaternionMoreOrLessEquals(Quaternion(0.2162, -0.0859405, 0.0250512, 0.0250512)));
      final rotationKey_0_5_26 = channel_0_5.rotationKeys.elementAt(26);
      expect(rotationKey_0_5_26.time, moreOrLessEquals(26));
      expect(rotationKey_0_5_26.value, quaternionMoreOrLessEquals(Quaternion(0.199165, -0.0791223, 0.0251596, 0.0251596)));
      final rotationKey_0_5_27 = channel_0_5.rotationKeys.elementAt(27);
      expect(rotationKey_0_5_27.time, moreOrLessEquals(27));
      expect(rotationKey_0_5_27.value, quaternionMoreOrLessEquals(Quaternion(0.181998, -0.0722811, 0.0252593, 0.0252593)));
      final rotationKey_0_5_28 = channel_0_5.rotationKeys.elementAt(28);
      expect(rotationKey_0_5_28.time, moreOrLessEquals(28));
      expect(rotationKey_0_5_28.value, quaternionMoreOrLessEquals(Quaternion(0.165884, -0.0658974, 0.0253444, 0.0253444)));
      final rotationKey_0_5_29 = channel_0_5.rotationKeys.elementAt(29);
      expect(rotationKey_0_5_29.time, moreOrLessEquals(29));
      expect(rotationKey_0_5_29.value, quaternionMoreOrLessEquals(Quaternion(0.151641, -0.0602992, 0.0254127, 0.0254127)));
      final rotationKey_0_5_30 = channel_0_5.rotationKeys.elementAt(30);
      expect(rotationKey_0_5_30.time, moreOrLessEquals(30));
      expect(rotationKey_0_5_30.value, quaternionMoreOrLessEquals(Quaternion(0.1397, -0.0556572, 0.0254651, 0.0254651)));
      final rotationKey_0_5_31 = channel_0_5.rotationKeys.elementAt(31);
      expect(rotationKey_0_5_31.time, moreOrLessEquals(31));
      expect(rotationKey_0_5_31.value, quaternionMoreOrLessEquals(Quaternion(0.128246, -0.0512737, 0.0209562, 0.0209562)));
      final rotationKey_0_5_32 = channel_0_5.rotationKeys.elementAt(32);
      expect(rotationKey_0_5_32.time, moreOrLessEquals(32));
      expect(rotationKey_0_5_32.value, quaternionMoreOrLessEquals(Quaternion(0.115488, -0.0464602, 0.00729726, 0.00729726)));
      final rotationKey_0_5_33 = channel_0_5.rotationKeys.elementAt(33);
      expect(rotationKey_0_5_33.time, moreOrLessEquals(33));
      expect(rotationKey_0_5_33.value, quaternionMoreOrLessEquals(Quaternion(0.101874, -0.0413829, -0.0147248, -0.0147248)));
      final rotationKey_0_5_34 = channel_0_5.rotationKeys.elementAt(34);
      expect(rotationKey_0_5_34.time, moreOrLessEquals(34));
      expect(rotationKey_0_5_34.value, quaternionMoreOrLessEquals(Quaternion(0.0882112, -0.0363334, -0.042783, -0.042783)));
      final rotationKey_0_5_35 = channel_0_5.rotationKeys.elementAt(35);
      expect(rotationKey_0_5_35.time, moreOrLessEquals(35));
      expect(rotationKey_0_5_35.value, quaternionMoreOrLessEquals(Quaternion(0.0755925, -0.031702, -0.0730014, -0.0730014)));
      final rotationKey_0_5_36 = channel_0_5.rotationKeys.elementAt(36);
      expect(rotationKey_0_5_36.time, moreOrLessEquals(36));
      expect(rotationKey_0_5_36.value, quaternionMoreOrLessEquals(Quaternion(0.0651077, -0.027874, -0.100872, -0.100872)));
      final rotationKey_0_5_37 = channel_0_5.rotationKeys.elementAt(37);
      expect(rotationKey_0_5_37.time, moreOrLessEquals(37));
      expect(rotationKey_0_5_37.value, quaternionMoreOrLessEquals(Quaternion(0.0575032, -0.0251086, -0.122637, -0.122637)));
      final rotationKey_0_5_38 = channel_0_5.rotationKeys.elementAt(38);
      expect(rotationKey_0_5_38.time, moreOrLessEquals(38));
      expect(rotationKey_0_5_38.value, quaternionMoreOrLessEquals(Quaternion(0.0530453, -0.0234926, -0.13611, -0.13611)));
      final rotationKey_0_5_39 = channel_0_5.rotationKeys.elementAt(39);
      expect(rotationKey_0_5_39.time, moreOrLessEquals(39));
      expect(rotationKey_0_5_39.value, quaternionMoreOrLessEquals(Quaternion(0.051622, -0.022978, -0.140586, -0.140586)));
      expect(channel_0_5.scalingKeys.length, equals(40));
      final scalingKey_0_5_0 = channel_0_5.scalingKeys.elementAt(0);
      expect(scalingKey_0_5_0.time, isZero);
      expect(scalingKey_0_5_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_1 = channel_0_5.scalingKeys.elementAt(1);
      expect(scalingKey_0_5_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_5_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_2 = channel_0_5.scalingKeys.elementAt(2);
      expect(scalingKey_0_5_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_5_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_3 = channel_0_5.scalingKeys.elementAt(3);
      expect(scalingKey_0_5_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_5_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_4 = channel_0_5.scalingKeys.elementAt(4);
      expect(scalingKey_0_5_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_5_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_5 = channel_0_5.scalingKeys.elementAt(5);
      expect(scalingKey_0_5_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_5_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_6 = channel_0_5.scalingKeys.elementAt(6);
      expect(scalingKey_0_5_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_5_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_7 = channel_0_5.scalingKeys.elementAt(7);
      expect(scalingKey_0_5_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_5_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_8 = channel_0_5.scalingKeys.elementAt(8);
      expect(scalingKey_0_5_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_5_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_9 = channel_0_5.scalingKeys.elementAt(9);
      expect(scalingKey_0_5_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_5_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_10 = channel_0_5.scalingKeys.elementAt(10);
      expect(scalingKey_0_5_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_5_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_11 = channel_0_5.scalingKeys.elementAt(11);
      expect(scalingKey_0_5_11.time, moreOrLessEquals(11));
      expect(scalingKey_0_5_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_12 = channel_0_5.scalingKeys.elementAt(12);
      expect(scalingKey_0_5_12.time, moreOrLessEquals(12));
      expect(scalingKey_0_5_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_13 = channel_0_5.scalingKeys.elementAt(13);
      expect(scalingKey_0_5_13.time, moreOrLessEquals(13));
      expect(scalingKey_0_5_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_14 = channel_0_5.scalingKeys.elementAt(14);
      expect(scalingKey_0_5_14.time, moreOrLessEquals(14));
      expect(scalingKey_0_5_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_15 = channel_0_5.scalingKeys.elementAt(15);
      expect(scalingKey_0_5_15.time, moreOrLessEquals(15));
      expect(scalingKey_0_5_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_16 = channel_0_5.scalingKeys.elementAt(16);
      expect(scalingKey_0_5_16.time, moreOrLessEquals(16));
      expect(scalingKey_0_5_16.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_17 = channel_0_5.scalingKeys.elementAt(17);
      expect(scalingKey_0_5_17.time, moreOrLessEquals(17));
      expect(scalingKey_0_5_17.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_18 = channel_0_5.scalingKeys.elementAt(18);
      expect(scalingKey_0_5_18.time, moreOrLessEquals(18));
      expect(scalingKey_0_5_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_19 = channel_0_5.scalingKeys.elementAt(19);
      expect(scalingKey_0_5_19.time, moreOrLessEquals(19));
      expect(scalingKey_0_5_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_20 = channel_0_5.scalingKeys.elementAt(20);
      expect(scalingKey_0_5_20.time, moreOrLessEquals(20));
      expect(scalingKey_0_5_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_21 = channel_0_5.scalingKeys.elementAt(21);
      expect(scalingKey_0_5_21.time, moreOrLessEquals(21));
      expect(scalingKey_0_5_21.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_22 = channel_0_5.scalingKeys.elementAt(22);
      expect(scalingKey_0_5_22.time, moreOrLessEquals(22));
      expect(scalingKey_0_5_22.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_23 = channel_0_5.scalingKeys.elementAt(23);
      expect(scalingKey_0_5_23.time, moreOrLessEquals(23));
      expect(scalingKey_0_5_23.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_24 = channel_0_5.scalingKeys.elementAt(24);
      expect(scalingKey_0_5_24.time, moreOrLessEquals(24));
      expect(scalingKey_0_5_24.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_25 = channel_0_5.scalingKeys.elementAt(25);
      expect(scalingKey_0_5_25.time, moreOrLessEquals(25));
      expect(scalingKey_0_5_25.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_26 = channel_0_5.scalingKeys.elementAt(26);
      expect(scalingKey_0_5_26.time, moreOrLessEquals(26));
      expect(scalingKey_0_5_26.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_27 = channel_0_5.scalingKeys.elementAt(27);
      expect(scalingKey_0_5_27.time, moreOrLessEquals(27));
      expect(scalingKey_0_5_27.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_28 = channel_0_5.scalingKeys.elementAt(28);
      expect(scalingKey_0_5_28.time, moreOrLessEquals(28));
      expect(scalingKey_0_5_28.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_29 = channel_0_5.scalingKeys.elementAt(29);
      expect(scalingKey_0_5_29.time, moreOrLessEquals(29));
      expect(scalingKey_0_5_29.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_30 = channel_0_5.scalingKeys.elementAt(30);
      expect(scalingKey_0_5_30.time, moreOrLessEquals(30));
      expect(scalingKey_0_5_30.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_31 = channel_0_5.scalingKeys.elementAt(31);
      expect(scalingKey_0_5_31.time, moreOrLessEquals(31));
      expect(scalingKey_0_5_31.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_32 = channel_0_5.scalingKeys.elementAt(32);
      expect(scalingKey_0_5_32.time, moreOrLessEquals(32));
      expect(scalingKey_0_5_32.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_33 = channel_0_5.scalingKeys.elementAt(33);
      expect(scalingKey_0_5_33.time, moreOrLessEquals(33));
      expect(scalingKey_0_5_33.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_34 = channel_0_5.scalingKeys.elementAt(34);
      expect(scalingKey_0_5_34.time, moreOrLessEquals(34));
      expect(scalingKey_0_5_34.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_35 = channel_0_5.scalingKeys.elementAt(35);
      expect(scalingKey_0_5_35.time, moreOrLessEquals(35));
      expect(scalingKey_0_5_35.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_36 = channel_0_5.scalingKeys.elementAt(36);
      expect(scalingKey_0_5_36.time, moreOrLessEquals(36));
      expect(scalingKey_0_5_36.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_37 = channel_0_5.scalingKeys.elementAt(37);
      expect(scalingKey_0_5_37.time, moreOrLessEquals(37));
      expect(scalingKey_0_5_37.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_38 = channel_0_5.scalingKeys.elementAt(38);
      expect(scalingKey_0_5_38.time, moreOrLessEquals(38));
      expect(scalingKey_0_5_38.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_39 = channel_0_5.scalingKeys.elementAt(39);
      expect(scalingKey_0_5_39.time, moreOrLessEquals(39));
      expect(scalingKey_0_5_39.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_5.preState, equals(AnimBehavior.defaults));
      expect(channel_0_5.postState, equals(AnimBehavior.defaults));
      final  channel_0_6 = animation_0.channels.elementAt(6);
      expect(channel_0_6.positionKeys.length, equals(40));
      final positionKey_0_6_0 = channel_0_6.positionKeys.elementAt(0);
      expect(positionKey_0_6_0.time, isZero);
      expect(positionKey_0_6_0.value, vector3MoreOrLessEquals(Vector3(2.4709e-08, 1.20969, -2.56672e-08)));
      final positionKey_0_6_1 = channel_0_6.positionKeys.elementAt(1);
      expect(positionKey_0_6_1.time, moreOrLessEquals(1));
      expect(positionKey_0_6_1.value, vector3MoreOrLessEquals(Vector3(2.02546e-08, 1.20969, -2.41494e-08)));
      final positionKey_0_6_2 = channel_0_6.positionKeys.elementAt(2);
      expect(positionKey_0_6_2.time, moreOrLessEquals(2));
      expect(positionKey_0_6_2.value, vector3MoreOrLessEquals(Vector3(1.58002e-08, 1.20969, -2.26315e-08)));
      final positionKey_0_6_3 = channel_0_6.positionKeys.elementAt(3);
      expect(positionKey_0_6_3.time, moreOrLessEquals(3));
      expect(positionKey_0_6_3.value, vector3MoreOrLessEquals(Vector3(1.13459e-08, 1.20969, -2.11137e-08)));
      final positionKey_0_6_4 = channel_0_6.positionKeys.elementAt(4);
      expect(positionKey_0_6_4.time, moreOrLessEquals(4));
      expect(positionKey_0_6_4.value, vector3MoreOrLessEquals(Vector3(6.89149e-09, 1.20969, -1.95959e-08)));
      final positionKey_0_6_5 = channel_0_6.positionKeys.elementAt(5);
      expect(positionKey_0_6_5.time, moreOrLessEquals(5));
      expect(positionKey_0_6_5.value, vector3MoreOrLessEquals(Vector3(2.43712e-09, 1.20969, -1.80781e-08)));
      final positionKey_0_6_6 = channel_0_6.positionKeys.elementAt(6);
      expect(positionKey_0_6_6.time, moreOrLessEquals(6));
      expect(positionKey_0_6_6.value, vector3MoreOrLessEquals(Vector3(-2.01726e-09, 1.20969, -1.65603e-08)));
      final positionKey_0_6_7 = channel_0_6.positionKeys.elementAt(7);
      expect(positionKey_0_6_7.time, moreOrLessEquals(7));
      expect(positionKey_0_6_7.value, vector3MoreOrLessEquals(Vector3(-6.47163e-09, 1.20969, -1.50425e-08)));
      final positionKey_0_6_8 = channel_0_6.positionKeys.elementAt(8);
      expect(positionKey_0_6_8.time, moreOrLessEquals(8));
      expect(positionKey_0_6_8.value, vector3MoreOrLessEquals(Vector3(-1.0926e-08, 1.20969, -1.35247e-08)));
      final positionKey_0_6_9 = channel_0_6.positionKeys.elementAt(9);
      expect(positionKey_0_6_9.time, moreOrLessEquals(9));
      expect(positionKey_0_6_9.value, vector3MoreOrLessEquals(Vector3(-1.53804e-08, 1.20969, -1.20068e-08)));
      final positionKey_0_6_10 = channel_0_6.positionKeys.elementAt(10);
      expect(positionKey_0_6_10.time, moreOrLessEquals(10));
      expect(positionKey_0_6_10.value, vector3MoreOrLessEquals(Vector3(-1.98348e-08, 1.20969, -1.0489e-08)));
      final positionKey_0_6_11 = channel_0_6.positionKeys.elementAt(11);
      expect(positionKey_0_6_11.time, moreOrLessEquals(11));
      expect(positionKey_0_6_11.value, vector3MoreOrLessEquals(Vector3(-2.42891e-08, 1.20969, -8.97121e-09)));
      final positionKey_0_6_12 = channel_0_6.positionKeys.elementAt(12);
      expect(positionKey_0_6_12.time, moreOrLessEquals(12));
      expect(positionKey_0_6_12.value, vector3MoreOrLessEquals(Vector3(-2.87435e-08, 1.20969, -7.45339e-09)));
      final positionKey_0_6_13 = channel_0_6.positionKeys.elementAt(13);
      expect(positionKey_0_6_13.time, moreOrLessEquals(13));
      expect(positionKey_0_6_13.value, vector3MoreOrLessEquals(Vector3(-3.31979e-08, 1.20969, -5.93558e-09)));
      final positionKey_0_6_14 = channel_0_6.positionKeys.elementAt(14);
      expect(positionKey_0_6_14.time, moreOrLessEquals(14));
      expect(positionKey_0_6_14.value, vector3MoreOrLessEquals(Vector3(-3.76522e-08, 1.20969, -4.41776e-09)));
      final positionKey_0_6_15 = channel_0_6.positionKeys.elementAt(15);
      expect(positionKey_0_6_15.time, moreOrLessEquals(15));
      expect(positionKey_0_6_15.value, vector3MoreOrLessEquals(Vector3(-4.21066e-08, 1.20969, -2.89995e-09)));
      final positionKey_0_6_16 = channel_0_6.positionKeys.elementAt(16);
      expect(positionKey_0_6_16.time, moreOrLessEquals(16));
      expect(positionKey_0_6_16.value, vector3MoreOrLessEquals(Vector3(-4.6561e-08, 1.20969, -1.38213e-09)));
      final positionKey_0_6_17 = channel_0_6.positionKeys.elementAt(17);
      expect(positionKey_0_6_17.time, moreOrLessEquals(17));
      expect(positionKey_0_6_17.value, vector3MoreOrLessEquals(Vector3(-5.10154e-08, 1.20969, 1.35682e-10)));
      final positionKey_0_6_18 = channel_0_6.positionKeys.elementAt(18);
      expect(positionKey_0_6_18.time, moreOrLessEquals(18));
      expect(positionKey_0_6_18.value, vector3MoreOrLessEquals(Vector3(-5.54697e-08, 1.20969, 1.6535e-09)));
      final positionKey_0_6_19 = channel_0_6.positionKeys.elementAt(19);
      expect(positionKey_0_6_19.time, moreOrLessEquals(19));
      expect(positionKey_0_6_19.value, vector3MoreOrLessEquals(Vector3(-5.99241e-08, 1.20969, 3.17131e-09)));
      final positionKey_0_6_20 = channel_0_6.positionKeys.elementAt(20);
      expect(positionKey_0_6_20.time, moreOrLessEquals(20));
      expect(positionKey_0_6_20.value, vector3MoreOrLessEquals(Vector3(-6.43785e-08, 1.20969, 4.68913e-09)));
      final positionKey_0_6_21 = channel_0_6.positionKeys.elementAt(21);
      expect(positionKey_0_6_21.time, moreOrLessEquals(21));
      expect(positionKey_0_6_21.value, vector3MoreOrLessEquals(Vector3(-6.88329e-08, 1.20969, 6.20694e-09)));
      final positionKey_0_6_22 = channel_0_6.positionKeys.elementAt(22);
      expect(positionKey_0_6_22.time, moreOrLessEquals(22));
      expect(positionKey_0_6_22.value, vector3MoreOrLessEquals(Vector3(-7.32872e-08, 1.20969, 7.72476e-09)));
      final positionKey_0_6_23 = channel_0_6.positionKeys.elementAt(23);
      expect(positionKey_0_6_23.time, moreOrLessEquals(23));
      expect(positionKey_0_6_23.value, vector3MoreOrLessEquals(Vector3(-7.77416e-08, 1.20969, 9.24257e-09)));
      final positionKey_0_6_24 = channel_0_6.positionKeys.elementAt(24);
      expect(positionKey_0_6_24.time, moreOrLessEquals(24));
      expect(positionKey_0_6_24.value, vector3MoreOrLessEquals(Vector3(-8.2196e-08, 1.20969, 1.07604e-08)));
      final positionKey_0_6_25 = channel_0_6.positionKeys.elementAt(25);
      expect(positionKey_0_6_25.time, moreOrLessEquals(25));
      expect(positionKey_0_6_25.value, vector3MoreOrLessEquals(Vector3(-8.66504e-08, 1.20969, 1.22782e-08)));
      final positionKey_0_6_26 = channel_0_6.positionKeys.elementAt(26);
      expect(positionKey_0_6_26.time, moreOrLessEquals(26));
      expect(positionKey_0_6_26.value, vector3MoreOrLessEquals(Vector3(-9.11047e-08, 1.20969, 1.3796e-08)));
      final positionKey_0_6_27 = channel_0_6.positionKeys.elementAt(27);
      expect(positionKey_0_6_27.time, moreOrLessEquals(27));
      expect(positionKey_0_6_27.value, vector3MoreOrLessEquals(Vector3(-9.55591e-08, 1.20969, 1.53138e-08)));
      final positionKey_0_6_28 = channel_0_6.positionKeys.elementAt(28);
      expect(positionKey_0_6_28.time, moreOrLessEquals(28));
      expect(positionKey_0_6_28.value, vector3MoreOrLessEquals(Vector3(-1.00013e-07, 1.20969, 1.68316e-08)));
      final positionKey_0_6_29 = channel_0_6.positionKeys.elementAt(29);
      expect(positionKey_0_6_29.time, moreOrLessEquals(29));
      expect(positionKey_0_6_29.value, vector3MoreOrLessEquals(Vector3(-1.04468e-07, 1.20969, 1.83495e-08)));
      final positionKey_0_6_30 = channel_0_6.positionKeys.elementAt(30);
      expect(positionKey_0_6_30.time, moreOrLessEquals(30));
      expect(positionKey_0_6_30.value, vector3MoreOrLessEquals(Vector3(-1.08922e-07, 1.20969, 1.98673e-08)));
      final positionKey_0_6_31 = channel_0_6.positionKeys.elementAt(31);
      expect(positionKey_0_6_31.time, moreOrLessEquals(31));
      expect(positionKey_0_6_31.value, vector3MoreOrLessEquals(Vector3(-1.13377e-07, 1.20969, 2.13851e-08)));
      final positionKey_0_6_32 = channel_0_6.positionKeys.elementAt(32);
      expect(positionKey_0_6_32.time, moreOrLessEquals(32));
      expect(positionKey_0_6_32.value, vector3MoreOrLessEquals(Vector3(-1.17831e-07, 1.20969, 2.29029e-08)));
      final positionKey_0_6_33 = channel_0_6.positionKeys.elementAt(33);
      expect(positionKey_0_6_33.time, moreOrLessEquals(33));
      expect(positionKey_0_6_33.value, vector3MoreOrLessEquals(Vector3(-1.22285e-07, 1.20969, 2.44207e-08)));
      final positionKey_0_6_34 = channel_0_6.positionKeys.elementAt(34);
      expect(positionKey_0_6_34.time, moreOrLessEquals(34));
      expect(positionKey_0_6_34.value, vector3MoreOrLessEquals(Vector3(-1.2674e-07, 1.20969, 2.59385e-08)));
      final positionKey_0_6_35 = channel_0_6.positionKeys.elementAt(35);
      expect(positionKey_0_6_35.time, moreOrLessEquals(35));
      expect(positionKey_0_6_35.value, vector3MoreOrLessEquals(Vector3(-1.31194e-07, 1.20969, 2.74563e-08)));
      final positionKey_0_6_36 = channel_0_6.positionKeys.elementAt(36);
      expect(positionKey_0_6_36.time, moreOrLessEquals(36));
      expect(positionKey_0_6_36.value, vector3MoreOrLessEquals(Vector3(-1.35648e-07, 1.20969, 2.89742e-08)));
      final positionKey_0_6_37 = channel_0_6.positionKeys.elementAt(37);
      expect(positionKey_0_6_37.time, moreOrLessEquals(37));
      expect(positionKey_0_6_37.value, vector3MoreOrLessEquals(Vector3(-1.40103e-07, 1.20969, 3.0492e-08)));
      final positionKey_0_6_38 = channel_0_6.positionKeys.elementAt(38);
      expect(positionKey_0_6_38.time, moreOrLessEquals(38));
      expect(positionKey_0_6_38.value, vector3MoreOrLessEquals(Vector3(-1.44557e-07, 1.20969, 3.20098e-08)));
      final positionKey_0_6_39 = channel_0_6.positionKeys.elementAt(39);
      expect(positionKey_0_6_39.time, moreOrLessEquals(39));
      expect(positionKey_0_6_39.value, vector3MoreOrLessEquals(Vector3(-1.49012e-07, 1.20969, 3.35276e-08)));
      expect(channel_0_6.rotationKeys.length, equals(40));
      final rotationKey_0_6_0 = channel_0_6.rotationKeys.elementAt(0);
      expect(rotationKey_0_6_0.time, isZero);
      expect(rotationKey_0_6_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0423494, 0.0423494)));
      final rotationKey_0_6_1 = channel_0_6.rotationKeys.elementAt(1);
      expect(rotationKey_0_6_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_6_1.value, quaternionMoreOrLessEquals(Quaternion(-0.000771381, 0.00130695, 0.031399, 0.031399)));
      final rotationKey_0_6_2 = channel_0_6.rotationKeys.elementAt(2);
      expect(rotationKey_0_6_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_6_2.value, quaternionMoreOrLessEquals(Quaternion(-0.00310932, 0.00528184, -0.00179724, -0.00179724)));
      final rotationKey_0_6_3 = channel_0_6.rotationKeys.elementAt(3);
      expect(rotationKey_0_6_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_6_3.value, quaternionMoreOrLessEquals(Quaternion(-0.00694934, 0.0118426, -0.0563729, -0.0563729)));
      final rotationKey_0_6_4 = channel_0_6.rotationKeys.elementAt(4);
      expect(rotationKey_0_6_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_6_4.value, quaternionMoreOrLessEquals(Quaternion(-0.0120007, 0.0205311, -0.128281, -0.128281)));
      final rotationKey_0_6_5 = channel_0_6.rotationKeys.elementAt(5);
      expect(rotationKey_0_6_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_6_5.value, quaternionMoreOrLessEquals(Quaternion(-0.0176852, 0.0304031, -0.209372, -0.209372)));
      final rotationKey_0_6_6 = channel_0_6.rotationKeys.elementAt(6);
      expect(rotationKey_0_6_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_6_6.value, quaternionMoreOrLessEquals(Quaternion(-0.023248, 0.0402057, -0.288899, -0.288899)));
      final rotationKey_0_6_7 = channel_0_6.rotationKeys.elementAt(7);
      expect(rotationKey_0_6_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_6_7.value, quaternionMoreOrLessEquals(Quaternion(-0.0280182, 0.0488128, -0.3572, -0.3572)));
      final rotationKey_0_6_8 = channel_0_6.rotationKeys.elementAt(8);
      expect(rotationKey_0_6_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_6_8.value, quaternionMoreOrLessEquals(Quaternion(-0.0316047, 0.0555622, -0.408534, -0.408534)));
      final rotationKey_0_6_9 = channel_0_6.rotationKeys.elementAt(9);
      expect(rotationKey_0_6_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_6_9.value, quaternionMoreOrLessEquals(Quaternion(-0.0338904, 0.0602539, -0.441078, -0.441078)));
      final rotationKey_0_6_10 = channel_0_6.rotationKeys.elementAt(10);
      expect(rotationKey_0_6_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_6_10.value, quaternionMoreOrLessEquals(Quaternion(-0.0349046, 0.0629404, -0.455145, -0.455145)));
      final rotationKey_0_6_11 = channel_0_6.rotationKeys.elementAt(11);
      expect(rotationKey_0_6_11.time, moreOrLessEquals(11));
      expect(rotationKey_0_6_11.value, quaternionMoreOrLessEquals(Quaternion(-0.0233369, 0.0652603, -0.459034, -0.459034)));
      final rotationKey_0_6_12 = channel_0_6.rotationKeys.elementAt(12);
      expect(rotationKey_0_6_12.time, moreOrLessEquals(12));
      expect(rotationKey_0_6_12.value, quaternionMoreOrLessEquals(Quaternion(0.0130469, 0.0687526, -0.459978, -0.459978)));
      final rotationKey_0_6_13 = channel_0_6.rotationKeys.elementAt(13);
      expect(rotationKey_0_6_13.time, moreOrLessEquals(13));
      expect(rotationKey_0_6_13.value, quaternionMoreOrLessEquals(Quaternion(0.0739426, 0.0731827, -0.456662, -0.456662)));
      final rotationKey_0_6_14 = channel_0_6.rotationKeys.elementAt(14);
      expect(rotationKey_0_6_14.time, moreOrLessEquals(14));
      expect(rotationKey_0_6_14.value, quaternionMoreOrLessEquals(Quaternion(0.154987, 0.078, -0.447572, -0.447572)));
      final rotationKey_0_6_15 = channel_0_6.rotationKeys.elementAt(15);
      expect(rotationKey_0_6_15.time, moreOrLessEquals(15));
      expect(rotationKey_0_6_15.value, quaternionMoreOrLessEquals(Quaternion(0.246293, 0.0824389, -0.43228, -0.43228)));
      final rotationKey_0_6_16 = channel_0_6.rotationKeys.elementAt(16);
      expect(rotationKey_0_6_16.time, moreOrLessEquals(16));
      expect(rotationKey_0_6_16.value, quaternionMoreOrLessEquals(Quaternion(0.334487, 0.0858574, -0.412658, -0.412658)));
      final rotationKey_0_6_17 = channel_0_6.rotationKeys.elementAt(17);
      expect(rotationKey_0_6_17.time, moreOrLessEquals(17));
      expect(rotationKey_0_6_17.value, quaternionMoreOrLessEquals(Quaternion(0.407949, 0.0880533, -0.392529, -0.392529)));
      final rotationKey_0_6_18 = channel_0_6.rotationKeys.elementAt(18);
      expect(rotationKey_0_6_18.time, moreOrLessEquals(18));
      expect(rotationKey_0_6_18.value, quaternionMoreOrLessEquals(Quaternion(0.460562, 0.0892371, -0.375823, -0.375823)));
      final rotationKey_0_6_19 = channel_0_6.rotationKeys.elementAt(19);
      expect(rotationKey_0_6_19.time, moreOrLessEquals(19));
      expect(rotationKey_0_6_19.value, quaternionMoreOrLessEquals(Quaternion(0.491204, 0.0897612, -0.365129, -0.365129)));
      final rotationKey_0_6_20 = channel_0_6.rotationKeys.elementAt(20);
      expect(rotationKey_0_6_20.time, moreOrLessEquals(20));
      expect(rotationKey_0_6_20.value, quaternionMoreOrLessEquals(Quaternion(0.501078, 0.0899003, -0.361516, -0.361516)));
      final rotationKey_0_6_21 = channel_0_6.rotationKeys.elementAt(21);
      expect(rotationKey_0_6_21.time, moreOrLessEquals(21));
      expect(rotationKey_0_6_21.value, quaternionMoreOrLessEquals(Quaternion(0.49051, 0.0896267, -0.365177, -0.365177)));
      final rotationKey_0_6_22 = channel_0_6.rotationKeys.elementAt(22);
      expect(rotationKey_0_6_22.time, moreOrLessEquals(22));
      expect(rotationKey_0_6_22.value, quaternionMoreOrLessEquals(Quaternion(0.457704, 0.0886996, -0.376, -0.376)));
      final rotationKey_0_6_23 = channel_0_6.rotationKeys.elementAt(23);
      expect(rotationKey_0_6_23.time, moreOrLessEquals(23));
      expect(rotationKey_0_6_23.value, quaternionMoreOrLessEquals(Quaternion(0.401334, 0.0868543, -0.392833, -0.392833)));
      final rotationKey_0_6_24 = channel_0_6.rotationKeys.elementAt(24);
      expect(rotationKey_0_6_24.time, moreOrLessEquals(24));
      expect(rotationKey_0_6_24.value, quaternionMoreOrLessEquals(Quaternion(0.322641, 0.0837912, -0.412928, -0.412928)));
      final rotationKey_0_6_25 = channel_0_6.rotationKeys.elementAt(25);
      expect(rotationKey_0_6_25.time, moreOrLessEquals(25));
      expect(rotationKey_0_6_25.value, quaternionMoreOrLessEquals(Quaternion(0.228389, 0.0794383, -0.432208, -0.432208)));
      final rotationKey_0_6_26 = channel_0_6.rotationKeys.elementAt(26);
      expect(rotationKey_0_6_26.time, moreOrLessEquals(26));
      expect(rotationKey_0_6_26.value, quaternionMoreOrLessEquals(Quaternion(0.131302, 0.0742196, -0.446914, -0.446914)));
      final rotationKey_0_6_27 = channel_0_6.rotationKeys.elementAt(27);
      expect(rotationKey_0_6_27.time, moreOrLessEquals(27));
      expect(rotationKey_0_6_27.value, quaternionMoreOrLessEquals(Quaternion(0.0456845, 0.0689966, -0.455503, -0.455503)));
      final rotationKey_0_6_28 = channel_0_6.rotationKeys.elementAt(28);
      expect(rotationKey_0_6_28.time, moreOrLessEquals(28));
      expect(rotationKey_0_6_28.value, quaternionMoreOrLessEquals(Quaternion(-0.0182808, 0.0646604, -0.458817, -0.458817)));
      final rotationKey_0_6_29 = channel_0_6.rotationKeys.elementAt(29);
      expect(rotationKey_0_6_29.time, moreOrLessEquals(29));
      expect(rotationKey_0_6_29.value, quaternionMoreOrLessEquals(Quaternion(-0.0563915, 0.061785, -0.458641, -0.458641)));
      final rotationKey_0_6_30 = channel_0_6.rotationKeys.elementAt(30);
      expect(rotationKey_0_6_30.time, moreOrLessEquals(30));
      expect(rotationKey_0_6_30.value, quaternionMoreOrLessEquals(Quaternion(-0.0685211, 0.0605808, -0.456376, -0.456376)));
      final rotationKey_0_6_31 = channel_0_6.rotationKeys.elementAt(31);
      expect(rotationKey_0_6_31.time, moreOrLessEquals(31));
      expect(rotationKey_0_6_31.value, quaternionMoreOrLessEquals(Quaternion(-0.0672066, 0.0605409, -0.451983, -0.451983)));
      final rotationKey_0_6_32 = channel_0_6.rotationKeys.elementAt(32);
      expect(rotationKey_0_6_32.time, moreOrLessEquals(32));
      expect(rotationKey_0_6_32.value, quaternionMoreOrLessEquals(Quaternion(-0.0641054, 0.0611527, -0.444955, -0.444955)));
      final rotationKey_0_6_33 = channel_0_6.rotationKeys.elementAt(33);
      expect(rotationKey_0_6_33.time, moreOrLessEquals(33));
      expect(rotationKey_0_6_33.value, quaternionMoreOrLessEquals(Quaternion(-0.0593884, 0.0623626, -0.435586, -0.435586)));
      final rotationKey_0_6_34 = channel_0_6.rotationKeys.elementAt(34);
      expect(rotationKey_0_6_34.time, moreOrLessEquals(34));
      expect(rotationKey_0_6_34.value, quaternionMoreOrLessEquals(Quaternion(-0.0535046, 0.064022, -0.424613, -0.424613)));
      final rotationKey_0_6_35 = channel_0_6.rotationKeys.elementAt(35);
      expect(rotationKey_0_6_35.time, moreOrLessEquals(35));
      expect(rotationKey_0_6_35.value, quaternionMoreOrLessEquals(Quaternion(-0.0471964, 0.0658839, -0.413245, -0.413245)));
      final rotationKey_0_6_36 = channel_0_6.rotationKeys.elementAt(36);
      expect(rotationKey_0_6_36.time, moreOrLessEquals(36));
      expect(rotationKey_0_6_36.value, quaternionMoreOrLessEquals(Quaternion(-0.0413508, 0.067652, -0.402919, -0.402919)));
      final rotationKey_0_6_37 = channel_0_6.rotationKeys.elementAt(37);
      expect(rotationKey_0_6_37.time, moreOrLessEquals(37));
      expect(rotationKey_0_6_37.value, quaternionMoreOrLessEquals(Quaternion(-0.0367463, 0.069065, -0.394887, -0.394887)));
      final rotationKey_0_6_38 = channel_0_6.rotationKeys.elementAt(38);
      expect(rotationKey_0_6_38.time, moreOrLessEquals(38));
      expect(rotationKey_0_6_38.value, quaternionMoreOrLessEquals(Quaternion(-0.0338726, 0.0699556, -0.389917, -0.389917)));
      final rotationKey_0_6_39 = channel_0_6.rotationKeys.elementAt(39);
      expect(rotationKey_0_6_39.time, moreOrLessEquals(39));
      expect(rotationKey_0_6_39.value, quaternionMoreOrLessEquals(Quaternion(-0.0329138, 0.0702549, -0.38827, -0.38827)));
      expect(channel_0_6.scalingKeys.length, equals(40));
      final scalingKey_0_6_0 = channel_0_6.scalingKeys.elementAt(0);
      expect(scalingKey_0_6_0.time, isZero);
      expect(scalingKey_0_6_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_1 = channel_0_6.scalingKeys.elementAt(1);
      expect(scalingKey_0_6_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_6_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_2 = channel_0_6.scalingKeys.elementAt(2);
      expect(scalingKey_0_6_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_6_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_3 = channel_0_6.scalingKeys.elementAt(3);
      expect(scalingKey_0_6_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_6_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_4 = channel_0_6.scalingKeys.elementAt(4);
      expect(scalingKey_0_6_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_6_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_5 = channel_0_6.scalingKeys.elementAt(5);
      expect(scalingKey_0_6_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_6_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_6 = channel_0_6.scalingKeys.elementAt(6);
      expect(scalingKey_0_6_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_6_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_7 = channel_0_6.scalingKeys.elementAt(7);
      expect(scalingKey_0_6_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_6_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_8 = channel_0_6.scalingKeys.elementAt(8);
      expect(scalingKey_0_6_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_6_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_9 = channel_0_6.scalingKeys.elementAt(9);
      expect(scalingKey_0_6_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_6_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_10 = channel_0_6.scalingKeys.elementAt(10);
      expect(scalingKey_0_6_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_6_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_11 = channel_0_6.scalingKeys.elementAt(11);
      expect(scalingKey_0_6_11.time, moreOrLessEquals(11));
      expect(scalingKey_0_6_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_12 = channel_0_6.scalingKeys.elementAt(12);
      expect(scalingKey_0_6_12.time, moreOrLessEquals(12));
      expect(scalingKey_0_6_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_13 = channel_0_6.scalingKeys.elementAt(13);
      expect(scalingKey_0_6_13.time, moreOrLessEquals(13));
      expect(scalingKey_0_6_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_14 = channel_0_6.scalingKeys.elementAt(14);
      expect(scalingKey_0_6_14.time, moreOrLessEquals(14));
      expect(scalingKey_0_6_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_15 = channel_0_6.scalingKeys.elementAt(15);
      expect(scalingKey_0_6_15.time, moreOrLessEquals(15));
      expect(scalingKey_0_6_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_16 = channel_0_6.scalingKeys.elementAt(16);
      expect(scalingKey_0_6_16.time, moreOrLessEquals(16));
      expect(scalingKey_0_6_16.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_17 = channel_0_6.scalingKeys.elementAt(17);
      expect(scalingKey_0_6_17.time, moreOrLessEquals(17));
      expect(scalingKey_0_6_17.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_18 = channel_0_6.scalingKeys.elementAt(18);
      expect(scalingKey_0_6_18.time, moreOrLessEquals(18));
      expect(scalingKey_0_6_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_19 = channel_0_6.scalingKeys.elementAt(19);
      expect(scalingKey_0_6_19.time, moreOrLessEquals(19));
      expect(scalingKey_0_6_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_20 = channel_0_6.scalingKeys.elementAt(20);
      expect(scalingKey_0_6_20.time, moreOrLessEquals(20));
      expect(scalingKey_0_6_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_21 = channel_0_6.scalingKeys.elementAt(21);
      expect(scalingKey_0_6_21.time, moreOrLessEquals(21));
      expect(scalingKey_0_6_21.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_22 = channel_0_6.scalingKeys.elementAt(22);
      expect(scalingKey_0_6_22.time, moreOrLessEquals(22));
      expect(scalingKey_0_6_22.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_23 = channel_0_6.scalingKeys.elementAt(23);
      expect(scalingKey_0_6_23.time, moreOrLessEquals(23));
      expect(scalingKey_0_6_23.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_24 = channel_0_6.scalingKeys.elementAt(24);
      expect(scalingKey_0_6_24.time, moreOrLessEquals(24));
      expect(scalingKey_0_6_24.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_25 = channel_0_6.scalingKeys.elementAt(25);
      expect(scalingKey_0_6_25.time, moreOrLessEquals(25));
      expect(scalingKey_0_6_25.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_26 = channel_0_6.scalingKeys.elementAt(26);
      expect(scalingKey_0_6_26.time, moreOrLessEquals(26));
      expect(scalingKey_0_6_26.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_27 = channel_0_6.scalingKeys.elementAt(27);
      expect(scalingKey_0_6_27.time, moreOrLessEquals(27));
      expect(scalingKey_0_6_27.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_28 = channel_0_6.scalingKeys.elementAt(28);
      expect(scalingKey_0_6_28.time, moreOrLessEquals(28));
      expect(scalingKey_0_6_28.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_29 = channel_0_6.scalingKeys.elementAt(29);
      expect(scalingKey_0_6_29.time, moreOrLessEquals(29));
      expect(scalingKey_0_6_29.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_30 = channel_0_6.scalingKeys.elementAt(30);
      expect(scalingKey_0_6_30.time, moreOrLessEquals(30));
      expect(scalingKey_0_6_30.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_31 = channel_0_6.scalingKeys.elementAt(31);
      expect(scalingKey_0_6_31.time, moreOrLessEquals(31));
      expect(scalingKey_0_6_31.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_32 = channel_0_6.scalingKeys.elementAt(32);
      expect(scalingKey_0_6_32.time, moreOrLessEquals(32));
      expect(scalingKey_0_6_32.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_33 = channel_0_6.scalingKeys.elementAt(33);
      expect(scalingKey_0_6_33.time, moreOrLessEquals(33));
      expect(scalingKey_0_6_33.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_34 = channel_0_6.scalingKeys.elementAt(34);
      expect(scalingKey_0_6_34.time, moreOrLessEquals(34));
      expect(scalingKey_0_6_34.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_35 = channel_0_6.scalingKeys.elementAt(35);
      expect(scalingKey_0_6_35.time, moreOrLessEquals(35));
      expect(scalingKey_0_6_35.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_36 = channel_0_6.scalingKeys.elementAt(36);
      expect(scalingKey_0_6_36.time, moreOrLessEquals(36));
      expect(scalingKey_0_6_36.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_37 = channel_0_6.scalingKeys.elementAt(37);
      expect(scalingKey_0_6_37.time, moreOrLessEquals(37));
      expect(scalingKey_0_6_37.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_38 = channel_0_6.scalingKeys.elementAt(38);
      expect(scalingKey_0_6_38.time, moreOrLessEquals(38));
      expect(scalingKey_0_6_38.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_39 = channel_0_6.scalingKeys.elementAt(39);
      expect(scalingKey_0_6_39.time, moreOrLessEquals(39));
      expect(scalingKey_0_6_39.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_6.preState, equals(AnimBehavior.defaults));
      expect(channel_0_6.postState, equals(AnimBehavior.defaults));
      final  channel_0_7 = animation_0.channels.elementAt(7);
      expect(channel_0_7.positionKeys.length, equals(40));
      final positionKey_0_7_0 = channel_0_7.positionKeys.elementAt(0);
      expect(positionKey_0_7_0.time, isZero);
      expect(positionKey_0_7_0.value, vector3MoreOrLessEquals(Vector3(-2.00879e-07, 1.30276, -3.64732e-08)));
      final positionKey_0_7_1 = channel_0_7.positionKeys.elementAt(1);
      expect(positionKey_0_7_1.time, moreOrLessEquals(1));
      expect(positionKey_0_7_1.value, vector3MoreOrLessEquals(Vector3(-1.95728e-07, 1.30276, -3.47739e-08)));
      final positionKey_0_7_2 = channel_0_7.positionKeys.elementAt(2);
      expect(positionKey_0_7_2.time, moreOrLessEquals(2));
      expect(positionKey_0_7_2.value, vector3MoreOrLessEquals(Vector3(-1.90578e-07, 1.30276, -3.30745e-08)));
      final positionKey_0_7_3 = channel_0_7.positionKeys.elementAt(3);
      expect(positionKey_0_7_3.time, moreOrLessEquals(3));
      expect(positionKey_0_7_3.value, vector3MoreOrLessEquals(Vector3(-1.85427e-07, 1.30276, -3.13751e-08)));
      final positionKey_0_7_4 = channel_0_7.positionKeys.elementAt(4);
      expect(positionKey_0_7_4.time, moreOrLessEquals(4));
      expect(positionKey_0_7_4.value, vector3MoreOrLessEquals(Vector3(-1.80276e-07, 1.30276, -2.96758e-08)));
      final positionKey_0_7_5 = channel_0_7.positionKeys.elementAt(5);
      expect(positionKey_0_7_5.time, moreOrLessEquals(5));
      expect(positionKey_0_7_5.value, vector3MoreOrLessEquals(Vector3(-1.75125e-07, 1.30276, -2.79764e-08)));
      final positionKey_0_7_6 = channel_0_7.positionKeys.elementAt(6);
      expect(positionKey_0_7_6.time, moreOrLessEquals(6));
      expect(positionKey_0_7_6.value, vector3MoreOrLessEquals(Vector3(-1.69975e-07, 1.30276, -2.6277e-08)));
      final positionKey_0_7_7 = channel_0_7.positionKeys.elementAt(7);
      expect(positionKey_0_7_7.time, moreOrLessEquals(7));
      expect(positionKey_0_7_7.value, vector3MoreOrLessEquals(Vector3(-1.64824e-07, 1.30276, -2.45776e-08)));
      final positionKey_0_7_8 = channel_0_7.positionKeys.elementAt(8);
      expect(positionKey_0_7_8.time, moreOrLessEquals(8));
      expect(positionKey_0_7_8.value, vector3MoreOrLessEquals(Vector3(-1.59673e-07, 1.30276, -2.28783e-08)));
      final positionKey_0_7_9 = channel_0_7.positionKeys.elementAt(9);
      expect(positionKey_0_7_9.time, moreOrLessEquals(9));
      expect(positionKey_0_7_9.value, vector3MoreOrLessEquals(Vector3(-1.54522e-07, 1.30276, -2.11789e-08)));
      final positionKey_0_7_10 = channel_0_7.positionKeys.elementAt(10);
      expect(positionKey_0_7_10.time, moreOrLessEquals(10));
      expect(positionKey_0_7_10.value, vector3MoreOrLessEquals(Vector3(-1.49372e-07, 1.30276, -1.94795e-08)));
      final positionKey_0_7_11 = channel_0_7.positionKeys.elementAt(11);
      expect(positionKey_0_7_11.time, moreOrLessEquals(11));
      expect(positionKey_0_7_11.value, vector3MoreOrLessEquals(Vector3(-1.44221e-07, 1.30276, -1.77801e-08)));
      final positionKey_0_7_12 = channel_0_7.positionKeys.elementAt(12);
      expect(positionKey_0_7_12.time, moreOrLessEquals(12));
      expect(positionKey_0_7_12.value, vector3MoreOrLessEquals(Vector3(-1.3907e-07, 1.30276, -1.60808e-08)));
      final positionKey_0_7_13 = channel_0_7.positionKeys.elementAt(13);
      expect(positionKey_0_7_13.time, moreOrLessEquals(13));
      expect(positionKey_0_7_13.value, vector3MoreOrLessEquals(Vector3(-1.33919e-07, 1.30276, -1.43814e-08)));
      final positionKey_0_7_14 = channel_0_7.positionKeys.elementAt(14);
      expect(positionKey_0_7_14.time, moreOrLessEquals(14));
      expect(positionKey_0_7_14.value, vector3MoreOrLessEquals(Vector3(-1.28769e-07, 1.30276, -1.2682e-08)));
      final positionKey_0_7_15 = channel_0_7.positionKeys.elementAt(15);
      expect(positionKey_0_7_15.time, moreOrLessEquals(15));
      expect(positionKey_0_7_15.value, vector3MoreOrLessEquals(Vector3(-1.23618e-07, 1.30276, -1.09826e-08)));
      final positionKey_0_7_16 = channel_0_7.positionKeys.elementAt(16);
      expect(positionKey_0_7_16.time, moreOrLessEquals(16));
      expect(positionKey_0_7_16.value, vector3MoreOrLessEquals(Vector3(-1.18467e-07, 1.30276, -9.28327e-09)));
      final positionKey_0_7_17 = channel_0_7.positionKeys.elementAt(17);
      expect(positionKey_0_7_17.time, moreOrLessEquals(17));
      expect(positionKey_0_7_17.value, vector3MoreOrLessEquals(Vector3(-1.13316e-07, 1.30276, -7.5839e-09)));
      final positionKey_0_7_18 = channel_0_7.positionKeys.elementAt(18);
      expect(positionKey_0_7_18.time, moreOrLessEquals(18));
      expect(positionKey_0_7_18.value, vector3MoreOrLessEquals(Vector3(-1.08166e-07, 1.30276, -5.88452e-09)));
      final positionKey_0_7_19 = channel_0_7.positionKeys.elementAt(19);
      expect(positionKey_0_7_19.time, moreOrLessEquals(19));
      expect(positionKey_0_7_19.value, vector3MoreOrLessEquals(Vector3(-1.03015e-07, 1.30276, -4.18515e-09)));
      final positionKey_0_7_20 = channel_0_7.positionKeys.elementAt(20);
      expect(positionKey_0_7_20.time, moreOrLessEquals(20));
      expect(positionKey_0_7_20.value, vector3MoreOrLessEquals(Vector3(-9.78642e-08, 1.30276, -2.48578e-09)));
      final positionKey_0_7_21 = channel_0_7.positionKeys.elementAt(21);
      expect(positionKey_0_7_21.time, moreOrLessEquals(21));
      expect(positionKey_0_7_21.value, vector3MoreOrLessEquals(Vector3(-9.27135e-08, 1.30276, -7.86404e-10)));
      final positionKey_0_7_22 = channel_0_7.positionKeys.elementAt(22);
      expect(positionKey_0_7_22.time, moreOrLessEquals(22));
      expect(positionKey_0_7_22.value, vector3MoreOrLessEquals(Vector3(-8.75627e-08, 1.30276, 9.12969e-10)));
      final positionKey_0_7_23 = channel_0_7.positionKeys.elementAt(23);
      expect(positionKey_0_7_23.time, moreOrLessEquals(23));
      expect(positionKey_0_7_23.value, vector3MoreOrLessEquals(Vector3(-8.2412e-08, 1.30276, 2.61234e-09)));
      final positionKey_0_7_24 = channel_0_7.positionKeys.elementAt(24);
      expect(positionKey_0_7_24.time, moreOrLessEquals(24));
      expect(positionKey_0_7_24.value, vector3MoreOrLessEquals(Vector3(-7.72612e-08, 1.30276, 4.31172e-09)));
      final positionKey_0_7_25 = channel_0_7.positionKeys.elementAt(25);
      expect(positionKey_0_7_25.time, moreOrLessEquals(25));
      expect(positionKey_0_7_25.value, vector3MoreOrLessEquals(Vector3(-7.21105e-08, 1.30276, 6.01109e-09)));
      final positionKey_0_7_26 = channel_0_7.positionKeys.elementAt(26);
      expect(positionKey_0_7_26.time, moreOrLessEquals(26));
      expect(positionKey_0_7_26.value, vector3MoreOrLessEquals(Vector3(-6.69597e-08, 1.30276, 7.71047e-09)));
      final positionKey_0_7_27 = channel_0_7.positionKeys.elementAt(27);
      expect(positionKey_0_7_27.time, moreOrLessEquals(27));
      expect(positionKey_0_7_27.value, vector3MoreOrLessEquals(Vector3(-6.1809e-08, 1.30276, 9.40984e-09)));
      final positionKey_0_7_28 = channel_0_7.positionKeys.elementAt(28);
      expect(positionKey_0_7_28.time, moreOrLessEquals(28));
      expect(positionKey_0_7_28.value, vector3MoreOrLessEquals(Vector3(-5.66582e-08, 1.30276, 1.11092e-08)));
      final positionKey_0_7_29 = channel_0_7.positionKeys.elementAt(29);
      expect(positionKey_0_7_29.time, moreOrLessEquals(29));
      expect(positionKey_0_7_29.value, vector3MoreOrLessEquals(Vector3(-5.15075e-08, 1.30276, 1.28086e-08)));
      final positionKey_0_7_30 = channel_0_7.positionKeys.elementAt(30);
      expect(positionKey_0_7_30.time, moreOrLessEquals(30));
      expect(positionKey_0_7_30.value, vector3MoreOrLessEquals(Vector3(-4.63567e-08, 1.30276, 1.4508e-08)));
      final positionKey_0_7_31 = channel_0_7.positionKeys.elementAt(31);
      expect(positionKey_0_7_31.time, moreOrLessEquals(31));
      expect(positionKey_0_7_31.value, vector3MoreOrLessEquals(Vector3(-4.1206e-08, 1.30276, 1.62073e-08)));
      final positionKey_0_7_32 = channel_0_7.positionKeys.elementAt(32);
      expect(positionKey_0_7_32.time, moreOrLessEquals(32));
      expect(positionKey_0_7_32.value, vector3MoreOrLessEquals(Vector3(-3.60553e-08, 1.30276, 1.79067e-08)));
      final positionKey_0_7_33 = channel_0_7.positionKeys.elementAt(33);
      expect(positionKey_0_7_33.time, moreOrLessEquals(33));
      expect(positionKey_0_7_33.value, vector3MoreOrLessEquals(Vector3(-3.09045e-08, 1.30276, 1.96061e-08)));
      final positionKey_0_7_34 = channel_0_7.positionKeys.elementAt(34);
      expect(positionKey_0_7_34.time, moreOrLessEquals(34));
      expect(positionKey_0_7_34.value, vector3MoreOrLessEquals(Vector3(-2.57537e-08, 1.30276, 2.13054e-08)));
      final positionKey_0_7_35 = channel_0_7.positionKeys.elementAt(35);
      expect(positionKey_0_7_35.time, moreOrLessEquals(35));
      expect(positionKey_0_7_35.value, vector3MoreOrLessEquals(Vector3(-2.0603e-08, 1.30276, 2.30048e-08)));
      final positionKey_0_7_36 = channel_0_7.positionKeys.elementAt(36);
      expect(positionKey_0_7_36.time, moreOrLessEquals(36));
      expect(positionKey_0_7_36.value, vector3MoreOrLessEquals(Vector3(-1.54523e-08, 1.30276, 2.47042e-08)));
      final positionKey_0_7_37 = channel_0_7.positionKeys.elementAt(37);
      expect(positionKey_0_7_37.time, moreOrLessEquals(37));
      expect(positionKey_0_7_37.value, vector3MoreOrLessEquals(Vector3(-1.03015e-08, 1.30276, 2.64036e-08)));
      final positionKey_0_7_38 = channel_0_7.positionKeys.elementAt(38);
      expect(positionKey_0_7_38.time, moreOrLessEquals(38));
      expect(positionKey_0_7_38.value, vector3MoreOrLessEquals(Vector3(-5.15077e-09, 1.30276, 2.81029e-08)));
      final positionKey_0_7_39 = channel_0_7.positionKeys.elementAt(39);
      expect(positionKey_0_7_39.time, moreOrLessEquals(39));
      expect(positionKey_0_7_39.value, vector3MoreOrLessEquals(Vector3(0, 1.30276, 2.98023e-08)));
      expect(channel_0_7.rotationKeys.length, equals(40));
      final rotationKey_0_7_0 = channel_0_7.rotationKeys.elementAt(0);
      expect(rotationKey_0_7_0.time, isZero);
      expect(rotationKey_0_7_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.0115261, -0.0115261)));
      final rotationKey_0_7_1 = channel_0_7.rotationKeys.elementAt(1);
      expect(rotationKey_0_7_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_7_1.value, quaternionMoreOrLessEquals(Quaternion(0.00836553, 0.0166429, -0.0109879, -0.0109879)));
      final rotationKey_0_7_2 = channel_0_7.rotationKeys.elementAt(2);
      expect(rotationKey_0_7_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_7_2.value, quaternionMoreOrLessEquals(Quaternion(0.0344843, 0.0685606, -0.00902393, -0.00902393)));
      final rotationKey_0_7_3 = channel_0_7.rotationKeys.elementAt(3);
      expect(rotationKey_0_7_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_7_3.value, quaternionMoreOrLessEquals(Quaternion(0.079598, 0.158144, -0.00491076, -0.00491076)));
      final rotationKey_0_7_4 = channel_0_7.rotationKeys.elementAt(4);
      expect(rotationKey_0_7_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_7_4.value, quaternionMoreOrLessEquals(Quaternion(0.141786, 0.281507, 0.00215266, 0.00215266)));
      final rotationKey_0_7_5 = channel_0_7.rotationKeys.elementAt(5);
      expect(rotationKey_0_7_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_7_5.value, quaternionMoreOrLessEquals(Quaternion(0.212131, 0.42092, 0.0124645, 0.0124645)));
      final rotationKey_0_7_6 = channel_0_7.rotationKeys.elementAt(6);
      expect(rotationKey_0_7_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_7_6.value, quaternionMoreOrLessEquals(Quaternion(0.276372, 0.548144, 0.0253194, 0.0253194)));
      final rotationKey_0_7_7 = channel_0_7.rotationKeys.elementAt(7);
      expect(rotationKey_0_7_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_7_7.value, quaternionMoreOrLessEquals(Quaternion(0.324096, 0.642614, 0.0395457, 0.0395457)));
      final rotationKey_0_7_8 = channel_0_7.rotationKeys.elementAt(8);
      expect(rotationKey_0_7_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_7_8.value, quaternionMoreOrLessEquals(Quaternion(0.353825, 0.701463, 0.054535, 0.054535)));
      final rotationKey_0_7_9 = channel_0_7.rotationKeys.elementAt(9);
      expect(rotationKey_0_7_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_7_9.value, quaternionMoreOrLessEquals(Quaternion(0.369038, 0.731591, 0.0704644, 0.0704644)));
      final rotationKey_0_7_10 = channel_0_7.rotationKeys.elementAt(10);
      expect(rotationKey_0_7_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_7_10.value, quaternionMoreOrLessEquals(Quaternion(0.373205, 0.739851, 0.0879224, 0.0879224)));
      final rotationKey_0_7_11 = channel_0_7.rotationKeys.elementAt(11);
      expect(rotationKey_0_7_11.time, moreOrLessEquals(11));
      expect(rotationKey_0_7_11.value, quaternionMoreOrLessEquals(Quaternion(0.372935, 0.734446, 0.110037, 0.110037)));
      final rotationKey_0_7_12 = channel_0_7.rotationKeys.elementAt(12);
      expect(rotationKey_0_7_12.time, moreOrLessEquals(12));
      expect(rotationKey_0_7_12.value, quaternionMoreOrLessEquals(Quaternion(0.37299, 0.720207, 0.139352, 0.139352)));
      final rotationKey_0_7_13 = channel_0_7.rotationKeys.elementAt(13);
      expect(rotationKey_0_7_13.time, moreOrLessEquals(13));
      expect(rotationKey_0_7_13.value, quaternionMoreOrLessEquals(Quaternion(0.372377, 0.696358, 0.174995, 0.174995)));
      final rotationKey_0_7_14 = channel_0_7.rotationKeys.elementAt(14);
      expect(rotationKey_0_7_14.time, moreOrLessEquals(14));
      expect(rotationKey_0_7_14.value, quaternionMoreOrLessEquals(Quaternion(0.369761, 0.66292, 0.214853, 0.214853)));
      final rotationKey_0_7_15 = channel_0_7.rotationKeys.elementAt(15);
      expect(rotationKey_0_7_15.time, moreOrLessEquals(15));
      expect(rotationKey_0_7_15.value, quaternionMoreOrLessEquals(Quaternion(0.363794, 0.621512, 0.255514, 0.255514)));
      final rotationKey_0_7_16 = channel_0_7.rotationKeys.elementAt(16);
      expect(rotationKey_0_7_16.time, moreOrLessEquals(16));
      expect(rotationKey_0_7_16.value, quaternionMoreOrLessEquals(Quaternion(0.353624, 0.575647, 0.292943, 0.292943)));
      final rotationKey_0_7_17 = channel_0_7.rotationKeys.elementAt(17);
      expect(rotationKey_0_7_17.time, moreOrLessEquals(17));
      expect(rotationKey_0_7_17.value, quaternionMoreOrLessEquals(Quaternion(0.339221, 0.529955, 0.323696, 0.323696)));
      final rotationKey_0_7_18 = channel_0_7.rotationKeys.elementAt(18);
      expect(rotationKey_0_7_18.time, moreOrLessEquals(18));
      expect(rotationKey_0_7_18.value, quaternionMoreOrLessEquals(Quaternion(0.321239, 0.488743, 0.345803, 0.345803)));
      final rotationKey_0_7_19 = channel_0_7.rotationKeys.elementAt(19);
      expect(rotationKey_0_7_19.time, moreOrLessEquals(19));
      expect(rotationKey_0_7_19.value, quaternionMoreOrLessEquals(Quaternion(0.300574, 0.45495, 0.358792, 0.358792)));
      final rotationKey_0_7_20 = channel_0_7.rotationKeys.elementAt(20);
      expect(rotationKey_0_7_20.time, moreOrLessEquals(20));
      expect(rotationKey_0_7_20.value, quaternionMoreOrLessEquals(Quaternion(0.277987, 0.429984, 0.363121, 0.363121)));
      final rotationKey_0_7_21 = channel_0_7.rotationKeys.elementAt(21);
      expect(rotationKey_0_7_21.time, moreOrLessEquals(21));
      expect(rotationKey_0_7_21.value, quaternionMoreOrLessEquals(Quaternion(0.249197, 0.410817, 0.361142, 0.361142)));
      final rotationKey_0_7_22 = channel_0_7.rotationKeys.elementAt(22);
      expect(rotationKey_0_7_22.time, moreOrLessEquals(22));
      expect(rotationKey_0_7_22.value, quaternionMoreOrLessEquals(Quaternion(0.20945, 0.39401, 0.354137, 0.354137)));
      final rotationKey_0_7_23 = channel_0_7.rotationKeys.elementAt(23);
      expect(rotationKey_0_7_23.time, moreOrLessEquals(23));
      expect(rotationKey_0_7_23.value, quaternionMoreOrLessEquals(Quaternion(0.159491, 0.379341, 0.341343, 0.341343)));
      final rotationKey_0_7_24 = channel_0_7.rotationKeys.elementAt(24);
      expect(rotationKey_0_7_24.time, moreOrLessEquals(24));
      expect(rotationKey_0_7_24.value, quaternionMoreOrLessEquals(Quaternion(0.101896, 0.36651, 0.322458, 0.322458)));
      final rotationKey_0_7_25 = channel_0_7.rotationKeys.elementAt(25);
      expect(rotationKey_0_7_25.time, moreOrLessEquals(25));
      expect(rotationKey_0_7_25.value, quaternionMoreOrLessEquals(Quaternion(0.0414127, 0.35524, 0.298147, 0.298147)));
      final rotationKey_0_7_26 = channel_0_7.rotationKeys.elementAt(26);
      expect(rotationKey_0_7_26.time, moreOrLessEquals(26));
      expect(rotationKey_0_7_26.value, quaternionMoreOrLessEquals(Quaternion(-0.0158292, 0.345409, 0.270216, 0.270216)));
      final rotationKey_0_7_27 = channel_0_7.rotationKeys.elementAt(27);
      expect(rotationKey_0_7_27.time, moreOrLessEquals(27));
      expect(rotationKey_0_7_27.value, quaternionMoreOrLessEquals(Quaternion(-0.0640871, 0.337059, 0.241157, 0.241157)));
      final rotationKey_0_7_28 = channel_0_7.rotationKeys.elementAt(28);
      expect(rotationKey_0_7_28.time, moreOrLessEquals(28));
      expect(rotationKey_0_7_28.value, quaternionMoreOrLessEquals(Quaternion(-0.0995524, 0.330279, 0.213313, 0.213313)));
      final rotationKey_0_7_29 = channel_0_7.rotationKeys.elementAt(29);
      expect(rotationKey_0_7_29.time, moreOrLessEquals(29));
      expect(rotationKey_0_7_29.value, quaternionMoreOrLessEquals(Quaternion(-0.120685, 0.325061, 0.188285, 0.188285)));
      final rotationKey_0_7_30 = channel_0_7.rotationKeys.elementAt(30);
      expect(rotationKey_0_7_30.time, moreOrLessEquals(30));
      expect(rotationKey_0_7_30.value, quaternionMoreOrLessEquals(Quaternion(-0.127574, 0.321249, 0.166849, 0.166849)));
      final rotationKey_0_7_31 = channel_0_7.rotationKeys.elementAt(31);
      expect(rotationKey_0_7_31.time, moreOrLessEquals(31));
      expect(rotationKey_0_7_31.value, quaternionMoreOrLessEquals(Quaternion(-0.127636, 0.318326, 0.145612, 0.145612)));
      final rotationKey_0_7_32 = channel_0_7.rotationKeys.elementAt(32);
      expect(rotationKey_0_7_32.time, moreOrLessEquals(32));
      expect(rotationKey_0_7_32.value, quaternionMoreOrLessEquals(Quaternion(-0.127747, 0.315955, 0.12129, 0.12129)));
      final rotationKey_0_7_33 = channel_0_7.rotationKeys.elementAt(33);
      expect(rotationKey_0_7_33.time, moreOrLessEquals(33));
      expect(rotationKey_0_7_33.value, quaternionMoreOrLessEquals(Quaternion(-0.127875, 0.314133, 0.0948064, 0.0948064)));
      final rotationKey_0_7_34 = channel_0_7.rotationKeys.elementAt(34);
      expect(rotationKey_0_7_34.time, moreOrLessEquals(34));
      expect(rotationKey_0_7_34.value, quaternionMoreOrLessEquals(Quaternion(-0.127987, 0.312825, 0.0678386, 0.0678386)));
      final rotationKey_0_7_35 = channel_0_7.rotationKeys.elementAt(35);
      expect(rotationKey_0_7_35.time, moreOrLessEquals(35));
      expect(rotationKey_0_7_35.value, quaternionMoreOrLessEquals(Quaternion(-0.128064, 0.311964, 0.0426545, 0.0426545)));
      final rotationKey_0_7_36 = channel_0_7.rotationKeys.elementAt(36);
      expect(rotationKey_0_7_36.time, moreOrLessEquals(36));
      expect(rotationKey_0_7_36.value, quaternionMoreOrLessEquals(Quaternion(-0.128102, 0.311461, 0.0215274, 0.0215274)));
      final rotationKey_0_7_37 = channel_0_7.rotationKeys.elementAt(37);
      expect(rotationKey_0_7_37.time, moreOrLessEquals(37));
      expect(rotationKey_0_7_37.value, quaternionMoreOrLessEquals(Quaternion(-0.128114, 0.311216, 0.00606547, 0.00606547)));
      final rotationKey_0_7_38 = channel_0_7.rotationKeys.elementAt(38);
      expect(rotationKey_0_7_38.time, moreOrLessEquals(38));
      expect(rotationKey_0_7_38.value, quaternionMoreOrLessEquals(Quaternion(-0.128117, 0.311135, -0.00307332, -0.00307332)));
      final rotationKey_0_7_39 = channel_0_7.rotationKeys.elementAt(39);
      expect(rotationKey_0_7_39.time, moreOrLessEquals(39));
      expect(rotationKey_0_7_39.value, quaternionMoreOrLessEquals(Quaternion(-0.128118, 0.311126, -0.00600965, -0.00600965)));
      expect(channel_0_7.scalingKeys.length, equals(40));
      final scalingKey_0_7_0 = channel_0_7.scalingKeys.elementAt(0);
      expect(scalingKey_0_7_0.time, isZero);
      expect(scalingKey_0_7_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_1 = channel_0_7.scalingKeys.elementAt(1);
      expect(scalingKey_0_7_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_7_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_2 = channel_0_7.scalingKeys.elementAt(2);
      expect(scalingKey_0_7_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_7_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_3 = channel_0_7.scalingKeys.elementAt(3);
      expect(scalingKey_0_7_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_7_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_4 = channel_0_7.scalingKeys.elementAt(4);
      expect(scalingKey_0_7_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_7_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_5 = channel_0_7.scalingKeys.elementAt(5);
      expect(scalingKey_0_7_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_7_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_6 = channel_0_7.scalingKeys.elementAt(6);
      expect(scalingKey_0_7_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_7_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_7 = channel_0_7.scalingKeys.elementAt(7);
      expect(scalingKey_0_7_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_7_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_8 = channel_0_7.scalingKeys.elementAt(8);
      expect(scalingKey_0_7_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_7_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_9 = channel_0_7.scalingKeys.elementAt(9);
      expect(scalingKey_0_7_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_7_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_10 = channel_0_7.scalingKeys.elementAt(10);
      expect(scalingKey_0_7_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_7_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_11 = channel_0_7.scalingKeys.elementAt(11);
      expect(scalingKey_0_7_11.time, moreOrLessEquals(11));
      expect(scalingKey_0_7_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_12 = channel_0_7.scalingKeys.elementAt(12);
      expect(scalingKey_0_7_12.time, moreOrLessEquals(12));
      expect(scalingKey_0_7_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_13 = channel_0_7.scalingKeys.elementAt(13);
      expect(scalingKey_0_7_13.time, moreOrLessEquals(13));
      expect(scalingKey_0_7_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_14 = channel_0_7.scalingKeys.elementAt(14);
      expect(scalingKey_0_7_14.time, moreOrLessEquals(14));
      expect(scalingKey_0_7_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_15 = channel_0_7.scalingKeys.elementAt(15);
      expect(scalingKey_0_7_15.time, moreOrLessEquals(15));
      expect(scalingKey_0_7_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_16 = channel_0_7.scalingKeys.elementAt(16);
      expect(scalingKey_0_7_16.time, moreOrLessEquals(16));
      expect(scalingKey_0_7_16.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_17 = channel_0_7.scalingKeys.elementAt(17);
      expect(scalingKey_0_7_17.time, moreOrLessEquals(17));
      expect(scalingKey_0_7_17.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_18 = channel_0_7.scalingKeys.elementAt(18);
      expect(scalingKey_0_7_18.time, moreOrLessEquals(18));
      expect(scalingKey_0_7_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_19 = channel_0_7.scalingKeys.elementAt(19);
      expect(scalingKey_0_7_19.time, moreOrLessEquals(19));
      expect(scalingKey_0_7_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_20 = channel_0_7.scalingKeys.elementAt(20);
      expect(scalingKey_0_7_20.time, moreOrLessEquals(20));
      expect(scalingKey_0_7_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_21 = channel_0_7.scalingKeys.elementAt(21);
      expect(scalingKey_0_7_21.time, moreOrLessEquals(21));
      expect(scalingKey_0_7_21.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_22 = channel_0_7.scalingKeys.elementAt(22);
      expect(scalingKey_0_7_22.time, moreOrLessEquals(22));
      expect(scalingKey_0_7_22.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_23 = channel_0_7.scalingKeys.elementAt(23);
      expect(scalingKey_0_7_23.time, moreOrLessEquals(23));
      expect(scalingKey_0_7_23.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_24 = channel_0_7.scalingKeys.elementAt(24);
      expect(scalingKey_0_7_24.time, moreOrLessEquals(24));
      expect(scalingKey_0_7_24.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_25 = channel_0_7.scalingKeys.elementAt(25);
      expect(scalingKey_0_7_25.time, moreOrLessEquals(25));
      expect(scalingKey_0_7_25.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_26 = channel_0_7.scalingKeys.elementAt(26);
      expect(scalingKey_0_7_26.time, moreOrLessEquals(26));
      expect(scalingKey_0_7_26.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_27 = channel_0_7.scalingKeys.elementAt(27);
      expect(scalingKey_0_7_27.time, moreOrLessEquals(27));
      expect(scalingKey_0_7_27.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_28 = channel_0_7.scalingKeys.elementAt(28);
      expect(scalingKey_0_7_28.time, moreOrLessEquals(28));
      expect(scalingKey_0_7_28.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_29 = channel_0_7.scalingKeys.elementAt(29);
      expect(scalingKey_0_7_29.time, moreOrLessEquals(29));
      expect(scalingKey_0_7_29.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_30 = channel_0_7.scalingKeys.elementAt(30);
      expect(scalingKey_0_7_30.time, moreOrLessEquals(30));
      expect(scalingKey_0_7_30.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_31 = channel_0_7.scalingKeys.elementAt(31);
      expect(scalingKey_0_7_31.time, moreOrLessEquals(31));
      expect(scalingKey_0_7_31.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_32 = channel_0_7.scalingKeys.elementAt(32);
      expect(scalingKey_0_7_32.time, moreOrLessEquals(32));
      expect(scalingKey_0_7_32.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_33 = channel_0_7.scalingKeys.elementAt(33);
      expect(scalingKey_0_7_33.time, moreOrLessEquals(33));
      expect(scalingKey_0_7_33.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_34 = channel_0_7.scalingKeys.elementAt(34);
      expect(scalingKey_0_7_34.time, moreOrLessEquals(34));
      expect(scalingKey_0_7_34.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_35 = channel_0_7.scalingKeys.elementAt(35);
      expect(scalingKey_0_7_35.time, moreOrLessEquals(35));
      expect(scalingKey_0_7_35.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_36 = channel_0_7.scalingKeys.elementAt(36);
      expect(scalingKey_0_7_36.time, moreOrLessEquals(36));
      expect(scalingKey_0_7_36.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_37 = channel_0_7.scalingKeys.elementAt(37);
      expect(scalingKey_0_7_37.time, moreOrLessEquals(37));
      expect(scalingKey_0_7_37.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_38 = channel_0_7.scalingKeys.elementAt(38);
      expect(scalingKey_0_7_38.time, moreOrLessEquals(38));
      expect(scalingKey_0_7_38.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_39 = channel_0_7.scalingKeys.elementAt(39);
      expect(scalingKey_0_7_39.time, moreOrLessEquals(39));
      expect(scalingKey_0_7_39.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_7.preState, equals(AnimBehavior.defaults));
      expect(channel_0_7.postState, equals(AnimBehavior.defaults));
      final  channel_0_8 = animation_0.channels.elementAt(8);
      expect(channel_0_8.positionKeys.length, equals(40));
      final positionKey_0_8_0 = channel_0_8.positionKeys.elementAt(0);
      expect(positionKey_0_8_0.time, isZero);
      expect(positionKey_0_8_0.value, vector3MoreOrLessEquals(Vector3(0, 1.24803, -1.42109e-14)));
      final positionKey_0_8_1 = channel_0_8.positionKeys.elementAt(1);
      expect(positionKey_0_8_1.time, moreOrLessEquals(1));
      expect(positionKey_0_8_1.value, vector3MoreOrLessEquals(Vector3(-9.55203e-10, 1.24803, -3.71838e-09)));
      final positionKey_0_8_2 = channel_0_8.positionKeys.elementAt(2);
      expect(positionKey_0_8_2.time, moreOrLessEquals(2));
      expect(positionKey_0_8_2.value, vector3MoreOrLessEquals(Vector3(-1.91041e-09, 1.24803, -7.43674e-09)));
      final positionKey_0_8_3 = channel_0_8.positionKeys.elementAt(3);
      expect(positionKey_0_8_3.time, moreOrLessEquals(3));
      expect(positionKey_0_8_3.value, vector3MoreOrLessEquals(Vector3(-2.86561e-09, 1.24803, -1.11551e-08)));
      final positionKey_0_8_4 = channel_0_8.positionKeys.elementAt(4);
      expect(positionKey_0_8_4.time, moreOrLessEquals(4));
      expect(positionKey_0_8_4.value, vector3MoreOrLessEquals(Vector3(-3.82081e-09, 1.24803, -1.48735e-08)));
      final positionKey_0_8_5 = channel_0_8.positionKeys.elementAt(5);
      expect(positionKey_0_8_5.time, moreOrLessEquals(5));
      expect(positionKey_0_8_5.value, vector3MoreOrLessEquals(Vector3(-4.77601e-09, 1.24803, -1.85918e-08)));
      final positionKey_0_8_6 = channel_0_8.positionKeys.elementAt(6);
      expect(positionKey_0_8_6.time, moreOrLessEquals(6));
      expect(positionKey_0_8_6.value, vector3MoreOrLessEquals(Vector3(-5.73122e-09, 1.24803, -2.23102e-08)));
      final positionKey_0_8_7 = channel_0_8.positionKeys.elementAt(7);
      expect(positionKey_0_8_7.time, moreOrLessEquals(7));
      expect(positionKey_0_8_7.value, vector3MoreOrLessEquals(Vector3(-6.68642e-09, 1.24803, -2.60286e-08)));
      final positionKey_0_8_8 = channel_0_8.positionKeys.elementAt(8);
      expect(positionKey_0_8_8.time, moreOrLessEquals(8));
      expect(positionKey_0_8_8.value, vector3MoreOrLessEquals(Vector3(-7.64162e-09, 1.24803, -2.97469e-08)));
      final positionKey_0_8_9 = channel_0_8.positionKeys.elementAt(9);
      expect(positionKey_0_8_9.time, moreOrLessEquals(9));
      expect(positionKey_0_8_9.value, vector3MoreOrLessEquals(Vector3(-8.59682e-09, 1.24803, -3.34653e-08)));
      final positionKey_0_8_10 = channel_0_8.positionKeys.elementAt(10);
      expect(positionKey_0_8_10.time, moreOrLessEquals(10));
      expect(positionKey_0_8_10.value, vector3MoreOrLessEquals(Vector3(-9.55203e-09, 1.24803, -3.71837e-08)));
      final positionKey_0_8_11 = channel_0_8.positionKeys.elementAt(11);
      expect(positionKey_0_8_11.time, moreOrLessEquals(11));
      expect(positionKey_0_8_11.value, vector3MoreOrLessEquals(Vector3(-1.05072e-08, 1.24803, -4.0902e-08)));
      final positionKey_0_8_12 = channel_0_8.positionKeys.elementAt(12);
      expect(positionKey_0_8_12.time, moreOrLessEquals(12));
      expect(positionKey_0_8_12.value, vector3MoreOrLessEquals(Vector3(-1.14624e-08, 1.24803, -4.46204e-08)));
      final positionKey_0_8_13 = channel_0_8.positionKeys.elementAt(13);
      expect(positionKey_0_8_13.time, moreOrLessEquals(13));
      expect(positionKey_0_8_13.value, vector3MoreOrLessEquals(Vector3(-1.24176e-08, 1.24803, -4.83388e-08)));
      final positionKey_0_8_14 = channel_0_8.positionKeys.elementAt(14);
      expect(positionKey_0_8_14.time, moreOrLessEquals(14));
      expect(positionKey_0_8_14.value, vector3MoreOrLessEquals(Vector3(-1.33728e-08, 1.24803, -5.20571e-08)));
      final positionKey_0_8_15 = channel_0_8.positionKeys.elementAt(15);
      expect(positionKey_0_8_15.time, moreOrLessEquals(15));
      expect(positionKey_0_8_15.value, vector3MoreOrLessEquals(Vector3(-1.4328e-08, 1.24803, -5.57755e-08)));
      final positionKey_0_8_16 = channel_0_8.positionKeys.elementAt(16);
      expect(positionKey_0_8_16.time, moreOrLessEquals(16));
      expect(positionKey_0_8_16.value, vector3MoreOrLessEquals(Vector3(-1.52832e-08, 1.24803, -5.94939e-08)));
      final positionKey_0_8_17 = channel_0_8.positionKeys.elementAt(17);
      expect(positionKey_0_8_17.time, moreOrLessEquals(17));
      expect(positionKey_0_8_17.value, vector3MoreOrLessEquals(Vector3(-1.62384e-08, 1.24803, -6.32122e-08)));
      final positionKey_0_8_18 = channel_0_8.positionKeys.elementAt(18);
      expect(positionKey_0_8_18.time, moreOrLessEquals(18));
      expect(positionKey_0_8_18.value, vector3MoreOrLessEquals(Vector3(-1.71936e-08, 1.24803, -6.69306e-08)));
      final positionKey_0_8_19 = channel_0_8.positionKeys.elementAt(19);
      expect(positionKey_0_8_19.time, moreOrLessEquals(19));
      expect(positionKey_0_8_19.value, vector3MoreOrLessEquals(Vector3(-1.81488e-08, 1.24803, -7.0649e-08)));
      final positionKey_0_8_20 = channel_0_8.positionKeys.elementAt(20);
      expect(positionKey_0_8_20.time, moreOrLessEquals(20));
      expect(positionKey_0_8_20.value, vector3MoreOrLessEquals(Vector3(-1.91041e-08, 1.24803, -7.43673e-08)));
      final positionKey_0_8_21 = channel_0_8.positionKeys.elementAt(21);
      expect(positionKey_0_8_21.time, moreOrLessEquals(21));
      expect(positionKey_0_8_21.value, vector3MoreOrLessEquals(Vector3(-2.00593e-08, 1.24803, -7.80857e-08)));
      final positionKey_0_8_22 = channel_0_8.positionKeys.elementAt(22);
      expect(positionKey_0_8_22.time, moreOrLessEquals(22));
      expect(positionKey_0_8_22.value, vector3MoreOrLessEquals(Vector3(-2.10145e-08, 1.24803, -8.1804e-08)));
      final positionKey_0_8_23 = channel_0_8.positionKeys.elementAt(23);
      expect(positionKey_0_8_23.time, moreOrLessEquals(23));
      expect(positionKey_0_8_23.value, vector3MoreOrLessEquals(Vector3(-2.19697e-08, 1.24803, -8.55224e-08)));
      final positionKey_0_8_24 = channel_0_8.positionKeys.elementAt(24);
      expect(positionKey_0_8_24.time, moreOrLessEquals(24));
      expect(positionKey_0_8_24.value, vector3MoreOrLessEquals(Vector3(-2.29249e-08, 1.24803, -8.92408e-08)));
      final positionKey_0_8_25 = channel_0_8.positionKeys.elementAt(25);
      expect(positionKey_0_8_25.time, moreOrLessEquals(25));
      expect(positionKey_0_8_25.value, vector3MoreOrLessEquals(Vector3(-2.38801e-08, 1.24803, -9.29591e-08)));
      final positionKey_0_8_26 = channel_0_8.positionKeys.elementAt(26);
      expect(positionKey_0_8_26.time, moreOrLessEquals(26));
      expect(positionKey_0_8_26.value, vector3MoreOrLessEquals(Vector3(-2.48353e-08, 1.24803, -9.66775e-08)));
      final positionKey_0_8_27 = channel_0_8.positionKeys.elementAt(27);
      expect(positionKey_0_8_27.time, moreOrLessEquals(27));
      expect(positionKey_0_8_27.value, vector3MoreOrLessEquals(Vector3(-2.57905e-08, 1.24803, -1.00396e-07)));
      final positionKey_0_8_28 = channel_0_8.positionKeys.elementAt(28);
      expect(positionKey_0_8_28.time, moreOrLessEquals(28));
      expect(positionKey_0_8_28.value, vector3MoreOrLessEquals(Vector3(-2.67457e-08, 1.24803, -1.04114e-07)));
      final positionKey_0_8_29 = channel_0_8.positionKeys.elementAt(29);
      expect(positionKey_0_8_29.time, moreOrLessEquals(29));
      expect(positionKey_0_8_29.value, vector3MoreOrLessEquals(Vector3(-2.77009e-08, 1.24803, -1.07833e-07)));
      final positionKey_0_8_30 = channel_0_8.positionKeys.elementAt(30);
      expect(positionKey_0_8_30.time, moreOrLessEquals(30));
      expect(positionKey_0_8_30.value, vector3MoreOrLessEquals(Vector3(-2.86561e-08, 1.24803, -1.11551e-07)));
      final positionKey_0_8_31 = channel_0_8.positionKeys.elementAt(31);
      expect(positionKey_0_8_31.time, moreOrLessEquals(31));
      expect(positionKey_0_8_31.value, vector3MoreOrLessEquals(Vector3(-2.96113e-08, 1.24803, -1.15269e-07)));
      final positionKey_0_8_32 = channel_0_8.positionKeys.elementAt(32);
      expect(positionKey_0_8_32.time, moreOrLessEquals(32));
      expect(positionKey_0_8_32.value, vector3MoreOrLessEquals(Vector3(-3.05665e-08, 1.24803, -1.18988e-07)));
      final positionKey_0_8_33 = channel_0_8.positionKeys.elementAt(33);
      expect(positionKey_0_8_33.time, moreOrLessEquals(33));
      expect(positionKey_0_8_33.value, vector3MoreOrLessEquals(Vector3(-3.15217e-08, 1.24803, -1.22706e-07)));
      final positionKey_0_8_34 = channel_0_8.positionKeys.elementAt(34);
      expect(positionKey_0_8_34.time, moreOrLessEquals(34));
      expect(positionKey_0_8_34.value, vector3MoreOrLessEquals(Vector3(-3.24769e-08, 1.24803, -1.26424e-07)));
      final positionKey_0_8_35 = channel_0_8.positionKeys.elementAt(35);
      expect(positionKey_0_8_35.time, moreOrLessEquals(35));
      expect(positionKey_0_8_35.value, vector3MoreOrLessEquals(Vector3(-3.34321e-08, 1.24803, -1.30143e-07)));
      final positionKey_0_8_36 = channel_0_8.positionKeys.elementAt(36);
      expect(positionKey_0_8_36.time, moreOrLessEquals(36));
      expect(positionKey_0_8_36.value, vector3MoreOrLessEquals(Vector3(-3.43873e-08, 1.24803, -1.33861e-07)));
      final positionKey_0_8_37 = channel_0_8.positionKeys.elementAt(37);
      expect(positionKey_0_8_37.time, moreOrLessEquals(37));
      expect(positionKey_0_8_37.value, vector3MoreOrLessEquals(Vector3(-3.53425e-08, 1.24803, -1.3758e-07)));
      final positionKey_0_8_38 = channel_0_8.positionKeys.elementAt(38);
      expect(positionKey_0_8_38.time, moreOrLessEquals(38));
      expect(positionKey_0_8_38.value, vector3MoreOrLessEquals(Vector3(-3.62977e-08, 1.24803, -1.41298e-07)));
      final positionKey_0_8_39 = channel_0_8.positionKeys.elementAt(39);
      expect(positionKey_0_8_39.time, moreOrLessEquals(39));
      expect(positionKey_0_8_39.value, vector3MoreOrLessEquals(Vector3(-3.72529e-08, 1.24803, -1.45016e-07)));
      expect(channel_0_8.rotationKeys.length, equals(40));
      final rotationKey_0_8_0 = channel_0_8.rotationKeys.elementAt(0);
      expect(rotationKey_0_8_0.time, isZero);
      expect(rotationKey_0_8_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_8_1 = channel_0_8.rotationKeys.elementAt(1);
      expect(rotationKey_0_8_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_8_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.00643022, 0.00643022)));
      final rotationKey_0_8_2 = channel_0_8.rotationKeys.elementAt(2);
      expect(rotationKey_0_8_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_8_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0258015, 0.0258015)));
      final rotationKey_0_8_3 = channel_0_8.rotationKeys.elementAt(3);
      expect(rotationKey_0_8_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_8_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0573318, 0.0573318)));
      final rotationKey_0_8_4 = channel_0_8.rotationKeys.elementAt(4);
      expect(rotationKey_0_8_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_8_4.value, quaternionMoreOrLessEquals(Quaternion(-1.35951e-10, 1.37297e-09, 0.0985378, 0.0985378)));
      final rotationKey_0_8_5 = channel_0_8.rotationKeys.elementAt(5);
      expect(rotationKey_0_8_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_8_5.value, quaternionMoreOrLessEquals(Quaternion(-2.50081e-10, 1.70637e-09, 0.145008, 0.145008)));
      final rotationKey_0_8_6 = channel_0_8.rotationKeys.elementAt(6);
      expect(rotationKey_0_8_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_8_6.value, quaternionMoreOrLessEquals(Quaternion(-3.9551e-10, 2.03138e-09, 0.191112, 0.191112)));
      final rotationKey_0_8_7 = channel_0_8.rotationKeys.elementAt(7);
      expect(rotationKey_0_8_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_8_7.value, quaternionMoreOrLessEquals(Quaternion(-5.58947e-10, 2.34885e-09, 0.231502, 0.231502)));
      final rotationKey_0_8_8 = channel_0_8.rotationKeys.elementAt(8);
      expect(rotationKey_0_8_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_8_8.value, quaternionMoreOrLessEquals(Quaternion(-7.24102e-10, 2.66266e-09, 0.262417, 0.262417)));
      final rotationKey_0_8_9 = channel_0_8.rotationKeys.elementAt(9);
      expect(rotationKey_0_8_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_8_9.value, quaternionMoreOrLessEquals(Quaternion(-8.75384e-10, 2.9783e-09, 0.281992, 0.281992)));
      final rotationKey_0_8_10 = channel_0_8.rotationKeys.elementAt(10);
      expect(rotationKey_0_8_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_8_10.value, quaternionMoreOrLessEquals(Quaternion(-9.99424e-10, 3.30124e-09, 0.289755, 0.289755)));
      final rotationKey_0_8_11 = channel_0_8.rotationKeys.elementAt(11);
      expect(rotationKey_0_8_11.time, moreOrLessEquals(11));
      expect(rotationKey_0_8_11.value, quaternionMoreOrLessEquals(Quaternion(-1.04569e-09, 3.64718e-09, 0.275607, 0.275607)));
      final rotationKey_0_8_12 = channel_0_8.rotationKeys.elementAt(12);
      expect(rotationKey_0_8_12.time, moreOrLessEquals(12));
      expect(rotationKey_0_8_12.value, quaternionMoreOrLessEquals(Quaternion(-9.40406e-10, 4.0308e-09, 0.227204, 0.227204)));
      final rotationKey_0_8_13 = channel_0_8.rotationKeys.elementAt(13);
      expect(rotationKey_0_8_13.time, moreOrLessEquals(13));
      expect(rotationKey_0_8_13.value, quaternionMoreOrLessEquals(Quaternion(-6.35902e-10, 4.43864e-09, 0.141817, 0.141817)));
      final rotationKey_0_8_14 = channel_0_8.rotationKeys.elementAt(14);
      expect(rotationKey_0_8_14.time, moreOrLessEquals(14));
      expect(rotationKey_0_8_14.value, quaternionMoreOrLessEquals(Quaternion(-1.05494e-10, 4.82773e-09, 0.0218464, 0.0218464)));
      final rotationKey_0_8_15 = channel_0_8.rotationKeys.elementAt(15);
      expect(rotationKey_0_8_15.time, moreOrLessEquals(15));
      expect(rotationKey_0_8_15.value, quaternionMoreOrLessEquals(Quaternion(6.15493e-10, 5.13706e-09, -0.118963, -0.118963)));
      final rotationKey_0_8_16 = channel_0_8.rotationKeys.elementAt(16);
      expect(rotationKey_0_8_16.time, moreOrLessEquals(16));
      expect(rotationKey_0_8_16.value, quaternionMoreOrLessEquals(Quaternion(1.41624e-09, 5.33391e-09, -0.256625, -0.256625)));
      final rotationKey_0_8_17 = channel_0_8.rotationKeys.elementAt(17);
      expect(rotationKey_0_8_17.time, moreOrLessEquals(17));
      expect(rotationKey_0_8_17.value, quaternionMoreOrLessEquals(Quaternion(2.16533e-09, 5.44919e-09, -0.369281, -0.369281)));
      final rotationKey_0_8_18 = channel_0_8.rotationKeys.elementAt(18);
      expect(rotationKey_0_8_18.time, moreOrLessEquals(18));
      expect(rotationKey_0_8_18.value, quaternionMoreOrLessEquals(Quaternion(2.77734e-09, 5.55272e-09, -0.44734, -0.44734)));
      final rotationKey_0_8_19 = channel_0_8.rotationKeys.elementAt(19);
      expect(rotationKey_0_8_19.time, moreOrLessEquals(19));
      expect(rotationKey_0_8_19.value, quaternionMoreOrLessEquals(Quaternion(3.2205e-09, 5.70759e-09, -0.491418, -0.491418)));
      final rotationKey_0_8_20 = channel_0_8.rotationKeys.elementAt(20);
      expect(rotationKey_0_8_20.time, moreOrLessEquals(20));
      expect(rotationKey_0_8_20.value, quaternionMoreOrLessEquals(Quaternion(3.4863e-09, 5.95262e-09, -0.505377, -0.505377)));
      final rotationKey_0_8_21 = channel_0_8.rotationKeys.elementAt(21);
      expect(rotationKey_0_8_21.time, moreOrLessEquals(21));
      expect(rotationKey_0_8_21.value, quaternionMoreOrLessEquals(Quaternion(3.60811e-09, 6.28071e-09, -0.498128, -0.498128)));
      final rotationKey_0_8_22 = channel_0_8.rotationKeys.elementAt(22);
      expect(rotationKey_0_8_22.time, moreOrLessEquals(22));
      expect(rotationKey_0_8_22.value, quaternionMoreOrLessEquals(Quaternion(2.67915e-09, 7.1783e-09, -0.475958, -0.475958)));
      final rotationKey_0_8_23 = channel_0_8.rotationKeys.elementAt(23);
      expect(rotationKey_0_8_23.time, moreOrLessEquals(23));
      expect(rotationKey_0_8_23.value, quaternionMoreOrLessEquals(Quaternion(2.48539e-09, 7.61491e-09, -0.438851, -0.438851)));
      final rotationKey_0_8_24 = channel_0_8.rotationKeys.elementAt(24);
      expect(rotationKey_0_8_24.time, moreOrLessEquals(24));
      expect(rotationKey_0_8_24.value, quaternionMoreOrLessEquals(Quaternion(2.15078e-09, 8.07706e-09, -0.388569, -0.388569)));
      final rotationKey_0_8_25 = channel_0_8.rotationKeys.elementAt(25);
      expect(rotationKey_0_8_25.time, moreOrLessEquals(25));
      expect(rotationKey_0_8_25.value, quaternionMoreOrLessEquals(Quaternion(1.70523e-09, 8.53817e-09, -0.329675, -0.329675)));
      final rotationKey_0_8_26 = channel_0_8.rotationKeys.elementAt(26);
      expect(rotationKey_0_8_26.time, moreOrLessEquals(26));
      expect(rotationKey_0_8_26.value, quaternionMoreOrLessEquals(Quaternion(1.20845e-09, 8.97406e-09, -0.269323, -0.269323)));
      final rotationKey_0_8_27 = channel_0_8.rotationKeys.elementAt(27);
      expect(rotationKey_0_8_27.time, moreOrLessEquals(27));
      expect(rotationKey_0_8_27.value, quaternionMoreOrLessEquals(Quaternion(7.34351e-10, 9.37461e-09, -0.21531, -0.21531)));
      final rotationKey_0_8_28 = channel_0_8.rotationKeys.elementAt(28);
      expect(rotationKey_0_8_28.time, moreOrLessEquals(28));
      expect(rotationKey_0_8_28.value, quaternionMoreOrLessEquals(Quaternion(3.48531e-10, 9.74537e-09, -0.173698, -0.173698)));
      final rotationKey_0_8_29 = channel_0_8.rotationKeys.elementAt(29);
      expect(rotationKey_0_8_29.time, moreOrLessEquals(29));
      expect(rotationKey_0_8_29.value, quaternionMoreOrLessEquals(Quaternion(9.55245e-11, 1.00994e-08, -0.14775, -0.14775)));
      final rotationKey_0_8_30 = channel_0_8.rotationKeys.elementAt(30);
      expect(rotationKey_0_8_30.time, moreOrLessEquals(30));
      expect(rotationKey_0_8_30.value, quaternionMoreOrLessEquals(Quaternion(4.03563e-15, 1.04481e-08, -0.13839, -0.13839)));
      final rotationKey_0_8_31 = channel_0_8.rotationKeys.elementAt(31);
      expect(rotationKey_0_8_31.time, moreOrLessEquals(31));
      expect(rotationKey_0_8_31.value, quaternionMoreOrLessEquals(Quaternion(0.00659941, -0.000447037, -0.13742, -0.13742)));
      final rotationKey_0_8_32 = channel_0_8.rotationKeys.elementAt(32);
      expect(rotationKey_0_8_32.time, moreOrLessEquals(32));
      expect(rotationKey_0_8_32.value, quaternionMoreOrLessEquals(Quaternion(0.0264551, -0.00179222, -0.136775, -0.136775)));
      final rotationKey_0_8_33 = channel_0_8.rotationKeys.elementAt(33);
      expect(rotationKey_0_8_33.time, moreOrLessEquals(33));
      expect(rotationKey_0_8_33.value, quaternionMoreOrLessEquals(Quaternion(0.0584609, -0.00396077, -0.136362, -0.136362)));
      final rotationKey_0_8_34 = channel_0_8.rotationKeys.elementAt(34);
      expect(rotationKey_0_8_34.time, moreOrLessEquals(34));
      expect(rotationKey_0_8_34.value, quaternionMoreOrLessEquals(Quaternion(0.09926, -0.00672523, -0.13603, -0.13603)));
      final rotationKey_0_8_35 = channel_0_8.rotationKeys.elementAt(35);
      expect(rotationKey_0_8_35.time, moreOrLessEquals(35));
      expect(rotationKey_0_8_35.value, quaternionMoreOrLessEquals(Quaternion(0.143163, -0.00969987, -0.135647, -0.135647)));
      final rotationKey_0_8_36 = channel_0_8.rotationKeys.elementAt(36);
      expect(rotationKey_0_8_36.time, moreOrLessEquals(36));
      expect(rotationKey_0_8_36.value, quaternionMoreOrLessEquals(Quaternion(0.183532, -0.0124347, -0.135186, -0.135186)));
      final rotationKey_0_8_37 = channel_0_8.rotationKeys.elementAt(37);
      expect(rotationKey_0_8_37.time, moreOrLessEquals(37));
      expect(rotationKey_0_8_37.value, quaternionMoreOrLessEquals(Quaternion(0.214914, -0.0145603, -0.134735, -0.134735)));
      final rotationKey_0_8_38 = channel_0_8.rotationKeys.elementAt(38);
      expect(rotationKey_0_8_38.time, moreOrLessEquals(38));
      expect(rotationKey_0_8_38.value, quaternionMoreOrLessEquals(Quaternion(0.234258, -0.0158702, -0.134415, -0.134415)));
      final rotationKey_0_8_39 = channel_0_8.rotationKeys.elementAt(39);
      expect(rotationKey_0_8_39.time, moreOrLessEquals(39));
      expect(rotationKey_0_8_39.value, quaternionMoreOrLessEquals(Quaternion(0.240666, -0.016304, -0.134303, -0.134303)));
      expect(channel_0_8.scalingKeys.length, equals(40));
      final scalingKey_0_8_0 = channel_0_8.scalingKeys.elementAt(0);
      expect(scalingKey_0_8_0.time, isZero);
      expect(scalingKey_0_8_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_1 = channel_0_8.scalingKeys.elementAt(1);
      expect(scalingKey_0_8_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_8_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_2 = channel_0_8.scalingKeys.elementAt(2);
      expect(scalingKey_0_8_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_8_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_3 = channel_0_8.scalingKeys.elementAt(3);
      expect(scalingKey_0_8_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_8_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_4 = channel_0_8.scalingKeys.elementAt(4);
      expect(scalingKey_0_8_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_8_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_5 = channel_0_8.scalingKeys.elementAt(5);
      expect(scalingKey_0_8_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_8_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_6 = channel_0_8.scalingKeys.elementAt(6);
      expect(scalingKey_0_8_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_8_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_7 = channel_0_8.scalingKeys.elementAt(7);
      expect(scalingKey_0_8_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_8_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_8 = channel_0_8.scalingKeys.elementAt(8);
      expect(scalingKey_0_8_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_8_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_9 = channel_0_8.scalingKeys.elementAt(9);
      expect(scalingKey_0_8_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_8_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_10 = channel_0_8.scalingKeys.elementAt(10);
      expect(scalingKey_0_8_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_8_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_11 = channel_0_8.scalingKeys.elementAt(11);
      expect(scalingKey_0_8_11.time, moreOrLessEquals(11));
      expect(scalingKey_0_8_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_12 = channel_0_8.scalingKeys.elementAt(12);
      expect(scalingKey_0_8_12.time, moreOrLessEquals(12));
      expect(scalingKey_0_8_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_13 = channel_0_8.scalingKeys.elementAt(13);
      expect(scalingKey_0_8_13.time, moreOrLessEquals(13));
      expect(scalingKey_0_8_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_14 = channel_0_8.scalingKeys.elementAt(14);
      expect(scalingKey_0_8_14.time, moreOrLessEquals(14));
      expect(scalingKey_0_8_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_15 = channel_0_8.scalingKeys.elementAt(15);
      expect(scalingKey_0_8_15.time, moreOrLessEquals(15));
      expect(scalingKey_0_8_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_16 = channel_0_8.scalingKeys.elementAt(16);
      expect(scalingKey_0_8_16.time, moreOrLessEquals(16));
      expect(scalingKey_0_8_16.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_17 = channel_0_8.scalingKeys.elementAt(17);
      expect(scalingKey_0_8_17.time, moreOrLessEquals(17));
      expect(scalingKey_0_8_17.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_18 = channel_0_8.scalingKeys.elementAt(18);
      expect(scalingKey_0_8_18.time, moreOrLessEquals(18));
      expect(scalingKey_0_8_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_19 = channel_0_8.scalingKeys.elementAt(19);
      expect(scalingKey_0_8_19.time, moreOrLessEquals(19));
      expect(scalingKey_0_8_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_20 = channel_0_8.scalingKeys.elementAt(20);
      expect(scalingKey_0_8_20.time, moreOrLessEquals(20));
      expect(scalingKey_0_8_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_21 = channel_0_8.scalingKeys.elementAt(21);
      expect(scalingKey_0_8_21.time, moreOrLessEquals(21));
      expect(scalingKey_0_8_21.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_22 = channel_0_8.scalingKeys.elementAt(22);
      expect(scalingKey_0_8_22.time, moreOrLessEquals(22));
      expect(scalingKey_0_8_22.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_23 = channel_0_8.scalingKeys.elementAt(23);
      expect(scalingKey_0_8_23.time, moreOrLessEquals(23));
      expect(scalingKey_0_8_23.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_24 = channel_0_8.scalingKeys.elementAt(24);
      expect(scalingKey_0_8_24.time, moreOrLessEquals(24));
      expect(scalingKey_0_8_24.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_25 = channel_0_8.scalingKeys.elementAt(25);
      expect(scalingKey_0_8_25.time, moreOrLessEquals(25));
      expect(scalingKey_0_8_25.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_26 = channel_0_8.scalingKeys.elementAt(26);
      expect(scalingKey_0_8_26.time, moreOrLessEquals(26));
      expect(scalingKey_0_8_26.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_27 = channel_0_8.scalingKeys.elementAt(27);
      expect(scalingKey_0_8_27.time, moreOrLessEquals(27));
      expect(scalingKey_0_8_27.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_28 = channel_0_8.scalingKeys.elementAt(28);
      expect(scalingKey_0_8_28.time, moreOrLessEquals(28));
      expect(scalingKey_0_8_28.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_29 = channel_0_8.scalingKeys.elementAt(29);
      expect(scalingKey_0_8_29.time, moreOrLessEquals(29));
      expect(scalingKey_0_8_29.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_30 = channel_0_8.scalingKeys.elementAt(30);
      expect(scalingKey_0_8_30.time, moreOrLessEquals(30));
      expect(scalingKey_0_8_30.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_31 = channel_0_8.scalingKeys.elementAt(31);
      expect(scalingKey_0_8_31.time, moreOrLessEquals(31));
      expect(scalingKey_0_8_31.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_32 = channel_0_8.scalingKeys.elementAt(32);
      expect(scalingKey_0_8_32.time, moreOrLessEquals(32));
      expect(scalingKey_0_8_32.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_33 = channel_0_8.scalingKeys.elementAt(33);
      expect(scalingKey_0_8_33.time, moreOrLessEquals(33));
      expect(scalingKey_0_8_33.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_34 = channel_0_8.scalingKeys.elementAt(34);
      expect(scalingKey_0_8_34.time, moreOrLessEquals(34));
      expect(scalingKey_0_8_34.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_35 = channel_0_8.scalingKeys.elementAt(35);
      expect(scalingKey_0_8_35.time, moreOrLessEquals(35));
      expect(scalingKey_0_8_35.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_36 = channel_0_8.scalingKeys.elementAt(36);
      expect(scalingKey_0_8_36.time, moreOrLessEquals(36));
      expect(scalingKey_0_8_36.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_37 = channel_0_8.scalingKeys.elementAt(37);
      expect(scalingKey_0_8_37.time, moreOrLessEquals(37));
      expect(scalingKey_0_8_37.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_38 = channel_0_8.scalingKeys.elementAt(38);
      expect(scalingKey_0_8_38.time, moreOrLessEquals(38));
      expect(scalingKey_0_8_38.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_39 = channel_0_8.scalingKeys.elementAt(39);
      expect(scalingKey_0_8_39.time, moreOrLessEquals(39));
      expect(scalingKey_0_8_39.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_8.preState, equals(AnimBehavior.defaults));
      expect(channel_0_8.postState, equals(AnimBehavior.defaults));
      final  channel_0_9 = animation_0.channels.elementAt(9);
      expect(channel_0_9.positionKeys.length, equals(32));
      final positionKey_0_9_0 = channel_0_9.positionKeys.elementAt(0);
      expect(positionKey_0_9_0.time, isZero);
      expect(positionKey_0_9_0.value, vector3MoreOrLessEquals(Vector3(0, 1.26316, 2.84217e-14)));
      final positionKey_0_9_1 = channel_0_9.positionKeys.elementAt(1);
      expect(positionKey_0_9_1.time, moreOrLessEquals(1));
      expect(positionKey_0_9_1.value, vector3MoreOrLessEquals(Vector3(-9.55203e-10, 1.26316, -2.42598e-11)));
      final positionKey_0_9_2 = channel_0_9.positionKeys.elementAt(2);
      expect(positionKey_0_9_2.time, moreOrLessEquals(2));
      expect(positionKey_0_9_2.value, vector3MoreOrLessEquals(Vector3(-1.91041e-09, 1.26316, -4.8548e-11)));
      final positionKey_0_9_3 = channel_0_9.positionKeys.elementAt(3);
      expect(positionKey_0_9_3.time, moreOrLessEquals(3));
      expect(positionKey_0_9_3.value, vector3MoreOrLessEquals(Vector3(-2.86561e-09, 1.26316, -7.28362e-11)));
      final positionKey_0_9_4 = channel_0_9.positionKeys.elementAt(4);
      expect(positionKey_0_9_4.time, moreOrLessEquals(4));
      expect(positionKey_0_9_4.value, vector3MoreOrLessEquals(Vector3(-3.82081e-09, 1.26316, -9.71244e-11)));
      final positionKey_0_9_5 = channel_0_9.positionKeys.elementAt(5);
      expect(positionKey_0_9_5.time, moreOrLessEquals(5));
      expect(positionKey_0_9_5.value, vector3MoreOrLessEquals(Vector3(-4.77601e-09, 1.26316, -1.21413e-10)));
      final positionKey_0_9_6 = channel_0_9.positionKeys.elementAt(6);
      expect(positionKey_0_9_6.time, moreOrLessEquals(6));
      expect(positionKey_0_9_6.value, vector3MoreOrLessEquals(Vector3(-5.73122e-09, 1.26316, -1.45701e-10)));
      final positionKey_0_9_7 = channel_0_9.positionKeys.elementAt(7);
      expect(positionKey_0_9_7.time, moreOrLessEquals(7));
      expect(positionKey_0_9_7.value, vector3MoreOrLessEquals(Vector3(-6.68642e-09, 1.26316, -1.69989e-10)));
      final positionKey_0_9_8 = channel_0_9.positionKeys.elementAt(8);
      expect(positionKey_0_9_8.time, moreOrLessEquals(8));
      expect(positionKey_0_9_8.value, vector3MoreOrLessEquals(Vector3(-7.64162e-09, 1.26316, -1.94277e-10)));
      final positionKey_0_9_9 = channel_0_9.positionKeys.elementAt(9);
      expect(positionKey_0_9_9.time, moreOrLessEquals(9));
      expect(positionKey_0_9_9.value, vector3MoreOrLessEquals(Vector3(-8.59682e-09, 1.26316, -2.18566e-10)));
      final positionKey_0_9_10 = channel_0_9.positionKeys.elementAt(10);
      expect(positionKey_0_9_10.time, moreOrLessEquals(10));
      expect(positionKey_0_9_10.value, vector3MoreOrLessEquals(Vector3(-9.55203e-09, 1.26316, -2.42854e-10)));
      final positionKey_0_9_11 = channel_0_9.positionKeys.elementAt(11);
      expect(positionKey_0_9_11.time, moreOrLessEquals(11));
      expect(positionKey_0_9_11.value, vector3MoreOrLessEquals(Vector3(-1.05072e-08, 1.26316, -2.67142e-10)));
      final positionKey_0_9_12 = channel_0_9.positionKeys.elementAt(12);
      expect(positionKey_0_9_12.time, moreOrLessEquals(12));
      expect(positionKey_0_9_12.value, vector3MoreOrLessEquals(Vector3(-1.14624e-08, 1.26316, -2.9143e-10)));
      final positionKey_0_9_13 = channel_0_9.positionKeys.elementAt(13);
      expect(positionKey_0_9_13.time, moreOrLessEquals(13));
      expect(positionKey_0_9_13.value, vector3MoreOrLessEquals(Vector3(-1.24176e-08, 1.26316, -3.15718e-10)));
      final positionKey_0_9_14 = channel_0_9.positionKeys.elementAt(14);
      expect(positionKey_0_9_14.time, moreOrLessEquals(14));
      expect(positionKey_0_9_14.value, vector3MoreOrLessEquals(Vector3(-1.33728e-08, 1.26316, -3.40007e-10)));
      final positionKey_0_9_15 = channel_0_9.positionKeys.elementAt(15);
      expect(positionKey_0_9_15.time, moreOrLessEquals(15));
      expect(positionKey_0_9_15.value, vector3MoreOrLessEquals(Vector3(-1.4328e-08, 1.26316, -3.64295e-10)));
      final positionKey_0_9_16 = channel_0_9.positionKeys.elementAt(16);
      expect(positionKey_0_9_16.time, moreOrLessEquals(16));
      expect(positionKey_0_9_16.value, vector3MoreOrLessEquals(Vector3(-1.52832e-08, 1.26316, -3.88583e-10)));
      final positionKey_0_9_17 = channel_0_9.positionKeys.elementAt(17);
      expect(positionKey_0_9_17.time, moreOrLessEquals(17));
      expect(positionKey_0_9_17.value, vector3MoreOrLessEquals(Vector3(-1.62384e-08, 1.26316, -4.12871e-10)));
      final positionKey_0_9_18 = channel_0_9.positionKeys.elementAt(18);
      expect(positionKey_0_9_18.time, moreOrLessEquals(18));
      expect(positionKey_0_9_18.value, vector3MoreOrLessEquals(Vector3(-1.71936e-08, 1.26316, -4.37159e-10)));
      final positionKey_0_9_19 = channel_0_9.positionKeys.elementAt(19);
      expect(positionKey_0_9_19.time, moreOrLessEquals(19));
      expect(positionKey_0_9_19.value, vector3MoreOrLessEquals(Vector3(-1.81488e-08, 1.26316, -4.61448e-10)));
      final positionKey_0_9_20 = channel_0_9.positionKeys.elementAt(20);
      expect(positionKey_0_9_20.time, moreOrLessEquals(20));
      expect(positionKey_0_9_20.value, vector3MoreOrLessEquals(Vector3(-1.91041e-08, 1.26316, -4.85736e-10)));
      final positionKey_0_9_21 = channel_0_9.positionKeys.elementAt(21);
      expect(positionKey_0_9_21.time, moreOrLessEquals(21));
      expect(positionKey_0_9_21.value, vector3MoreOrLessEquals(Vector3(-2.00593e-08, 1.26316, -5.10024e-10)));
      final positionKey_0_9_22 = channel_0_9.positionKeys.elementAt(22);
      expect(positionKey_0_9_22.time, moreOrLessEquals(22));
      expect(positionKey_0_9_22.value, vector3MoreOrLessEquals(Vector3(-2.10145e-08, 1.26316, -5.34312e-10)));
      final positionKey_0_9_23 = channel_0_9.positionKeys.elementAt(23);
      expect(positionKey_0_9_23.time, moreOrLessEquals(23));
      expect(positionKey_0_9_23.value, vector3MoreOrLessEquals(Vector3(-2.19697e-08, 1.26316, -5.58601e-10)));
      final positionKey_0_9_24 = channel_0_9.positionKeys.elementAt(24);
      expect(positionKey_0_9_24.time, moreOrLessEquals(24));
      expect(positionKey_0_9_24.value, vector3MoreOrLessEquals(Vector3(-2.29249e-08, 1.26316, -5.82889e-10)));
      final positionKey_0_9_25 = channel_0_9.positionKeys.elementAt(25);
      expect(positionKey_0_9_25.time, moreOrLessEquals(25));
      expect(positionKey_0_9_25.value, vector3MoreOrLessEquals(Vector3(-2.38801e-08, 1.26316, -6.07177e-10)));
      final positionKey_0_9_26 = channel_0_9.positionKeys.elementAt(26);
      expect(positionKey_0_9_26.time, moreOrLessEquals(26));
      expect(positionKey_0_9_26.value, vector3MoreOrLessEquals(Vector3(-2.48353e-08, 1.26316, -6.31465e-10)));
      final positionKey_0_9_27 = channel_0_9.positionKeys.elementAt(27);
      expect(positionKey_0_9_27.time, moreOrLessEquals(27));
      expect(positionKey_0_9_27.value, vector3MoreOrLessEquals(Vector3(-2.57905e-08, 1.26316, -6.55753e-10)));
      final positionKey_0_9_28 = channel_0_9.positionKeys.elementAt(28);
      expect(positionKey_0_9_28.time, moreOrLessEquals(28));
      expect(positionKey_0_9_28.value, vector3MoreOrLessEquals(Vector3(-2.67457e-08, 1.26316, -6.80042e-10)));
      final positionKey_0_9_29 = channel_0_9.positionKeys.elementAt(29);
      expect(positionKey_0_9_29.time, moreOrLessEquals(29));
      expect(positionKey_0_9_29.value, vector3MoreOrLessEquals(Vector3(-2.77009e-08, 1.26316, -7.0433e-10)));
      final positionKey_0_9_30 = channel_0_9.positionKeys.elementAt(30);
      expect(positionKey_0_9_30.time, moreOrLessEquals(30));
      expect(positionKey_0_9_30.value, vector3MoreOrLessEquals(Vector3(-2.86561e-08, 1.26316, -7.28618e-10)));
      final positionKey_0_9_31 = channel_0_9.positionKeys.elementAt(31);
      expect(positionKey_0_9_31.time, moreOrLessEquals(39));
      expect(positionKey_0_9_31.value, vector3MoreOrLessEquals(Vector3(-3.72529e-08, 1.26316, -9.47212e-10)));
      expect(channel_0_9.rotationKeys.length, equals(32));
      final rotationKey_0_9_0 = channel_0_9.rotationKeys.elementAt(0);
      expect(rotationKey_0_9_0.time, isZero);
      expect(rotationKey_0_9_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_9_1 = channel_0_9.rotationKeys.elementAt(1);
      expect(rotationKey_0_9_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_9_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.00562164, 0.00562164)));
      final rotationKey_0_9_2 = channel_0_9.rotationKeys.elementAt(2);
      expect(rotationKey_0_9_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_9_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0225747, 0.0225747)));
      final rotationKey_0_9_3 = channel_0_9.rotationKeys.elementAt(3);
      expect(rotationKey_0_9_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_9_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0502239, 0.0502239)));
      final rotationKey_0_9_4 = channel_0_9.rotationKeys.elementAt(4);
      expect(rotationKey_0_9_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_9_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0864617, 0.0864617)));
      final rotationKey_0_9_5 = channel_0_9.rotationKeys.elementAt(5);
      expect(rotationKey_0_9_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_9_5.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.127463, 0.127463)));
      final rotationKey_0_9_6 = channel_0_9.rotationKeys.elementAt(6);
      expect(rotationKey_0_9_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_9_6.value, quaternionMoreOrLessEquals(Quaternion(1.11517e-09, 1.90323e-10, 0.168236, 0.168236)));
      final rotationKey_0_9_7 = channel_0_9.rotationKeys.elementAt(7);
      expect(rotationKey_0_9_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_9_7.value, quaternionMoreOrLessEquals(Quaternion(1.29211e-09, 2.69135e-10, 0.203915, 0.203915)));
      final rotationKey_0_9_8 = channel_0_9.rotationKeys.elementAt(8);
      expect(rotationKey_0_9_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_9_8.value, quaternionMoreOrLessEquals(Quaternion(1.4676e-09, 3.4839e-10, 0.230969, 0.230969)));
      final rotationKey_0_9_9 = channel_0_9.rotationKeys.elementAt(9);
      expect(rotationKey_0_9_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_9_9.value, quaternionMoreOrLessEquals(Quaternion(1.6441e-09, 4.20131e-10, 0.247582, 0.247582)));
      final rotationKey_0_9_10 = channel_0_9.rotationKeys.elementAt(10);
      expect(rotationKey_0_9_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_9_10.value, quaternionMoreOrLessEquals(Quaternion(1.824e-09, 4.77577e-10, 0.253291, 0.253291)));
      final rotationKey_0_9_11 = channel_0_9.rotationKeys.elementAt(11);
      expect(rotationKey_0_9_11.time, moreOrLessEquals(11));
      expect(rotationKey_0_9_11.value, quaternionMoreOrLessEquals(Quaternion(2.01205e-09, 5.03236e-10, 0.242636, 0.242636)));
      final rotationKey_0_9_12 = channel_0_9.rotationKeys.elementAt(12);
      expect(rotationKey_0_9_12.time, moreOrLessEquals(12));
      expect(rotationKey_0_9_12.value, quaternionMoreOrLessEquals(Quaternion(2.21245e-09, 4.73638e-10, 0.209335, 0.209335)));
      final rotationKey_0_9_13 = channel_0_9.rotationKeys.elementAt(13);
      expect(rotationKey_0_9_13.time, moreOrLessEquals(13));
      expect(rotationKey_0_9_13.value, quaternionMoreOrLessEquals(Quaternion(2.42214e-09, 3.75881e-10, 0.15335, 0.15335)));
      final rotationKey_0_9_14 = channel_0_9.rotationKeys.elementAt(14);
      expect(rotationKey_0_9_14.time, moreOrLessEquals(14));
      expect(rotationKey_0_9_14.value, quaternionMoreOrLessEquals(Quaternion(2.63169e-09, 2.05157e-10, 0.0777203, 0.0777203)));
      final rotationKey_0_9_15 = channel_0_9.rotationKeys.elementAt(15);
      expect(rotationKey_0_9_15.time, moreOrLessEquals(15));
      expect(rotationKey_0_9_15.value, quaternionMoreOrLessEquals(Quaternion(2.82809e-09, -2.73307e-11, -0.00966356, -0.00966356)));
      final rotationKey_0_9_16 = channel_0_9.rotationKeys.elementAt(16);
      expect(rotationKey_0_9_16.time, moreOrLessEquals(16));
      expect(rotationKey_0_9_16.value, quaternionMoreOrLessEquals(Quaternion(3.00258e-09, -2.92326e-10, -0.0969001, -0.0969001)));
      final rotationKey_0_9_17 = channel_0_9.rotationKeys.elementAt(17);
      expect(rotationKey_0_9_17.time, moreOrLessEquals(17));
      expect(rotationKey_0_9_17.value, quaternionMoreOrLessEquals(Quaternion(3.15745e-09, -5.51927e-10, -0.172191, -0.172191)));
      final rotationKey_0_9_18 = channel_0_9.rotationKeys.elementAt(18);
      expect(rotationKey_0_9_18.time, moreOrLessEquals(18));
      expect(rotationKey_0_9_18.value, quaternionMoreOrLessEquals(Quaternion(3.30459e-09, -7.73341e-10, -0.227864, -0.227864)));
      final rotationKey_0_9_19 = channel_0_9.rotationKeys.elementAt(19);
      expect(rotationKey_0_9_19.time, moreOrLessEquals(19));
      expect(rotationKey_0_9_19.value, quaternionMoreOrLessEquals(Quaternion(3.45819e-09, -9.35238e-10, -0.261063, -0.261063)));
      final rotationKey_0_9_20 = channel_0_9.rotationKeys.elementAt(20);
      expect(rotationKey_0_9_20.time, moreOrLessEquals(20));
      expect(rotationKey_0_9_20.value, quaternionMoreOrLessEquals(Quaternion(3.6289e-09, -1.02532e-09, -0.271898, -0.271898)));
      final rotationKey_0_9_21 = channel_0_9.rotationKeys.elementAt(21);
      expect(rotationKey_0_9_21.time, moreOrLessEquals(21));
      expect(rotationKey_0_9_21.value, quaternionMoreOrLessEquals(Quaternion(3.81706e-09, -1.05251e-09, -0.265819, -0.265819)));
      final rotationKey_0_9_22 = channel_0_9.rotationKeys.elementAt(22);
      expect(rotationKey_0_9_22.time, moreOrLessEquals(22));
      expect(rotationKey_0_9_22.value, quaternionMoreOrLessEquals(Quaternion(3.75943e-09, -2.04327e-09, -0.247396, -0.247396)));
      final rotationKey_0_9_23 = channel_0_9.rotationKeys.elementAt(23);
      expect(rotationKey_0_9_23.time, moreOrLessEquals(23));
      expect(rotationKey_0_9_23.value, quaternionMoreOrLessEquals(Quaternion(3.99498e-09, -2.01261e-09, -0.217078, -0.217078)));
      final rotationKey_0_9_24 = channel_0_9.rotationKeys.elementAt(24);
      expect(rotationKey_0_9_24.time, moreOrLessEquals(24));
      expect(rotationKey_0_9_24.value, quaternionMoreOrLessEquals(Quaternion(4.25129e-09, -1.9274e-09, -0.176867, -0.176867)));
      final rotationKey_0_9_25 = channel_0_9.rotationKeys.elementAt(25);
      expect(rotationKey_0_9_25.time, moreOrLessEquals(25));
      expect(rotationKey_0_9_25.value, quaternionMoreOrLessEquals(Quaternion(4.51723e-09, -1.79902e-09, -0.130777, -0.130777)));
      final rotationKey_0_9_26 = channel_0_9.rotationKeys.elementAt(26);
      expect(rotationKey_0_9_26.time, moreOrLessEquals(26));
      expect(rotationKey_0_9_26.value, quaternionMoreOrLessEquals(Quaternion(4.78006e-09, -1.64987e-09, -0.0844022, -0.0844022)));
      final rotationKey_0_9_27 = channel_0_9.rotationKeys.elementAt(27);
      expect(rotationKey_0_9_27.time, moreOrLessEquals(27));
      expect(rotationKey_0_9_27.value, quaternionMoreOrLessEquals(Quaternion(5.02999e-09, -1.50832e-09, -0.0434695, -0.0434695)));
      final rotationKey_0_9_28 = channel_0_9.rotationKeys.elementAt(28);
      expect(rotationKey_0_9_28.time, moreOrLessEquals(28));
      expect(rotationKey_0_9_28.value, quaternionMoreOrLessEquals(Quaternion(5.26251e-09, -1.40085e-09, -0.0123105, -0.0123105)));
      final rotationKey_0_9_29 = channel_0_9.rotationKeys.elementAt(29);
      expect(rotationKey_0_9_29.time, moreOrLessEquals(29));
      expect(rotationKey_0_9_29.value, quaternionMoreOrLessEquals(Quaternion(5.47712e-09, -1.34672e-09, 0.00675145, 0.00675145)));
      final rotationKey_0_9_30 = channel_0_9.rotationKeys.elementAt(30);
      expect(rotationKey_0_9_30.time, moreOrLessEquals(30));
      expect(rotationKey_0_9_30.value, quaternionMoreOrLessEquals(Quaternion(5.67467e-09, -1.35737e-09, 0.0130638, 0.0130638)));
      final rotationKey_0_9_31 = channel_0_9.rotationKeys.elementAt(31);
      expect(rotationKey_0_9_31.time, moreOrLessEquals(39));
      expect(rotationKey_0_9_31.value, quaternionMoreOrLessEquals(Quaternion(7.37707e-09, -1.76458e-09, 0.0130638, 0.0130638)));
      expect(channel_0_9.scalingKeys.length, equals(32));
      final scalingKey_0_9_0 = channel_0_9.scalingKeys.elementAt(0);
      expect(scalingKey_0_9_0.time, isZero);
      expect(scalingKey_0_9_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_1 = channel_0_9.scalingKeys.elementAt(1);
      expect(scalingKey_0_9_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_9_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_2 = channel_0_9.scalingKeys.elementAt(2);
      expect(scalingKey_0_9_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_9_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_3 = channel_0_9.scalingKeys.elementAt(3);
      expect(scalingKey_0_9_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_9_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_4 = channel_0_9.scalingKeys.elementAt(4);
      expect(scalingKey_0_9_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_9_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_5 = channel_0_9.scalingKeys.elementAt(5);
      expect(scalingKey_0_9_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_9_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_6 = channel_0_9.scalingKeys.elementAt(6);
      expect(scalingKey_0_9_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_9_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_7 = channel_0_9.scalingKeys.elementAt(7);
      expect(scalingKey_0_9_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_9_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_8 = channel_0_9.scalingKeys.elementAt(8);
      expect(scalingKey_0_9_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_9_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_9 = channel_0_9.scalingKeys.elementAt(9);
      expect(scalingKey_0_9_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_9_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_10 = channel_0_9.scalingKeys.elementAt(10);
      expect(scalingKey_0_9_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_9_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_11 = channel_0_9.scalingKeys.elementAt(11);
      expect(scalingKey_0_9_11.time, moreOrLessEquals(11));
      expect(scalingKey_0_9_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_12 = channel_0_9.scalingKeys.elementAt(12);
      expect(scalingKey_0_9_12.time, moreOrLessEquals(12));
      expect(scalingKey_0_9_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_13 = channel_0_9.scalingKeys.elementAt(13);
      expect(scalingKey_0_9_13.time, moreOrLessEquals(13));
      expect(scalingKey_0_9_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_14 = channel_0_9.scalingKeys.elementAt(14);
      expect(scalingKey_0_9_14.time, moreOrLessEquals(14));
      expect(scalingKey_0_9_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_15 = channel_0_9.scalingKeys.elementAt(15);
      expect(scalingKey_0_9_15.time, moreOrLessEquals(15));
      expect(scalingKey_0_9_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_16 = channel_0_9.scalingKeys.elementAt(16);
      expect(scalingKey_0_9_16.time, moreOrLessEquals(16));
      expect(scalingKey_0_9_16.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_17 = channel_0_9.scalingKeys.elementAt(17);
      expect(scalingKey_0_9_17.time, moreOrLessEquals(17));
      expect(scalingKey_0_9_17.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_18 = channel_0_9.scalingKeys.elementAt(18);
      expect(scalingKey_0_9_18.time, moreOrLessEquals(18));
      expect(scalingKey_0_9_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_19 = channel_0_9.scalingKeys.elementAt(19);
      expect(scalingKey_0_9_19.time, moreOrLessEquals(19));
      expect(scalingKey_0_9_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_20 = channel_0_9.scalingKeys.elementAt(20);
      expect(scalingKey_0_9_20.time, moreOrLessEquals(20));
      expect(scalingKey_0_9_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_21 = channel_0_9.scalingKeys.elementAt(21);
      expect(scalingKey_0_9_21.time, moreOrLessEquals(21));
      expect(scalingKey_0_9_21.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_22 = channel_0_9.scalingKeys.elementAt(22);
      expect(scalingKey_0_9_22.time, moreOrLessEquals(22));
      expect(scalingKey_0_9_22.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_23 = channel_0_9.scalingKeys.elementAt(23);
      expect(scalingKey_0_9_23.time, moreOrLessEquals(23));
      expect(scalingKey_0_9_23.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_24 = channel_0_9.scalingKeys.elementAt(24);
      expect(scalingKey_0_9_24.time, moreOrLessEquals(24));
      expect(scalingKey_0_9_24.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_25 = channel_0_9.scalingKeys.elementAt(25);
      expect(scalingKey_0_9_25.time, moreOrLessEquals(25));
      expect(scalingKey_0_9_25.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_26 = channel_0_9.scalingKeys.elementAt(26);
      expect(scalingKey_0_9_26.time, moreOrLessEquals(26));
      expect(scalingKey_0_9_26.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_27 = channel_0_9.scalingKeys.elementAt(27);
      expect(scalingKey_0_9_27.time, moreOrLessEquals(27));
      expect(scalingKey_0_9_27.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_28 = channel_0_9.scalingKeys.elementAt(28);
      expect(scalingKey_0_9_28.time, moreOrLessEquals(28));
      expect(scalingKey_0_9_28.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_29 = channel_0_9.scalingKeys.elementAt(29);
      expect(scalingKey_0_9_29.time, moreOrLessEquals(29));
      expect(scalingKey_0_9_29.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_30 = channel_0_9.scalingKeys.elementAt(30);
      expect(scalingKey_0_9_30.time, moreOrLessEquals(30));
      expect(scalingKey_0_9_30.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_31 = channel_0_9.scalingKeys.elementAt(31);
      expect(scalingKey_0_9_31.time, moreOrLessEquals(39));
      expect(scalingKey_0_9_31.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_9.preState, equals(AnimBehavior.defaults));
      expect(channel_0_9.postState, equals(AnimBehavior.defaults));
      expect(animation_0.meshChannels.length, isZero);
      expect(animation_0.meshMorphChannels.length, isZero);
    });
  });

  test('obj', () {
    testScene('Obj/Spider/spider.obj', (scene) {
      final animations = scene.animations;
      expect(animations, isEmpty);
      expect(animations.length, isZero);
    });
  });

}
